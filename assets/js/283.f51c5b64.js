(window.webpackJsonp=window.webpackJsonp||[]).push([[283],{621:function(a,t,s){"use strict";s.r(t);var i=s(4),e=Object(i.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("p",[a._v("水平居中，垂直居中，单列布局，多列布局")]),a._v(" "),t("h2",{attrs:{id:"常用居中方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常用居中方法"}},[a._v("#")]),a._v(" 常用居中方法")]),a._v(" "),t("p",[a._v("居中在布局中很常见，我们假设 DOM 文档节后如下，子元素要在父元素中居中")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v('<div class="parent">\n    <div class="child"></div>\n</div>\n')])])]),t("h3",{attrs:{id:"水平居中"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#水平居中"}},[a._v("#")]),a._v(" 水平居中")]),a._v(" "),t("p",[a._v("子元素为行内元素还是块状元素，宽度一定还是宽度未定，采取的布局方案不同")]),a._v(" "),t("p",[a._v("子元素为：")]),a._v(" "),t("p",[a._v("**行内元素：对父元素设置 text-align:center,\n**定宽块状元素：设置左右 margin 值为 auto，\n**不定宽块状元素：设置子元素为 display：inline,然后在父元素上设置 text-align:center,\n**通用方案：flex 布局，对父元素设置 display:flex;justify-content:center;")]),a._v(" "),t("h3",{attrs:{id:"垂直居中"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#垂直居中"}},[a._v("#")]),a._v(" 垂直居中：")]),a._v(" "),t("p",[a._v("垂直居中对于子元素是单行内联文本、多行内联文本以及块状元素采用的方案是不同的。")]),a._v(" "),t("p",[a._v("**父元素一定，子元素为单行内联文本：\n设置父元素的 height 等于行高 line-height\n**父元素一定，子元素为多行内联文本：\n设置父元素的 display：table-cell 或 inline-block，在设置 vertical-align：middle；\n**块状元素：\n设置子元素篇 position:absolute 并设置 top、bottom 为 0，父元素要设置定位为 static 以外的值，margin:auto;\n**通用方案：\nflex 布局，对父元素设置 display：flex；align-items:center；")]),a._v(" "),t("h2",{attrs:{id:"单列布局"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#单列布局"}},[a._v("#")]),a._v(" 单列布局")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://pic4.zhimg.com/v2-12cd0eddc97721987b9f6e41e5a1fc4b_b.png",alt:"单行布局的两种形式"}})]),a._v(" "),t("p",[a._v("特征： 定宽、水平居中")]),a._v(" "),t("p",[a._v("常见的单列布局有两种：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v("* 一种是header、content、footer宽度都相同，期一般不会占满浏览器的最宽宽度，但当浏览器宽度缩小低于最大宽度时，宽度会自适应。\n* 一种是header、footer宽度为浏览器宽度，但content以及header和footer里的内容却不会占满浏览器宽度。\n")])])]),t("p",[a._v("对于第一种，对 header、content、footer 统一设置 width 或 max-width，并通过 margin:auto 实现居中。")]),a._v(" "),t("h3",{attrs:{id:"dom-文档"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dom-文档"}},[a._v("#")]),a._v(" DOM 文档")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v('<div class="layout">\n    <div class="header">头部</div>\n    <div class="content">内容</div>\n    <div class="footer">尾部</div>\n</div>\n')])])]),t("h3",{attrs:{id:"css-清单"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#css-清单"}},[a._v("#")]),a._v(" css 清单")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v(".layout{\n/*   width: 960px; *//*设置width当浏览器窗口宽度小于960px时，单列布局不会自适应。*/\nmax-width: 960px;\nmargin: 0 auto;\n}\n")])])]),t("p",[a._v("对于第二种，header，footer 的内容宽度为 100%，单 header，footer 的内容区以及 content 统一设置为 width 或者 max-width，并通过 margin：auto 实现。")]),a._v(" "),t("h3",{attrs:{id:"dom-文档-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dom-文档-2"}},[a._v("#")]),a._v(" DOM 文档")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v('<div id="header">\n  <div class="layout">头部</div>\n</div>\n<div id="content" class="layout">内容</div>\n<div id="footer">\n  <div class="layout">尾部</div>\n</div>\n')])])]),t("h3",{attrs:{id:"css-清单-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#css-清单-2"}},[a._v("#")]),a._v(" css 清单")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v(".layout{\n/*   width: 960px; *//*设置width当浏览器窗口宽度小于960px时，单列布局不会自适应。*/\nmax-width: 960px;\nmargin: 0 auto;\n}\n")])])]),t("h2",{attrs:{id:"二列-三列布局"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二列-三列布局"}},[a._v("#")]),a._v(" 二列&三列布局")]),a._v(" "),t("p",[a._v("1"),t("a",{attrs:{href:"https://pic2.zhimg.com/v2-784022577a47ea5fc449b06de53c4651_b.png",target:"_blank",rel:"noopener noreferrer"}},[a._v("二列三列布局"),t("OutboundLink")],1)]),a._v(" "),t("p",[a._v("二列布局的特征是侧栏固定宽度，主栏自适应宽度。三列布局的特征是两侧两列固定宽度，中间列自适应宽度。")]),a._v(" "),t("p",[a._v("之所以将二列布局和三列布局写在一起，是因为二列布局可以看做是去掉一个侧栏的三列布局，其布局的思想有异曲同工之妙。对于传统的实现方法，主要讨论上图中前三种布局，经典的带有侧栏的二栏布局以及带有左右侧栏的三栏布局，对于 flex 布局，实现了上图的五种布局。")]),a._v(" "),t("h3",{attrs:{id:"a-float-margin"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#a-float-margin"}},[a._v("#")]),a._v(" a.float+margin")]),a._v(" "),t("p",[a._v("**原理说明： 设置两个侧栏分别向左向右浮动，中间列通过外边距给两个侧栏腾出空间，中间列的宽度根据浏览器窗口自适应。")]),a._v(" "),t("h4",{attrs:{id:"dom-文档-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dom-文档-3"}},[a._v("#")]),a._v(" DOM 文档")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v('<div id="content">\n    <div class="sub">sub</div>\n    <div class="extra">extra</div>\n    <div class="main">main</div>\n</div>\n')])])]),t("p",[a._v("布局步骤：")]),a._v(" "),t("ol",[t("li",[a._v("对两边侧栏分别设置宽度，并对左侧栏添加左浮动，右侧栏添加右浮动。")]),a._v(" "),t("li",[a._v("对主面板设置左右外边距，margin-left 的值为左侧栏的宽度，margin-right 的值为有侧栏的宽度。")])]),a._v(" "),t("h4",{attrs:{id:"css-清单-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#css-清单-3"}},[a._v("#")]),a._v(" css 清单")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v(".sub{\n    width: 100px;\n    float: left;\n}\n.extra{\n    width: 200px;\n    float: right;\n}\n.main{\n    margin-left: 100px;\n    margin-right: 200px;\n}\n")])])]),t("h4",{attrs:{id:"说明"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#说明"}},[a._v("#")]),a._v(" 说明")]),a._v(" "),t("ul",[t("li",[a._v("注意 dom 文档的书写顺序，先写两侧栏，在写主面板，更换后则侧栏会被挤到下一列.")]),a._v(" "),t("li",[a._v("这种布局方式比较简单明了，单缺点是渲染师先渲染了侧边栏，而不是比较重要的主面板。")])]),a._v(" "),t("h4",{attrs:{id:"两列的实现方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#两列的实现方法"}},[a._v("#")]),a._v(" 两列的实现方法")]),a._v(" "),t("p",[a._v("如果是左边带有侧栏的二栏布局，则去掉右侧栏，不要设置主面板的 margin-right 值，其他操作相同。反之亦然。")]),a._v(" "),t("h3",{attrs:{id:"b-position-margin"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#b-position-margin"}},[a._v("#")]),a._v(" b.position+margin")]),a._v(" "),t("p",[a._v("*原理说明：通过绝对定位将两个侧栏固定，同样通过外边距给两个侧栏腾出空间，中间列自适应。")]),a._v(" "),t("h4",{attrs:{id:"dom-文档-4"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dom-文档-4"}},[a._v("#")]),a._v(" DOM 文档")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v('<div class="sub">left</div>\n<div class="main">main</div>\n<div class="extra">right</div>\n')])])]),t("p",[a._v("布局步骤：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v("1. 对两边侧栏分别设置宽度，设置定位方式为绝对定位。\n2. 设置两侧栏的top值都为0，设置左侧栏的left值为0，右侧栏的right为0.\n3. 对主面板设置左右外边距，margin-left的值为左侧栏的宽度，margin-right的值为有侧栏的宽度。\n")])])]),t("h4",{attrs:{id:"css-清单-4"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#css-清单-4"}},[a._v("#")]),a._v(" css 清单")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v(".sub, .extra {\n    position: absolute;\n    top: 0;\n    width: 200px;\n}\n.sub {\n    left: 0;\n}\n.extra {\n    right: 0;\n}\n.main {\n    margin: 0 200px;\n}\n")])])]),t("ul",[t("li",[t("p",[a._v("本方法不限制 DOM 书写顺序，先写主面板会使主面板部分优先渲染（一般主面板会比侧栏内容重要）。")])]),a._v(" "),t("li",[t("p",[a._v("与上一种方法相比，本种方法是通过定位来实现侧栏的位置固定。")])]),a._v(" "),t("li",[t("p",[a._v("如果中间栏含有最小宽度限制，或是含有宽度的内部元素，则浏览器窗口小到一定程度，主面板与侧栏会发生重叠。")])])]),a._v(" "),t("h4",{attrs:{id:"二列的实现方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二列的实现方法"}},[a._v("#")]),a._v(" 二列的实现方法")]),a._v(" "),t("p",[a._v("如果是左边带有侧栏的二栏布局，则去掉右侧栏，不要设置主面板的 margin-right 值，其他操作相同。反之亦然。")]),a._v(" "),t("h3",{attrs:{id:"c-圣杯布局-float-负-margin"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#c-圣杯布局-float-负-margin"}},[a._v("#")]),a._v(" c.圣杯布局(float + 负 margin)")]),a._v(" "),t("h4",{attrs:{id:"原理说明"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#原理说明"}},[a._v("#")]),a._v(" 原理说明：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v("主面板设置宽度为100%，主面板与两个侧栏都设置浮动，常见为左浮动，这时两个侧栏会被主面板挤下去。通过负边距将浮动的侧栏拉上来，左侧栏的负边距为100%，刚好是窗口的宽度，因此会从主面板下面的左边跑到与主面板对其的左边，右侧栏此时浮动在主面板下面的左边，设置负边距为负的自身宽度刚好浮动到主面板对齐的右边。为了避免侧栏遮挡住面板内容，在外层设置左右padding值为左右侧栏的宽度，给侧栏腾出空间，此时主面板的宽度减小。由于侧栏的负margin都是相对主面板的，两个侧栏并不会像我们想象中的停靠在左右两边，而是跟着缩小的主面板一起向中间靠拢。此时使用相对布局，调整两个侧栏到相应的位置。\n")])])]),t("h4",{attrs:{id:"dom-文档-5"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dom-文档-5"}},[a._v("#")]),a._v(" DOM 文档")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v('<div id="bd">\n    <div class="main"></div>\n    <div class="sub"></div>\n    <div class="extra"></div>\n</div>\n')])])]),t("p",[a._v("布局步骤：")]),a._v(" "),t("ol",[t("li",[a._v("三者都设置想左浮动 2.设置 main 宽度为 100%，设置两侧栏的宽度 3.设置负边距，sub 设置负左边距 100%，extra 设置负左边距为负的自身高度 4.设置 mian 的 padding 值给左右两个子面板留出空间 5.设置两个字面板为相对定位，sub 的 left 值为负的 sub 宽度，extra 的 right 值为负的 extra 宽度。")])]),a._v(" "),t("h4",{attrs:{id:"css-清单-5"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#css-清单-5"}},[a._v("#")]),a._v(" css 清单")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v(".main {\nfloat: left;\nwidth: 100%;\n}\n.sub {\nfloat: left;\nwidth: 190px;\nmargin-left: -100%;\nposition: relative;\nleft: -190px;\n}\n.extra {\nfloat: left;\nwidth: 230px;\nmargin-left: -230px;\nposition: relative;\nright: -230px;\n}\n#bd {\npadding: 0 230px 0 190px;\n}\n")])])]),t("h4",{attrs:{id:"说明-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#说明-2"}},[a._v("#")]),a._v(" 说明")]),a._v(" "),t("ul",[t("li",[a._v("dom 元素的书写顺序不得更改")]),a._v(" "),t("li",[a._v("主面板部分优先渲染(一般主面板回避侧栏内容重要)")]),a._v(" "),t("li",[a._v("当面板的 main 内容部分比两边的子面板宽度小的时候，布局就会乱掉，可以通过设置 main 的 mian-width 属性或者使用双飞翼布局避免问题。")])]),a._v(" "),t("h4",{attrs:{id:"二列的实现方法-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二列的实现方法-2"}},[a._v("#")]),a._v(" 二列的实现方法")]),a._v(" "),t("p",[a._v("如果是左边带有侧栏的二栏布局，则去掉右侧栏，不要设置主面板的 padding-right 值，其他操作相同。反之亦然。")]),a._v(" "),t("h3",{attrs:{id:"d-flex-布局"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#d-flex-布局"}},[a._v("#")]),a._v(" d flex 布局，")]),a._v(" "),t("p",[a._v("这个主要看阮一峰老师的教程")]),a._v(" "),t("p",[a._v("语法篇： http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html?utm_source=tuicool")]),a._v(" "),t("p",[a._v("实例篇： http://www.ruanyifeng.com/blog/2015/07/flex-examples.html")]),a._v(" "),t("p",[a._v("总结： 统的布局方法基于盒状模型，依赖 display 属性 + position 属性 + float 属性，逻辑相对复杂，对于实现一些特殊效果，例如垂直居中，尤其复杂繁琐。而 flex 布局中的 flex 容器可以根据实际可用空间动态调整子元素的宽高比和顺序，使元素能够尽可能地利用可用空间，同时也能通过缩小来避免超出。flex 布局提供了一套简便、完整、响应式的布局方案。")]),a._v(" "),t("p",[a._v("转自：https://zhuanlan.zhihu.com/p/25565751")])])}),[],!1,null,null,null);t.default=e.exports}}]);