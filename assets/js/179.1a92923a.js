(window.webpackJsonp=window.webpackJsonp||[]).push([[179],{518:function(t,a,s){"use strict";s.r(a);var n=s(4),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",{attrs:{"data-nodeid":"9577"}},[t._v("不管是团队的扩张还是业务的发展，都会导致项目代码量出现爆炸式增长。为了防止“野蛮生长”现象，我们需要有一个良好的技术选型和成熟的架构做支撑，也需要团队中每一个开发者都能用心维护项目。在此方向上，除了人工 code review 以外，相信大家对于一些规范工具并不陌生。")]),t._v(" "),a("p",{attrs:{"data-nodeid":"9578"}},[t._v("作为一名前端工程师，"),a("strong",{attrs:{"data-nodeid":"9739"}},[t._v("在使用现代化工具的基础上，如何尽可能发挥其能量？在必要的情况下，如何开发适合自己团队需求的工具")]),t._v("？这一讲，我们将围绕这些问题展开。")]),t._v(" "),a("h3",{attrs:{"data-nodeid":"9579"}},[t._v("自动化工具巡礼")]),t._v(" "),a("p",{attrs:{"data-nodeid":"9580"}},[t._v("现代前端开发，“武器”都已经非常自动化了。不同工具的分工不同，我们的目标是合理结合各种工具，打造一条完善的自动化流水线，以高效率、低投入的方式，为我们的代码质量提供有效保障。")]),t._v(" "),a("h4",{attrs:{"data-nodeid":"9581"}},[t._v("Prettier")]),t._v(" "),a("p",{attrs:{"data-nodeid":"9582"}},[t._v("首先从 Prettier 说起，英文单词 prettier 是 pretty 的比较级，pretty 译为“漂亮、美化”。顾名思义，Prettier 这个工具能够美化我们的代码，或者说"),a("strong",{attrs:{"data-nodeid":"9752"}},[t._v("格式化、规范化代码")]),t._v("，使其更加工整。它一般不会检查我们代码具体的写法，而是在“"),a("strong",{attrs:{"data-nodeid":"9753"}},[t._v("可读性")]),t._v("”上做文章。目前支持包括 JavaScript、JSX、Angular、Vue、Flow、TypeScript、CSS（Less、SCSS）、JSON 等多种语言、数据交换格式、语法规范扩展。")]),t._v(" "),a("p",{attrs:{"data-nodeid":"9583"}},[t._v("总的来说，它能够将原始代码风格移除，并替换为团队统一配置的代码风格。虽然几乎所有团队都在使用这款工具，这里我们还是简单分析一下使用它的原因：")]),t._v(" "),a("ul",{attrs:{"data-nodeid":"9584"}},[a("li",{attrs:{"data-nodeid":"9585"}},[a("p",{attrs:{"data-nodeid":"9586"}},[t._v("构建并统一代码风格")])]),t._v(" "),a("li",{attrs:{"data-nodeid":"9587"}},[a("p",{attrs:{"data-nodeid":"9588"}},[t._v("帮助团队新成员快速融入团队")])]),t._v(" "),a("li",{attrs:{"data-nodeid":"9589"}},[a("p",{attrs:{"data-nodeid":"9590"}},[t._v("开发者可以完全聚焦业务开发，不必在代码整理上花费过多心思")])]),t._v(" "),a("li",{attrs:{"data-nodeid":"9591"}},[a("p",{attrs:{"data-nodeid":"9592"}},[t._v("方便，低成本灵活接入，并快速发挥作用")])]),t._v(" "),a("li",{attrs:{"data-nodeid":"9593"}},[a("p",{attrs:{"data-nodeid":"9594"}},[t._v("清理并规范已有代码")])]),t._v(" "),a("li",{attrs:{"data-nodeid":"9595"}},[a("p",{attrs:{"data-nodeid":"9596"}},[t._v("减少潜在 Bug")])]),t._v(" "),a("li",{attrs:{"data-nodeid":"9597"}},[a("p",{attrs:{"data-nodeid":"9598"}},[t._v("丰富强大的社区支持")])])]),t._v(" "),a("p",{attrs:{"data-nodeid":"12124"}},[t._v("当然，Prettier 也可以与编辑器结合，在开发者保存后立即进行美化，也可以集成到 CI 环境中，或者 Git pre-commit 的 hook 阶段。比如使用 "),a("a",{attrs:{href:"https://www.npmjs.com/package/pretty-quick","data-nodeid":"12128"}},[t._v("pretty-quick")]),t._v("：")]),t._v(" "),a("pre",{staticClass:"lang-java",attrs:{"data-nodeid":"9600"}},[a("code",{attrs:{"data-language":"java"}},[t._v("yarn add prettier pretty-quick husky --dev\n")])]),t._v(" "),a("p",{attrs:{"data-nodeid":"9601"}},[t._v("并在 package.json 中配置：")]),t._v(" "),a("pre",{staticClass:"lang-java",attrs:{"data-nodeid":"9602"}},[a("code",{attrs:{"data-language":"java"}},[t._v("{\n    "),a("span",{staticClass:"hljs-string"},[t._v('"husky"')]),t._v(": {\n        "),a("span",{staticClass:"hljs-string"},[t._v('"hooks"')]),t._v(": {\n            "),a("span",{staticClass:"hljs-string"},[t._v('"pre-commit"')]),t._v(": "),a("span",{staticClass:"hljs-string"},[t._v('"pretty-quick --staged"')]),t._v("\n        }\n    }\n}\n")])]),t._v(" "),a("p",{attrs:{"data-nodeid":"9603"}},[t._v("在 husky 中，定义 pre-commit 阶段，对变化的文件运行 Prettier，--staged 参数表示 pre-commit 模式：只对 staged 的文件进行格式化。")]),t._v(" "),a("p",{staticClass:"te-preview-highlight",attrs:{"data-nodeid":"13584"}},[t._v("这里我们使用了官方推荐的 "),a("a",{attrs:{href:"https://www.npmjs.com/package/pretty-quick","data-nodeid":"13588"}},[t._v("pretty-quick")]),t._v(" 来实现 pre-commit 阶段的美化。这只是实现方式之一，还可以通过 lint-staged 来实现，我们会在下面 ESLint 和 husky 部分介绍。")]),t._v(" "),a("p",{attrs:{"data-nodeid":"9605"}},[t._v("通过 Demo 我们能看出，Prettier 确实很灵活，且自动化程度很高，接入项目也十分方便。")]),t._v(" "),a("h4",{attrs:{"data-nodeid":"9606"}},[t._v("ESLint")]),t._v(" "),a("p",{attrs:{"data-nodeid":"9607"}},[t._v("下面来看一下以 ESLint 为代表的 Linter。Code Linting 表示"),a("strong",{attrs:{"data-nodeid":"9781"}},[t._v("基于静态分析代码原理，找出代码反模式")]),t._v("的过程。多数编程语言都有 Linter，它们往往被集成在编译阶段，完成 Coding Linting 的任务。")]),t._v(" "),a("p",{attrs:{"data-nodeid":"9608"}},[t._v("对于 JavaScript 这种动态、宽松类型的语言来说，开发者更容易犯错。由于 JavaScript 不具备先天编译流程，往往会在运行时暴露错误，而 Linter，尤其最具代表性的 ESLint 的出现，允许开发者在执行前发现代码错误或不合理的写法。")]),t._v(" "),a("p",{attrs:{"data-nodeid":"9609"}},[t._v("ESLint 最重要的几点哲学思想：")]),t._v(" "),a("ul",{attrs:{"data-nodeid":"9610"}},[a("li",{attrs:{"data-nodeid":"9611"}},[a("p",{attrs:{"data-nodeid":"9612"}},[t._v("所有规则都插件化")])]),t._v(" "),a("li",{attrs:{"data-nodeid":"9613"}},[a("p",{attrs:{"data-nodeid":"9614"}},[t._v("所有规则都可插拔（随时开关）")])]),t._v(" "),a("li",{attrs:{"data-nodeid":"9615"}},[a("p",{attrs:{"data-nodeid":"9616"}},[t._v("所有设计都透明化")])]),t._v(" "),a("li",{attrs:{"data-nodeid":"9617"}},[a("p",{attrs:{"data-nodeid":"9618"}},[t._v("使用 Espree 进行 JavaScript 解析")])]),t._v(" "),a("li",{attrs:{"data-nodeid":"9619"}},[a("p",{attrs:{"data-nodeid":"9620"}},[t._v("使用 AST 分析语法")])])]),t._v(" "),a("p",{attrs:{"data-nodeid":"9621"}},[t._v("想要顺利执行 ESLint，还需要安装应用规则插件。")]),t._v(" "),a("p",{attrs:{"data-nodeid":"9622"}},[t._v("那么如何声明并应用规则呢？在根目录中打开 .eslintrc 配置文件，我们在该文件中加入：")]),t._v(" "),a("pre",{staticClass:"lang-java",attrs:{"data-nodeid":"9623"}},[a("code",{attrs:{"data-language":"java"}},[t._v("{\n    "),a("span",{staticClass:"hljs-string"},[t._v('"rules"')]),t._v(": {\n        "),a("span",{staticClass:"hljs-string"},[t._v('"semi"')]),t._v(": ["),a("span",{staticClass:"hljs-string"},[t._v('"error"')]),t._v(", "),a("span",{staticClass:"hljs-string"},[t._v('"always"')]),t._v("],\n        "),a("span",{staticClass:"hljs-string"},[t._v('"quote"')]),t._v(": ["),a("span",{staticClass:"hljs-string"},[t._v('"error"')]),t._v(", "),a("span",{staticClass:"hljs-string"},[t._v('"double"')]),t._v("]\n    }\n}\n")])]),t._v(" "),a("p",{attrs:{"data-nodeid":"9624"}},[t._v("semi、quote 就是 ESLint 规则的名称，其值对应的数组第一项可以为：off/0、warn/1、error/2，分别表示关闭规则、以 warning 形式打开规则、以 error 形式打开规则。")]),t._v(" "),a("ul",{attrs:{"data-nodeid":"9625"}},[a("li",{attrs:{"data-nodeid":"9626"}},[a("p",{attrs:{"data-nodeid":"9627"}},[t._v("off/0：关闭规则")])]),t._v(" "),a("li",{attrs:{"data-nodeid":"9628"}},[a("p",{attrs:{"data-nodeid":"9629"}},[t._v("warn/1：以 warning 形式打开规则")])]),t._v(" "),a("li",{attrs:{"data-nodeid":"9630"}},[a("p",{attrs:{"data-nodeid":"9631"}},[t._v("error/2：以 error 形式打开规则")])])]),t._v(" "),a("p",{attrs:{"data-nodeid":"9632"}},[t._v("同样我们还会在 .eslintrc 文件中发现：")]),t._v(" "),a("pre",{staticClass:"lang-java",attrs:{"data-nodeid":"9633"}},[a("code",{attrs:{"data-language":"java"}},[a("span",{staticClass:"hljs-string"},[t._v('"extends"')]),t._v(": "),a("span",{staticClass:"hljs-string"},[t._v('"eslint:recommended"')]),t._v("\n")])]),t._v(" "),a("p",{attrs:{"data-nodeid":"9634"}},[t._v("这行表示 ESLint 默认的规则都将会被打开。当然，我们也可以选取其他规则集合，比较出名的有：")]),t._v(" "),a("ul",{attrs:{"data-nodeid":"9635"}},[a("li",{attrs:{"data-nodeid":"9636"}},[a("p",{attrs:{"data-nodeid":"9637"}},[a("a",{attrs:{href:"https://google.github.io/styleguide/jsguide.html","data-nodeid":"9799"}},[t._v("Google JavaScript Style Guide")])])]),t._v(" "),a("li",{attrs:{"data-nodeid":"9638"}},[a("p",{attrs:{"data-nodeid":"9639"}},[a("a",{attrs:{href:"https://github.com/airbnb/javascript#table-of-contents","data-nodeid":"9802"}},[t._v("Airbnb JavaScript Style Guide")])])])]),t._v(" "),a("p",{attrs:{"data-nodeid":"9640"}},[t._v("我们继续拆分 .eslintrc 文件，其实它主要由六个字段组成：")]),t._v(" "),a("pre",{staticClass:"lang-java",attrs:{"data-nodeid":"9641"}},[a("code",{attrs:{"data-language":"java"}},[a("span",{staticClass:"hljs-keyword"},[t._v("module")]),t._v("."),a("span",{staticClass:"hljs-keyword"},[t._v("exports")]),t._v(" = {\n   env: {},\n   extends: {},\n   plugins: {},\n   parser: {},\n   parserOptions: {},\n   rules: {},\n}\n")])]),t._v(" "),a("ul",{attrs:{"data-nodeid":"9642"}},[a("li",{attrs:{"data-nodeid":"9643"}},[a("p",{attrs:{"data-nodeid":"9644"}},[t._v("env：表示指定想启用的环境。")])]),t._v(" "),a("li",{attrs:{"data-nodeid":"9645"}},[a("p",{attrs:{"data-nodeid":"9646"}},[t._v("extends：指定额外配置的选项，如 ['airbnb'] 表示使用 Airbnb 的 Linting 规则。")])]),t._v(" "),a("li",{attrs:{"data-nodeid":"9647"}},[a("p",{attrs:{"data-nodeid":"9648"}},[t._v("plugins：设置规则插件。")])]),t._v(" "),a("li",{attrs:{"data-nodeid":"9649"}},[a("p",{attrs:{"data-nodeid":"9650"}},[t._v("parser：默认情况下 ESLint 使用 Espree 进行解析。")])]),t._v(" "),a("li",{attrs:{"data-nodeid":"9651"}},[a("p",{attrs:{"data-nodeid":"9652"}},[t._v("parserOptions：如果将默认解析器更改，需要制定 parserOptions。")])]),t._v(" "),a("li",{attrs:{"data-nodeid":"9653"}},[a("p",{attrs:{"data-nodeid":"9654"}},[t._v("rules：定义拓展并通过插件添加的所有规则。")])])]),t._v(" "),a("p",{attrs:{"data-nodeid":"9655"}},[t._v("注意，上文中 .eslintrc 文件我们"),a("strong",{attrs:{"data-nodeid":"9821"}},[t._v("采用了 .eslintrc.js 的 JavaScript 文件格式")]),t._v("，此外还可以采用 .yaml、.json、yml 等格式。如果项目中含有多种配置文件格式，优先级顺序为：")]),t._v(" "),a("ul",{attrs:{"data-nodeid":"9656"}},[a("li",{attrs:{"data-nodeid":"9657"}},[a("p",{attrs:{"data-nodeid":"9658"}},[t._v(".eslintrc.js")])]),t._v(" "),a("li",{attrs:{"data-nodeid":"9659"}},[a("p",{attrs:{"data-nodeid":"9660"}},[t._v(".eslintrc.yaml")])]),t._v(" "),a("li",{attrs:{"data-nodeid":"9661"}},[a("p",{attrs:{"data-nodeid":"9662"}},[t._v(".eslintrc.yml")])]),t._v(" "),a("li",{attrs:{"data-nodeid":"9663"}},[a("p",{attrs:{"data-nodeid":"9664"}},[t._v(".eslintrc.json")])]),t._v(" "),a("li",{attrs:{"data-nodeid":"9665"}},[a("p",{attrs:{"data-nodeid":"9666"}},[t._v(".eslintrc")])]),t._v(" "),a("li",{attrs:{"data-nodeid":"9667"}},[a("p",{attrs:{"data-nodeid":"9668"}},[t._v("package.json")])])]),t._v(" "),a("p",{attrs:{"data-nodeid":"9669"}},[t._v("最终，我们在 package.json 中可以添加 script：")]),t._v(" "),a("pre",{staticClass:"lang-java",attrs:{"data-nodeid":"9670"}},[a("code",{attrs:{"data-language":"java"}},[a("span",{staticClass:"hljs-string"},[t._v('"scripts"')]),t._v(": {\n    "),a("span",{staticClass:"hljs-string"},[t._v('"lint"')]),t._v(": "),a("span",{staticClass:"hljs-string"},[t._v('"eslint --debug src/"')]),t._v(",\n    "),a("span",{staticClass:"hljs-string"},[t._v('"lint:write"')]),t._v(": "),a("span",{staticClass:"hljs-string"},[t._v('"eslint --debug src/ --fix"')]),t._v("\n },\n")])]),t._v(" "),a("p",{attrs:{"data-nodeid":"9671"}},[t._v("我们对上述 npm script 进行分析，如下：")]),t._v(" "),a("ul",{attrs:{"data-nodeid":"9672"}},[a("li",{attrs:{"data-nodeid":"9673"}},[a("p",{attrs:{"data-nodeid":"9674"}},[t._v("lint 这个命令将遍历所有文件，并在每个找到错误的文件中提供详细日志，但"),a("strong",{attrs:{"data-nodeid":"9835"}},[t._v("需要开发者手动打开这些文件并更正错误")]),t._v("。")])]),t._v(" "),a("li",{attrs:{"data-nodeid":"9675"}},[a("p",{attrs:{"data-nodeid":"9676"}},[t._v("lint:write 与 lint 命令类似，但这个命令可以自动纠正错误。")])])]),t._v(" "),a("h4",{attrs:{"data-nodeid":"9677"}},[t._v("Linter VS Prettier")]),t._v(" "),a("p",{attrs:{"data-nodeid":"9678"}},[t._v("我们应该如何对比以 ESLint 为代表的 Linter 和 Prettier 呢，它们到底是什么关系？就像开篇提到的那样，它们解决不同的问题，定位不同，但是又可以相辅相成。")]),t._v(" "),a("p",{attrs:{"data-nodeid":"9679"}},[t._v("所有的 Linter 类似 ESLint，其规则都可以划分为两类。")]),t._v(" "),a("ul",{attrs:{"data-nodeid":"9680"}},[a("li",{attrs:{"data-nodeid":"9681"}},[a("p",{attrs:{"data-nodeid":"9682"}},[t._v("格式化规则（Formatting Rules）")])])]),t._v(" "),a("p",{attrs:{"data-nodeid":"9683"}},[t._v("这类“格式化规则”典型的有 max-len、no-mixed-spaces-and-tabs、keyword-spacing、comma-style，它们“限制一行的最大长度”“禁止使用空格和 Tab 混合缩进”等代码格式方面的规范。事实上，即便开发者写出的代码违反了这类规则，如果在 Lint 阶段前，先经过 Prettier 处理，这些问题会"),a("strong",{attrs:{"data-nodeid":"9846"}},[t._v("在 Prettier 阶段被纠正，因此 Linter 不会抛出提醒")]),t._v("，非常省心，这也是 Linter 和 Prettier 重叠的地方。")]),t._v(" "),a("ul",{attrs:{"data-nodeid":"9684"}},[a("li",{attrs:{"data-nodeid":"9685"}},[a("p",{attrs:{"data-nodeid":"9686"}},[t._v("代码质量规则（Code Quality Rules）")])])]),t._v(" "),a("p",{attrs:{"data-nodeid":"9687"}},[t._v("这类“代码质量规则”类似 no-unused-vars、no-extra-bind、no-implicit-globals、prefer-promise-reject-errors，它们限制“声明未使用变量”“不必要的函数绑定”等代码写法规范。这个时候，Prettier 对这些规则无能为力，而这些规则对于代码质量和强健性至关重要，还是需要 Linter 来保障的。")]),t._v(" "),a("p",{attrs:{"data-nodeid":"9688"}},[t._v("如同 Prettier，ESLint 也可以集成到编辑器或者 Git pre-commit 阶段。前文已经演示过了 Prettier 搭配 husky，下面我们来介绍一下 husky 到底是什么。")]),t._v(" "),a("h4",{attrs:{"data-nodeid":"9689"}},[t._v("husky 和 lint-staged")]),t._v(" "),a("p",{attrs:{"data-nodeid":"9690"}},[t._v("其实，husky 就是 Git 的一个钩子，在 Git 进行到某一时段时，可以交给开发者完成某些特定的操作。比如每次提交（commit 阶段）或者推送（push 阶段）代码时，就可以执行相关 npm 脚本。需要注意的是，"),a("strong",{attrs:{"data-nodeid":"9856"}},[t._v("在整个项目上运行 Lint 会很慢，我们一般只想对更改的文件进行检查，此时就需要使用到 lint-staged")]),t._v("。比如如下代码：")]),t._v(" "),a("pre",{staticClass:"lang-java",attrs:{"data-nodeid":"9691"}},[a("code",{attrs:{"data-language":"java"}},[a("span",{staticClass:"hljs-string"},[t._v('"scripts"')]),t._v(": {\n    "),a("span",{staticClass:"hljs-string"},[t._v('"lint"')]),t._v(": "),a("span",{staticClass:"hljs-string"},[t._v('"eslint --debug src/"')]),t._v(",\n    "),a("span",{staticClass:"hljs-string"},[t._v('"lint:write"')]),t._v(": "),a("span",{staticClass:"hljs-string"},[t._v('"eslint --debug src/ --fix"')]),t._v(",\n    "),a("span",{staticClass:"hljs-string"},[t._v('"prettier"')]),t._v(": "),a("span",{staticClass:"hljs-string"},[t._v('"prettier --write src/**/*.js"')]),t._v("\n},\n"),a("span",{staticClass:"hljs-string"},[t._v('"husky"')]),t._v(": {\n    "),a("span",{staticClass:"hljs-string"},[t._v('"hooks"')]),t._v(": {\n        "),a("span",{staticClass:"hljs-string"},[t._v('"pre-commit"')]),t._v(": "),a("span",{staticClass:"hljs-string"},[t._v('"lint-staged"')]),t._v("\n    }\n},\n"),a("span",{staticClass:"hljs-string"},[t._v('"lint-staged"')]),t._v(": {\n    "),a("span",{staticClass:"hljs-string"},[t._v('"*.(js|jsx)"')]),t._v(": ["),a("span",{staticClass:"hljs-string"},[t._v('"npm run lint:write"')]),t._v(", "),a("span",{staticClass:"hljs-string"},[t._v('"npm run prettier"')]),t._v(", "),a("span",{staticClass:"hljs-string"},[t._v('"git add"')]),t._v("]\n},\n")])]),t._v(" "),a("p",{attrs:{"data-nodeid":"9692"}},[t._v("上述代码表示在 pre-commit 阶段对于 js 或者 jsx 后缀且修改的文件执行 ESLint 和 Prettier 操作，通过之后再进行 git add 添加到暂存区。")]),t._v(" "),a("h3",{attrs:{"data-nodeid":"9693"}},[t._v("lucas-scripts 中的 Lint 配置最佳实践")]),t._v(" "),a("p",{attrs:{"data-nodeid":"9694"}},[t._v("结合上一讲内容，我们可以扩充 lucas-scripts 项目关于 Lint 的抽象设计。相关脚本：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" path "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'path'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" spawn "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'cross-spawn'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" yargsParser "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'yargs-parser'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("hasPkgProp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" resolveBin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" hasFile"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" fromRoot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'../utils'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" args "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" process"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("argv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("here")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("p")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__dirname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("hereRelative")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("p")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("here")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("process"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cwd")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" parsedArgs "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("yargsParser")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 是否使用默认 eslint 配置")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" useBuiltinConfig "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("includes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'--config'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasFile")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.eslintrc'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasFile")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.eslintrc.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasPkgProp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'eslintConfig'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取默认 eslintrc.js")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" config "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" useBuiltinConfig\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'--config'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hereRelative")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'../config/eslintrc.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" defaultExtensions "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'js,ts,tsx'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ext "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("includes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'--ext'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'--ext'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" defaultExtensions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" extensions "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("parsedArgs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ext "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" defaultExtensions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("','")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" useBuiltinIgnore "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("includes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'--ignore-path'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasFile")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.eslintignore'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasPkgProp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'eslintIgnore'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ignore "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" useBuiltinIgnore\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'--ignore-path'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hereRelative")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'../config/eslintignore'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 是否使用 --no-cache")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" cache "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("includes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'--no-cache'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'--cache'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'--cache-location'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fromRoot")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'node_modules/.cache/.eslintcache'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" filesGiven "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" parsedArgs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" filesToApply "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" filesGiven "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("filesGiven"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 筛选出需要进行 lint 的相关文件")]),t._v("\nargs "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("filter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("parsedArgs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("includes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" extensions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("some")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("endsWith")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用 spawn.sync 执行 eslint")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" spawn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sync")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolveBin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'eslint'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("config"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("ext"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("ignore"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("cache"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("filesToApply"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("stdio")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'inherit'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nprocess"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("exit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("status"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",{attrs:{"data-nodeid":"9696"}},[t._v("npm-script 的 eslintrc.js 就比较简单了，我们默认使用以下配置：")]),t._v(" "),a("pre",{staticClass:"lang-java",attrs:{"data-nodeid":"9697"}},[a("code",{attrs:{"data-language":"java"}},[a("span",{staticClass:"hljs-keyword"},[t._v("const")]),t._v(" {ifAnyDep} = require("),a("span",{staticClass:"hljs-string"},[t._v("'../utils'")]),t._v(")\n"),a("span",{staticClass:"hljs-keyword"},[t._v("module")]),t._v("."),a("span",{staticClass:"hljs-keyword"},[t._v("exports")]),t._v(" = {\n  extends: [\n    "),a("span",{staticClass:"hljs-comment"},[t._v("// 选用一种 eslint 规则即可")]),t._v("\n    require.resolve("),a("span",{staticClass:"hljs-string"},[t._v("'XXXX'")]),t._v("),\n    "),a("span",{staticClass:"hljs-comment"},[t._v("// 对于 react 相关环境，选用一种 eslint 规则即可")]),t._v("\n    ifAnyDep("),a("span",{staticClass:"hljs-string"},[t._v("'react'")]),t._v(", require.resolve("),a("span",{staticClass:"hljs-string"},[t._v("'XXX'")]),t._v(")),\n  ].filter(Boolean),\n  rules: {},\n}\n")])]),t._v(" "),a("p",{attrs:{"data-nodeid":"9698"}},[t._v("上述代码中的规则配置，我们可以采用自定义的 eslint config，也可以选用社区上流行的 config。")]),t._v(" "),a("p",{attrs:{"data-nodeid":"9699"}},[t._v("具体流程执行原理上一讲中已经梳理，我们不再展开。下面，我们从 AST 的层面，深入 Lint 原理，并根据其实现和扩展能力，开发更加灵活的工具集。")]),t._v(" "),a("h3",{attrs:{"data-nodeid":"9700"}},[t._v("工具背后的技术原理和设计")]),t._v(" "),a("p",{attrs:{"data-nodeid":"9701"}},[t._v("我们挑选实现更为复杂精妙的 ESLint 来分析。你应该很清楚，ESLint 是"),a("strong",{attrs:{"data-nodeid":"9869"}},[t._v("基于静态语法分析")]),t._v("（AST）进行工作的，AST 已经不是一个新鲜话题。ESLint 使用 Espree 来解析 JavaScript 语句，生成 AST。")]),t._v(" "),a("p",{attrs:{"data-nodeid":"9702"}},[t._v("有了完整的解析树，我们就可以基于解析树，对代码进行检测和修改。ESLint 的灵魂是每一条 rule，每条规则都是独立且插件化的，我们挑一个比较简单的“"),a("strong",{attrs:{"data-nodeid":"9875"}},[t._v("禁止块级注释规则")]),t._v("”源码来分析：")]),t._v(" "),a("pre",{staticClass:"lang-java",attrs:{"data-nodeid":"9703"}},[a("code",{attrs:{"data-language":"java"}},[a("span",{staticClass:"hljs-keyword"},[t._v("module")]),t._v("."),a("span",{staticClass:"hljs-keyword"},[t._v("exports")]),t._v(" = {\n  meta: {\n    docs: {\n      description: "),a("span",{staticClass:"hljs-string"},[t._v("'禁止块级注释'")]),t._v(",\n      category: "),a("span",{staticClass:"hljs-string"},[t._v("'Stylistic Issues'")]),t._v(",\n      recommended: "),a("span",{staticClass:"hljs-keyword"},[t._v("true")]),t._v("\n    }\n  },\n  create (context) {\n    "),a("span",{staticClass:"hljs-keyword"},[t._v("const")]),t._v(" sourceCode = context.getSourceCode()\n    "),a("span",{staticClass:"hljs-keyword"},[t._v("return")]),t._v(" {\n      Program () {\n        "),a("span",{staticClass:"hljs-keyword"},[t._v("const")]),t._v(" comments = sourceCode.getAllComments()\n        "),a("span",{staticClass:"hljs-keyword"},[t._v("const")]),t._v(" blockComments = comments.filter(({ type }) => type === "),a("span",{staticClass:"hljs-string"},[t._v("'Block'")]),t._v(")\n        blockComments.length && context.report({\n          message: "),a("span",{staticClass:"hljs-string"},[t._v("'No block comments'")]),t._v("\n        })\n      }\n    }\n  }\n}\n")])]),t._v(" "),a("p",{attrs:{"data-nodeid":"9704"}},[t._v("从中我们看出，一条规则就是一个 node 模块，它由 meta 和 create 组成。meta 包含了该条规则的文档描述，相对简单。而 create 接受一个 context 参数，返回一个对象，如下代码：")]),t._v(" "),a("pre",{staticClass:"lang-java",attrs:{"data-nodeid":"9705"}},[a("code",{attrs:{"data-language":"java"}},[t._v("{\n    meta: {\n        docs: {\n            description: "),a("span",{staticClass:"hljs-string"},[t._v("'禁止块级注释'")]),t._v(",\n            category: "),a("span",{staticClass:"hljs-string"},[t._v("'Stylistic Issues'")]),t._v(",\n            recommended: "),a("span",{staticClass:"hljs-keyword"},[t._v("true")]),t._v("\n        }\n    },\n    create (context) {\n        "),a("span",{staticClass:"hljs-comment"},[t._v("// ...")]),t._v("\n        "),a("span",{staticClass:"hljs-keyword"},[t._v("return")]),t._v(" {\n        }\n    }\n}\n")])]),t._v(" "),a("p",{attrs:{"data-nodeid":"9706"}},[t._v("从 context 对象上我们可以取得当前执行扫描到的代码，并通过选择器获取当前需要的内容。如上代码，我们获取代码的所有 comments（sourceCode.getAllComments()），如果 blockComments 长度大于 0，则 report No block comments 信息。了解了这些，相信你也能写出 no-alert、no-debugger 的规则内容。")]),t._v(" "),a("p",{attrs:{"data-nodeid":"9707"}},[t._v("虽然 ESLint 背后的技术内容比较复杂，但是基于 AST 技术，它已经给开发者提供了较为成熟的 APIs。写一条自己的规则并不是很难，只需要开发者找到相关的 AST 选择器。更多的选择器可以参考："),a("a",{attrs:{href:"https://eslint.org/docs/developer-guide/selectors","data-nodeid":"9881"}},[t._v("Selectors - ESLint - Pluggable JavaScript linter")]),t._v("，熟练掌握选择器，将是我们开发插件扩展的关键。")]),t._v(" "),a("p",{attrs:{"data-nodeid":"9708"}},[t._v("当然，更复杂的场景远不止这么简单，比如，多条规则是如何串联起来生效的？")]),t._v(" "),a("h4",{attrs:{"data-nodeid":"9709"}},[t._v("多条规则串联生效")]),t._v(" "),a("p",{attrs:{"data-nodeid":"9710"}},[t._v("事实上，"),a("strong",{attrs:{"data-nodeid":"9889"}},[t._v("规则可以从多个源来定义，比如代码的注释当中，或者配置文件当中。")])]),t._v(" "),a("p",{attrs:{"data-nodeid":"9711"}},[t._v("ESLint 首先收集到所有规则配置源，将所有规则归并之后，进行多重遍历：遍历由源码生成的 AST，将语法节点传入队列当中；之后遍历所有应用规则，采用"),a("strong",{attrs:{"data-nodeid":"9899"}},[t._v("事件发布订阅模式")]),t._v("（类似 Webpack Tapable），为所有规则的选择器"),a("strong",{attrs:{"data-nodeid":"9900"}},[t._v("添加监听事件")]),t._v("；在触发事件时执行，如果发现有问题，会将 report message 记录下来。最终记录下来的问题信息将会被输出。")]),t._v(" "),a("p",{attrs:{"data-nodeid":"9712"}},[t._v("请你再思考，我们的程序中免不了有各种条件语句、循环语句，因此"),a("strong",{attrs:{"data-nodeid":"9906"}},[t._v("代码的执行是非顺序的")]),t._v("。相关规则比如：“检测定义但未使用变量”“switch-case 中避免执行多条 case 语句”，这些规则的实现，就涉及 ESLint 更高级的 Code Path Analysis 概念等。ESLint 将 Code Path 抽象为 5 个事件：")]),t._v(" "),a("ul",{attrs:{"data-nodeid":"9713"}},[a("li",{attrs:{"data-nodeid":"9714"}},[a("p",{attrs:{"data-nodeid":"9715"}},[t._v("onCodePathStart")])]),t._v(" "),a("li",{attrs:{"data-nodeid":"9716"}},[a("p",{attrs:{"data-nodeid":"9717"}},[t._v("onCodePathEnd")])]),t._v(" "),a("li",{attrs:{"data-nodeid":"9718"}},[a("p",{attrs:{"data-nodeid":"9719"}},[t._v("onCodePathSegmentStart")])]),t._v(" "),a("li",{attrs:{"data-nodeid":"9720"}},[a("p",{attrs:{"data-nodeid":"9721"}},[t._v("onCodePathSegmentEnd")])]),t._v(" "),a("li",{attrs:{"data-nodeid":"9722"}},[a("p",{attrs:{"data-nodeid":"9723"}},[t._v("onCodePathSegmentLoop")])])]),t._v(" "),a("p",{attrs:{"data-nodeid":"9724"}},[t._v("利用这 5 个事件，我们可以"),a("strong",{attrs:{"data-nodeid":"9925"}},[t._v("更加精确地控制检测范围和粒度")]),t._v("。更多的 ESLint rule 实现，你可以翻看"),a("a",{attrs:{href:"https://github.com/eslint/eslint/","data-nodeid":"9919"}},[t._v("源码")]),t._v("进行学习，总之根据这 5 种事件，我们可以监测非顺序性代码，其核心原理还是"),a("strong",{attrs:{"data-nodeid":"9926"}},[t._v("事件机制")]),t._v("。")]),t._v(" "),a("p",{attrs:{"data-nodeid":"9725"}},[t._v("这种优秀的插件扩展机制对于设计一个库，尤其是设计一个规范工具来说，是非常值得借鉴的模式。事实上，Prettier 也会在新的版本中引入插件机制，目前已经在 Beta 版引入，感兴趣的读者可以"),a("a",{attrs:{href:"https://prettier.io/docs/en/plugins.html#docsNav","data-nodeid":"9930"}},[t._v("尝鲜")]),t._v("。")]),t._v(" "),a("h3",{attrs:{"data-nodeid":"9726"}},[t._v("总结")]),t._v(" "),a("p",{attrs:{"data-nodeid":"9727"}},[t._v("这一讲我们深入工程化体系的重点细节自动化代码检查，并反过来使用 lucas-scripts 实现了一套智能的代码 Lint 脚本，建议你结合上一讲内容共同学习。")]),t._v(" "),a("p",{attrs:{"data-nodeid":"9728"}},[t._v("本讲内容总结如下：")]),t._v(" "),a("p",{attrs:{"data-nodeid":"10668"}},[a("img",{attrs:{src:"https://s0.lgstatic.com/i/image6/M00/0A/AA/CioPOWA3hxWAW7B4AAJMTIIarOQ990.png",alt:"Drawing 0.png","data-nodeid":"10671"}})]),t._v(" "),a("p",{attrs:{"data-nodeid":"9730"}},[t._v("在规范化的道路上，只有你想不到，没有你做不到。简单的规范化工具用起来非常清爽，但是背后的实现却蕴含了很深的设计与技术细节，值得我们深入学习。同时，作为前端工程师，我们应该从平时开发的痛点和效率瓶颈入手，敢于尝试，不断探索。保证团队开发的自动化程度，就能减少不必要的麻烦。")]),t._v(" "),a("p",{attrs:{"data-nodeid":"9731"}},[t._v("在工程化基建当中，除了项目管理和规范相对“偏硬”的强制规范手段；一些“软方向”，比如团队氛围、code review 等，也直接决定着团队的代码质量。进阶的工程师不仅需要在技术上成长，在团队建设上更需要主动交流。下一讲我们换一个方向，深入一个更具体的方案——前端+移动端离线包设计，请继续学习！")]),t._v(" "),a("hr"),t._v(" "),a("h3",{attrs:{id:"精选评论"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#精选评论"}},[t._v("#")]),t._v(" 精选评论")]),t._v(" "),a("h5",{attrs:{id:"darcy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#darcy"}},[t._v("#")]),t._v(" Darcy")]),t._v(" "),a("blockquote",[a("p",[t._v("老师，husky在5.x之前在安装包的时候通过写入.git/hooks/pre-xxx文件的方式钩入，并作相应处理。现在5.x版本并没有这样做，那它是如何监听git commit动作的呢")])]),t._v(" "),a("h6",{attrs:{id:"讲师回复"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#讲师回复"}},[t._v("#")]),t._v("     讲师回复")]),t._v(" "),a("blockquote",[a("p",[t._v("    这种问题可以在社区上找到答案，我们也需要培养独立解决问题的能力，相信你在项目仓库里一定能找到相关 issue，也许这个 "),a("a",{attrs:{href:"https://github.com/typicode/husky/issues/896",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/typicode/husky/issues/896"),a("OutboundLink")],1),t._v(" 会解答你的困惑")])])])}),[],!1,null,null,null);a.default=e.exports}}]);