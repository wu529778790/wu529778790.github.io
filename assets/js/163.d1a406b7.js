(window.webpackJsonp=window.webpackJsonp||[]).push([[163],{501:function(s,t,a){"use strict";a.r(t);var n=a(4),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("p",{attrs:{"data-nodeid":"1801"}},[s._v("这一讲，我们将对代码拆分和按需加载这一话题进行解析。")]),s._v(" "),t("p",{attrs:{"data-nodeid":"1802"}},[s._v("随着 Webpack 等构建工具的能力越来越强，开发者在构建阶段可以随心所欲打造项目流程，代码拆分和按需加载技术在业界曝光量也越来越高。事实上，代码拆分和按需加载的设计决定着工程化构建的结果，这将直接影响应用的性能表现，因为合理的加载时机和代码拆分能够使初始代码体积更小，页面加载更快。因此，如何合理设计代码拆分和按需加载，是对一个项目架构情况的直接考量。")]),s._v(" "),t("p",{attrs:{"data-nodeid":"1803"}},[s._v("下面我们从代码拆分和按需加载的场景入手，一同体会这一技术手段的必要性和业务价值。")]),s._v(" "),t("h3",{attrs:{"data-nodeid":"1804"}},[s._v("代码拆分和按需加载场景")]),s._v(" "),t("p",{attrs:{"data-nodeid":"1805"}},[s._v("我们来看一个案例。如下图所示场景：点击左图播放按钮后，页面出现视频列表浮层（如右侧图所示，类似单页应用，视频列表仍为同一页面）。视频列表浮层包含了滚动处理、视频播放等多项复杂逻辑，因此这个浮层对应的脚本在页面初始化时，不需要被加载。那么在工程上，我们需要对视频浮层脚本单独进行拆分，和初始化脚本进行分离。当用户点击浮层触发按钮后，执行某一单独部分脚本的请求。")]),s._v(" "),t("p",{attrs:{"data-nodeid":"1806"}},[t("img",{attrs:{src:"https://s0.lgstatic.com/i/image/M00/8D/42/Ciqc1F_9Bu2AB133AAluXVg4Mlw240.png",alt:"Drawing 0.png","data-nodeid":"1974"}})]),s._v(" "),t("p",{attrs:{"data-nodeid":"1807"}},[s._v("这其实是一个我接手并重构过的真实线上案例，通过后期对页面交互的统计数据分析发现，用户点击触发视频浮层出现按钮的概率只有 10% 左右。也就是说，大部分用户（90%）并不会看到这一浮层，也就不需要对相关脚本进行加载执行，因此延迟按需加载设计是有统计数据支持的。现在你已经了解了这个场景，下面我们从技术环节详细展开。")]),s._v(" "),t("h3",{attrs:{"data-nodeid":"1808"}},[s._v("代码拆分和按需技术实现")]),s._v(" "),t("h4",{attrs:{"data-nodeid":"1809"}},[s._v("按需加载和按需打包区分")]),s._v(" "),t("p",{attrs:{"data-nodeid":"1810"}},[s._v("从技术角度介绍按需加载概念前，我们需要先和另外一个概念："),t("strong",{attrs:{"data-nodeid":"1983"}},[s._v("按需打包")]),s._v("，进行区分。事实上，当前社区对于按需加载和按需打包并没有一个准确的命名上的划分约定。因此从两者命名上，难以区分其实际含义。")]),s._v(" "),t("p",{attrs:{"data-nodeid":"1811"}},[s._v("其实，"),t("strong",{attrs:{"data-nodeid":"1993"}},[s._v("按需加载表示代码模块在交互需要时，动态引入")]),s._v("；而"),t("strong",{attrs:{"data-nodeid":"1994"}},[s._v("按需打包针对第三方依赖库，及业务模块，只打包真正在运行时可能会需要的代码")]),s._v("。")]),s._v(" "),t("p",{attrs:{"data-nodeid":"1812"}},[s._v("我们不妨先说明按需打包的概念和实施方法，目前按需打包一般通过两种方式进行：")]),s._v(" "),t("ul",{attrs:{"data-nodeid":"1813"}},[t("li",{attrs:{"data-nodeid":"1814"}},[t("p",{attrs:{"data-nodeid":"1815"}},[s._v("使用 ES Module 支持的 Tree Shaking 方案，在使用构建工具打包时，完成按需打包；")])]),s._v(" "),t("li",{attrs:{"data-nodeid":"1816"}},[t("p",{attrs:{"data-nodeid":"1817"}},[s._v("使用以"),t("code",{attrs:{"data-backticks":"1","data-nodeid":"1998"}},[s._v("babel-plugin-import")]),s._v("为主的 Babel 插件，实现自动按需打包 。")])])]),s._v(" "),t("p",{attrs:{"data-nodeid":"1818"}},[t("strong",{attrs:{"data-nodeid":"2003"}},[s._v("Tree Shaking 实现按需打包")])]),s._v(" "),t("p",{attrs:{"data-nodeid":"1819"}},[s._v("我们来看一个场景，假设业务中使用 antd 的 Button 组件：")]),s._v(" "),t("pre",{staticClass:"lang-java",attrs:{"data-nodeid":"1820"}},[t("code",{attrs:{"data-language":"java"}},[t("span",{staticClass:"hljs-keyword"},[s._v("import")]),s._v(" { Button } from "),t("span",{staticClass:"hljs-string"},[s._v("'antd'")]),s._v(";\n")])]),s._v(" "),t("p",{attrs:{"data-nodeid":"1821"}},[s._v("这样的引用，会使得最终打包的代码中包含所有 antd 导出来的内容。假设应用中并没有使用 antd 提供的 TimePicker 组件，那么对于打包结果来说，无疑增加了代码体积。在这种情况下，如果组件库提供了 ES Module 版本，并开启了 Tree Shaking，我们就可以通过“摇树”特性，将不会被使用的代码在构建阶段移除。")]),s._v(" "),t("p",{attrs:{"data-nodeid":"1822"}},[s._v("Webpack 可以在 package.json 中设置"),t("code",{attrs:{"data-backticks":"1","data-nodeid":"2007"}},[s._v("sideEffects: false")]),s._v("。我们在 "),t("a",{attrs:{href:"https://github.com/ant-design/ant-design/blob/master/package.json#L38","data-nodeid":"2011"}},[s._v("antd 源码")]),s._v("当中可以找到（"),t("a",{attrs:{href:"https://github.com/ant-design/ant-design/pull/10043","data-nodeid":"2015"}},[s._v("相关 chore commit")]),s._v("）：")]),s._v(" "),t("pre",{staticClass:"lang-java",attrs:{"data-nodeid":"1823"}},[t("code",{attrs:{"data-language":"java"}},[t("span",{staticClass:"hljs-string"},[s._v('"sideEffects"')]),s._v(": [\n "),t("span",{staticClass:"hljs-string"},[s._v('"dist/*"')]),s._v(",\n "),t("span",{staticClass:"hljs-string"},[s._v('"es/**/style/*"')]),s._v(",\n "),t("span",{staticClass:"hljs-string"},[s._v('"lib/**/style/*"')]),s._v(",\n "),t("span",{staticClass:"hljs-string"},[s._v('"*.less"')]),s._v("\n],\n")])]),s._v(" "),t("p",{attrs:{"data-nodeid":"1824"}},[s._v("指定副作用模块——这是一种值得推荐的开发习惯，建议你注意 Tree Shaking 的使用，最好实际观察一下打包结果。")]),s._v(" "),t("p",{attrs:{"data-nodeid":"1825"}},[t("strong",{attrs:{"data-nodeid":"2021"}},[s._v("学习编写 Babel 插件，实现按需打包")])]),s._v(" "),t("p",{attrs:{"data-nodeid":"1826"}},[s._v("如果第三方库不支持 Tree Shaking，我们依然可以"),t("strong",{attrs:{"data-nodeid":"2027"}},[s._v("通过 Babel 插件，改变业务代码中对模块的引用路径")]),s._v("来实现按需打包。")]),s._v(" "),t("p",{attrs:{"data-nodeid":"1827"}},[s._v("比如 "),t("a",{attrs:{href:"https://github.com/ant-design/babel-plugin-import","data-nodeid":"2031"}},[s._v("babel-plugin-import")]),s._v(" 这个插件，它是 antd 团队推出的一个 Babel 插件，我们通过一个例子来理解它的原理，比如：")]),s._v(" "),t("pre",{staticClass:"lang-java",attrs:{"data-nodeid":"1828"}},[t("code",{attrs:{"data-language":"java"}},[t("span",{staticClass:"hljs-keyword"},[s._v("import")]),s._v(" {Button as Btn,Input,TimePicker,ConfigProvider,Haaaa} from "),t("span",{staticClass:"hljs-string"},[s._v("'antd'")]),s._v("\n")])]),s._v(" "),t("p",{attrs:{"data-nodeid":"1829"}},[s._v("这样的代码就可以被编译为：")]),s._v(" "),t("pre",{staticClass:"lang-java",attrs:{"data-nodeid":"1830"}},[t("code",{attrs:{"data-language":"java"}},[t("span",{staticClass:"hljs-keyword"},[s._v("import")]),s._v(" _ConfigProvider from "),t("span",{staticClass:"hljs-string"},[s._v('"antd/lib/config-provider"')]),s._v(";\n"),t("span",{staticClass:"hljs-keyword"},[s._v("import")]),s._v(" _Button from "),t("span",{staticClass:"hljs-string"},[s._v('"antd/lib/button"')]),s._v(";\n"),t("span",{staticClass:"hljs-keyword"},[s._v("import")]),s._v(" _Input from "),t("span",{staticClass:"hljs-string"},[s._v('"antd/lib/input"')]),s._v(";\n"),t("span",{staticClass:"hljs-keyword"},[s._v("import")]),s._v(" _TimePicker from "),t("span",{staticClass:"hljs-string"},[s._v('"antd/lib/time-picker"')]),s._v(";\n")])]),s._v(" "),t("p",{attrs:{"data-nodeid":"1831"}},[s._v("编写一个类似的 Babel 插件也不是一件难事，Babel 插件核心依赖于对 AST 的解析和操作。它本质上就是一个函数，在 Babel 对 AST 语法树进行转换的过程中介入，通过相应的操作，最终让生成的结果发生改变。")]),s._v(" "),t("p",{attrs:{"data-nodeid":"1832"}},[s._v("Babel 已经内置了几个核心分析、操作 AST 的工具集，Babel 插件通过"),t("strong",{attrs:{"data-nodeid":"2040"}},[s._v("观察者 + 访问者模式")]),s._v("，对 AST 节点统一遍历，因此具备了良好的扩展性和灵活性。比如这段代码：")]),s._v(" "),t("pre",{staticClass:"lang-java",attrs:{"data-nodeid":"1833"}},[t("code",{attrs:{"data-language":"java"}},[s._v("   "),t("span",{staticClass:"hljs-keyword"},[s._v("import")]),s._v(" {Button as Btn, Input} from "),t("span",{staticClass:"hljs-string"},[s._v("'antd'")]),s._v("\n")])]),s._v(" "),t("p",{attrs:{"data-nodeid":"1834"}},[s._v("这样的代码，经过 Babel AST 分析后，得到结构：")]),s._v(" "),t("pre",{staticClass:"lang-java",attrs:{"data-nodeid":"1835"}},[t("code",{attrs:{"data-language":"java"}},[s._v("{\n    "),t("span",{staticClass:"hljs-string"},[s._v('"type"')]),s._v(": "),t("span",{staticClass:"hljs-string"},[s._v('"ImportDeclaration"')]),s._v(",\n    "),t("span",{staticClass:"hljs-string"},[s._v('"specifiers"')]),s._v(": [\n        {\n            "),t("span",{staticClass:"hljs-string"},[s._v('"type"')]),s._v(": "),t("span",{staticClass:"hljs-string"},[s._v('"ImportSpecifier"')]),s._v(",\n            "),t("span",{staticClass:"hljs-string"},[s._v('"imported"')]),s._v(": {\n                "),t("span",{staticClass:"hljs-string"},[s._v('"type"')]),s._v(": "),t("span",{staticClass:"hljs-string"},[s._v('"Identifier"')]),s._v(",\n                "),t("span",{staticClass:"hljs-string"},[s._v('"loc"')]),s._v(": {\n                    "),t("span",{staticClass:"hljs-string"},[s._v('"identifierName"')]),s._v(": "),t("span",{staticClass:"hljs-string"},[s._v('"Button"')]),s._v("\n                },\n                "),t("span",{staticClass:"hljs-string"},[s._v('"name"')]),s._v(": "),t("span",{staticClass:"hljs-string"},[s._v('"Button"')]),s._v("\n            },\n            "),t("span",{staticClass:"hljs-string"},[s._v('"importKind"')]),s._v(": "),t("span",{staticClass:"hljs-keyword"},[s._v("null")]),s._v(",\n            "),t("span",{staticClass:"hljs-string"},[s._v('"local"')]),s._v(": {\n                "),t("span",{staticClass:"hljs-string"},[s._v('"type"')]),s._v(": "),t("span",{staticClass:"hljs-string"},[s._v('"Identifier"')]),s._v(",\n                "),t("span",{staticClass:"hljs-string"},[s._v('"loc"')]),s._v(": {\n                    "),t("span",{staticClass:"hljs-string"},[s._v('"identifierName"')]),s._v(": "),t("span",{staticClass:"hljs-string"},[s._v('"Btn"')]),s._v("\n                },\n                "),t("span",{staticClass:"hljs-string"},[s._v('"name"')]),s._v(": "),t("span",{staticClass:"hljs-string"},[s._v('"Btn"')]),s._v("\n            }\n        },\n        {\n            "),t("span",{staticClass:"hljs-string"},[s._v('"type"')]),s._v(": "),t("span",{staticClass:"hljs-string"},[s._v('"ImportSpecifier"')]),s._v(",\n            "),t("span",{staticClass:"hljs-string"},[s._v('"imported"')]),s._v(": {\n                "),t("span",{staticClass:"hljs-string"},[s._v('"type"')]),s._v(": "),t("span",{staticClass:"hljs-string"},[s._v('"Identifier"')]),s._v(",\n                "),t("span",{staticClass:"hljs-string"},[s._v('"loc"')]),s._v(": {\n                    "),t("span",{staticClass:"hljs-string"},[s._v('"identifierName"')]),s._v(": "),t("span",{staticClass:"hljs-string"},[s._v('"Input"')]),s._v("\n                },\n                "),t("span",{staticClass:"hljs-string"},[s._v('"name"')]),s._v(": "),t("span",{staticClass:"hljs-string"},[s._v('"Input"')]),s._v("\n            },\n            "),t("span",{staticClass:"hljs-string"},[s._v('"importKind"')]),s._v(": "),t("span",{staticClass:"hljs-keyword"},[s._v("null")]),s._v(",\n            "),t("span",{staticClass:"hljs-string"},[s._v('"local"')]),s._v(": {\n                "),t("span",{staticClass:"hljs-string"},[s._v('"type"')]),s._v(": "),t("span",{staticClass:"hljs-string"},[s._v('"Identifier"')]),s._v(",\n                "),t("span",{staticClass:"hljs-string"},[s._v('"start"')]),s._v(": "),t("span",{staticClass:"hljs-number"},[s._v("23")]),s._v(",\n                "),t("span",{staticClass:"hljs-string"},[s._v('"end"')]),s._v(": "),t("span",{staticClass:"hljs-number"},[s._v("28")]),s._v(",\n                "),t("span",{staticClass:"hljs-string"},[s._v('"loc"')]),s._v(": {\n                    "),t("span",{staticClass:"hljs-string"},[s._v('"identifierName"')]),s._v(": "),t("span",{staticClass:"hljs-string"},[s._v('"Input"')]),s._v("\n                },\n                "),t("span",{staticClass:"hljs-string"},[s._v('"name"')]),s._v(": "),t("span",{staticClass:"hljs-string"},[s._v('"Input"')]),s._v("\n            }\n        }\n    ],\n    "),t("span",{staticClass:"hljs-string"},[s._v('"importKind"')]),s._v(": "),t("span",{staticClass:"hljs-string"},[s._v('"value"')]),s._v(",\n    "),t("span",{staticClass:"hljs-string"},[s._v('"source"')]),s._v(": {\n        "),t("span",{staticClass:"hljs-string"},[s._v('"type"')]),s._v(": "),t("span",{staticClass:"hljs-string"},[s._v('"StringLiteral"')]),s._v(",\n        "),t("span",{staticClass:"hljs-string"},[s._v('"value"')]),s._v(": "),t("span",{staticClass:"hljs-string"},[s._v('"antd"')]),s._v("\n    }\n}\n")])]),s._v(" "),t("p",{attrs:{"data-nodeid":"1836"}},[s._v("通过上述结构，我们很容易实现遍历 specifiers 属性，至于更改最后代码的 import 部分，你可以参考 "),t("a",{attrs:{href:"https://github.com/ant-design/babel-plugin-import/blob/master/src/Plugin.js","data-nodeid":"2045"}},[s._v("babel-plugin-import 相关处理逻辑")]),s._v("。")]),s._v(" "),t("p",{attrs:{"data-nodeid":"1837"}},[s._v("首先通过"),t("code",{attrs:{"data-backticks":"1","data-nodeid":"2048"}},[s._v("buildExpressionHandler")]),s._v("方法对 import 路径进行改写：")]),s._v(" "),t("pre",{staticClass:"lang-java",attrs:{"data-nodeid":"1838"}},[t("code",{attrs:{"data-language":"java"}},[s._v("buildExpressionHandler(node, props, path, state) {\n    "),t("span",{staticClass:"hljs-comment"},[s._v("// 获取文件")]),s._v("\n    "),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" file = (path && path.hub && path.hub.file) || (state && state.file);\n    "),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" { types } = "),t("span",{staticClass:"hljs-keyword"},[s._v("this")]),s._v(";\n    "),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" pluginState = "),t("span",{staticClass:"hljs-keyword"},[s._v("this")]),s._v(".getPluginState(state);\n    "),t("span",{staticClass:"hljs-comment"},[s._v("// 进行遍历")]),s._v("\n    props.forEach(prop => {\n      "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (!types.isIdentifier(node[prop])) "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(";\n      "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (\n        pluginState.specified[node[prop].name] &&\n        types.isImportSpecifier(path.scope.getBinding(node[prop].name).path)\n      ) {\n        "),t("span",{staticClass:"hljs-comment"},[s._v("// 修改路径内容")]),s._v("\n        node[prop] = "),t("span",{staticClass:"hljs-keyword"},[s._v("this")]),s._v(".importMethod(pluginState.specified[node[prop].name], file, pluginState); "),t("span",{staticClass:"hljs-comment"},[s._v("// eslint-disable-line")]),s._v("\n      }\n    });\n}\n")])]),s._v(" "),t("p",{attrs:{"data-nodeid":"1839"}},[t("code",{attrs:{"data-backticks":"1","data-nodeid":"2050"}},[s._v("buildExpressionHandler")]),s._v("方法依赖"),t("code",{attrs:{"data-backticks":"1","data-nodeid":"2052"}},[s._v("importMethod")]),s._v("方法：")]),s._v(" "),t("pre",{staticClass:"lang-java",attrs:{"data-nodeid":"1840"}},[t("code",{attrs:{"data-language":"java"}},[s._v("importMethod(methodName, file, pluginState) {\n    "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (!pluginState.selectedMethods[methodName]) {\n      "),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" { style, libraryDirectory } = "),t("span",{staticClass:"hljs-keyword"},[s._v("this")]),s._v(";\n      "),t("span",{staticClass:"hljs-comment"},[s._v("// 获取执行方法名")]),s._v("\n      "),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" transformedMethodName = "),t("span",{staticClass:"hljs-keyword"},[s._v("this")]),s._v(".camel2UnderlineComponentName "),t("span",{staticClass:"hljs-comment"},[s._v("// eslint-disable-line")]),s._v("\n        ? transCamel(methodName, "),t("span",{staticClass:"hljs-string"},[s._v("'_'")]),s._v(")\n        : "),t("span",{staticClass:"hljs-keyword"},[s._v("this")]),s._v(".camel2DashComponentName\n        ? transCamel(methodName, "),t("span",{staticClass:"hljs-string"},[s._v("'-'")]),s._v(")\n        : methodName;\n      "),t("span",{staticClass:"hljs-comment"},[s._v("// 获取相应路径")]),s._v("\n      "),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" path = winPath(\n        "),t("span",{staticClass:"hljs-keyword"},[s._v("this")]),s._v(".customName\n          ? "),t("span",{staticClass:"hljs-keyword"},[s._v("this")]),s._v(".customName(transformedMethodName, file)\n          : join("),t("span",{staticClass:"hljs-keyword"},[s._v("this")]),s._v(".libraryName, libraryDirectory, transformedMethodName, "),t("span",{staticClass:"hljs-keyword"},[s._v("this")]),s._v(".fileName), "),t("span",{staticClass:"hljs-comment"},[s._v("// eslint-disable-line")]),s._v("\n      );\n      pluginState.selectedMethods[methodName] = "),t("span",{staticClass:"hljs-keyword"},[s._v("this")]),s._v(".transformToDefaultImport "),t("span",{staticClass:"hljs-comment"},[s._v("// eslint-disable-line")]),s._v("\n        ? addDefault(file.path, path, { nameHint: methodName })\n        : addNamed(file.path, methodName, path);\n      "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" ("),t("span",{staticClass:"hljs-keyword"},[s._v("this")]),s._v(".customStyleName) {\n        "),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" stylePath = winPath("),t("span",{staticClass:"hljs-keyword"},[s._v("this")]),s._v(".customStyleName(transformedMethodName));\n        addSideEffect(file.path, `${stylePath}`);\n      } "),t("span",{staticClass:"hljs-keyword"},[s._v("else")]),s._v(" "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" ("),t("span",{staticClass:"hljs-keyword"},[s._v("this")]),s._v(".styleLibraryDirectory) {\n        "),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" stylePath = winPath(\n          join("),t("span",{staticClass:"hljs-keyword"},[s._v("this")]),s._v(".libraryName, "),t("span",{staticClass:"hljs-keyword"},[s._v("this")]),s._v(".styleLibraryDirectory, transformedMethodName, "),t("span",{staticClass:"hljs-keyword"},[s._v("this")]),s._v(".fileName),\n        );\n        addSideEffect(file.path, `${stylePath}`);\n      } "),t("span",{staticClass:"hljs-keyword"},[s._v("else")]),s._v(" "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (style === "),t("span",{staticClass:"hljs-keyword"},[s._v("true")]),s._v(") {\n        addSideEffect(file.path, `${path}/style`);\n      } "),t("span",{staticClass:"hljs-keyword"},[s._v("else")]),s._v(" "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (style === "),t("span",{staticClass:"hljs-string"},[s._v("'css'")]),s._v(") {\n        addSideEffect(file.path, `${path}/style/css`);\n      } "),t("span",{staticClass:"hljs-keyword"},[s._v("else")]),s._v(" "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (typeof style === "),t("span",{staticClass:"hljs-string"},[s._v("'function'")]),s._v(") {\n        "),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" stylePath = style(path, file);\n        "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (stylePath) {\n          addSideEffect(file.path, stylePath);\n        }\n      }\n    }\n    "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" { ...pluginState.selectedMethods[methodName] };\n}\n")])]),s._v(" "),t("p",{attrs:{"data-nodeid":"1841"}},[t("code",{attrs:{"data-backticks":"1","data-nodeid":"2054"}},[s._v("importMethod")]),s._v("方法调用了"),t("code",{attrs:{"data-backticks":"1","data-nodeid":"2056"}},[s._v("@babel/helper-module-imports")]),s._v("中的"),t("code",{attrs:{"data-backticks":"1","data-nodeid":"2058"}},[s._v("addSideEffect")]),s._v("方法执行路径的转换操作。"),t("code",{attrs:{"data-backticks":"1","data-nodeid":"2060"}},[s._v("addSideEffect")]),s._v("方法在源码中通过实例化一个 Import Injector，并调用实例方法完成了 AST 转换，具体源码可以参考："),t("a",{attrs:{href:"https://github.com/babel/babel/blob/eea156b2cb8deecfcf82d52aa1b71ba4995c7d68/packages/babel-helper-module-imports/src/index.js","data-nodeid":"2064"}},[s._v("babel-helper-module-imports")]),s._v("。")]),s._v(" "),t("p",{attrs:{"data-nodeid":"1842"}},[s._v("现在我们已经看完了按需加载打包内容，接下来，我们看看动态导入以及按需加载这个重要概念。")]),s._v(" "),t("h4",{attrs:{"data-nodeid":"1843"}},[s._v("“重新认识” dynamic import（动态导入）")]),s._v(" "),t("p",{attrs:{"data-nodeid":"1844"}},[s._v("ES module 无疑在工程化方面给前端插上了一双起飞的翅膀。溯源历史我们发现：早期 import 是完全静态化的，而如今 dynamic import 的提案早已横空出世，目前已经进入了 stage 4 阶段。dynamic import 简单翻译为动态导入，从名字上看，我们就能知晓这个新特性和按需加载密不可分。但在深入讲解 dynamic import 之前，我想先从静态导入说起，以帮助你全方位地理解。")]),s._v(" "),t("p",{attrs:{"data-nodeid":"1845"}},[t("strong",{attrs:{"data-nodeid":"2072"}},[s._v("静态导入的性能优劣")])]),s._v(" "),t("p",{attrs:{"data-nodeid":"1846"}},[s._v("标准用法的 import 属于静态导入，它只支持一个字符串类型的 module specifier（模块路径声明），这样的特性会使所有"),t("strong",{attrs:{"data-nodeid":"2078"}},[s._v("被 import 的模块在加载时就被编译")]),s._v("。从某些角度看，这种做法对于绝大多数场景来说性能是友好的，因为这意味着对工程代码的静态分析成为可能，进而使得类似 tree-shaking 的技术有了应用空间。")]),s._v(" "),t("p",{attrs:{"data-nodeid":"1847"}},[s._v("但是对于一些特殊场景，静态导入也可能成为性能的短板，比如，当我们需要：")]),s._v(" "),t("ul",{attrs:{"data-nodeid":"1848"}},[t("li",{attrs:{"data-nodeid":"1849"}},[t("p",{attrs:{"data-nodeid":"1850"}},[s._v("按需加载一个模块；")])]),s._v(" "),t("li",{attrs:{"data-nodeid":"1851"}},[t("p",{attrs:{"data-nodeid":"1852"}},[s._v("按运行事件选定一个模块。")])])]),s._v(" "),t("p",{attrs:{"data-nodeid":"1853"}},[s._v("此时，dynamic import 就变得尤为重要。比如在"),t("strong",{attrs:{"data-nodeid":"2087"}},[s._v("浏览器侧，根据用户的系统语言选择加载不同的语言模块，根据用户的操作去加载不同的内容逻辑")]),s._v("。")]),s._v(" "),t("p",{attrs:{"data-nodeid":"1854"}},[t("a",{attrs:{href:"https://developer.mozilla.org/en-us/docs/web/javascript/reference/statements/import","data-nodeid":"2090"}},[s._v("MDN 文档")]),s._v("中给出了 dynamic import 更具体的使用场景：")]),s._v(" "),t("ul",{attrs:{"data-nodeid":"8619"}},[t("li",{attrs:{"data-nodeid":"8620"}},[t("p",{attrs:{"data-nodeid":"8621"}},[s._v("静态导入的模块很明显降低了代码的加载速度且被使用的可能性很低，或者并不需要马上使用它；")])]),s._v(" "),t("li",{attrs:{"data-nodeid":"8622"}},[t("p",{attrs:{"data-nodeid":"8623"}},[s._v("静态导入的模块很明显占用了大量系统内存且被使用的可能性很低；")])]),s._v(" "),t("li",{attrs:{"data-nodeid":"8624"}},[t("p",{attrs:{"data-nodeid":"8625"}},[s._v("被导入的模块在加载时并不存在，需要异步获取；")])]),s._v(" "),t("li",{attrs:{"data-nodeid":"8626"}},[t("p",{attrs:{"data-nodeid":"8627"}},[s._v("导入模块的说明符，需要动态构建（静态导入只能使用静态说明符）；")])]),s._v(" "),t("li",{attrs:{"data-nodeid":"8628"}},[t("p",{staticClass:"te-preview-highlight",attrs:{"data-nodeid":"8629"}},[s._v("被导入的模块有副作用（可以理解为模块中会直接运行的代码），这些副作用只有在触发某些条件时才被需要。")])])]),s._v(" "),t("p",{attrs:{"data-nodeid":"1866"}},[t("strong",{attrs:{"data-nodeid":"2100"}},[s._v("深入理解 dynamic import（动态导入）")])]),s._v(" "),t("p",{attrs:{"data-nodeid":"1867"}},[s._v("这里我们不再赘述 dynamic import 的标准用法，你可以从"),t("a",{attrs:{href:"https://tc39.es/proposal-dynamic-import/#sec-import-calls","data-nodeid":"2104"}},[s._v("官方规范")]),s._v("和 "),t("a",{attrs:{href:"https://github.com/tc39/proposal-dynamic-import","data-nodeid":"2108"}},[s._v("tc39 proposal")]),s._v(" 中找到最全面和原始的内容。")]),s._v(" "),t("p",{attrs:{"data-nodeid":"1868"}},[s._v("除了基础用法，我想从语言层面强调一个 Function-like 的概念。我们先看这样一段代码：")]),s._v(" "),t("pre",{staticClass:"lang-java",attrs:{"data-nodeid":"1869"}},[t("code",{attrs:{"data-language":"java"}},[s._v('// html 部分\n<nav>\n  <a href="" data-script-path="books">Books</a>\n  <a href="" data-script-path="movies">Movies</a>\n  <a href="" data-script-path="video-games">Video Games</a>\n</nav>\n<div id="content">\n</div>\n// script 部分\n<script>\n  // 获取 element\n  const contentEle = document.querySelector(\'#content\');\n  const links = document.querySelectorAll(\'nav > a\');\n  // 遍历绑定点击逻辑\n  for (const link of links) {\n    link.addEventListener(\'click\', async (event) => {\n      event.preventDefault();\n      try {\n        const asyncScript = await import(`/${link.dataset.scriptPath}.js`);\n        // 异步加载脚本\n        asyncScript.loadContentTo(contentEle);\n      } catch (error) {\n        contentEle.textContent = `We got error: ${error.message}`;\n      }\n    });\n  }\n<\/script>\n')])]),s._v(" "),t("p",{attrs:{"data-nodeid":"1870"}},[s._v("点击页面当中的 a 标签后，会动态加载一个模块，并调用模块定义的 loadContentTo 方法完成页面内容的填充。")]),s._v(" "),t("p",{attrs:{"data-nodeid":"1871"}},[s._v("表面上看，await import() 的用法使得 import 像一个函数，该函数通过 () 操作符调用并返回一个 Promise。事实上，"),t("strong",{attrs:{"data-nodeid":"2117"}},[s._v("dynamic import 只是一个 function like 的语法形式")]),s._v("。在 ES class 特性中，super() 与 dynamic import 类似，也是一个 function like 语法形式。所以它和函数还是有着本质的区别，比如：")]),s._v(" "),t("ul",{attrs:{"data-nodeid":"1872"}},[t("li",{attrs:{"data-nodeid":"1873"}},[t("p",{attrs:{"data-nodeid":"1874"}},[s._v("dynamic import 并非继承自 Function.prototype，因此不能使用 Function 构造函数原型上的方法 impoort.call(null, "),t("code",{attrs:{"data-backticks":"1","data-nodeid":"2119"}},[s._v("${path}")]),s._v(")，调用它是不合法的；")])]),s._v(" "),t("li",{attrs:{"data-nodeid":"1875"}},[t("p",{attrs:{"data-nodeid":"1876"}},[s._v("dynamic import 并非继承自 Object.prototype，因此不能使用 Object 构造函数原型上的方法。")])])]),s._v(" "),t("p",{attrs:{"data-nodeid":"1877"}},[s._v("虽然 dynamic import 并不是一个真正意义上的函数，但我们可以通过实现一个 dynamicImport 函数模式来实现 dynamic import，进一步加深对其语法特性的理解。")]),s._v(" "),t("p",{attrs:{"data-nodeid":"1878"}},[t("strong",{attrs:{"data-nodeid":"2126"}},[s._v("实现一个 dynamic import（动态导入）")])]),s._v(" "),t("p",{attrs:{"data-nodeid":"1879"}},[s._v("dynamicImport 函数实现如下：")]),s._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("importModule")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("url")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 返回一个新的 Promise 实例")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Promise")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("resolve"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" reject")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 创建 script 标签")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" script "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" document"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("createElement")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"script"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" tempGlobal "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"__tempModuleLoadingVariable"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" Math"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("random")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("toString")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("32")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("substring")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    script"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("type "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"module"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    script"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("textContent "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token template-string"}},[t("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('import * as m from "')]),t("span",{pre:!0,attrs:{class:"token interpolation"}},[t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("${")]),s._v("url"),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("}")])]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"; window.')]),t("span",{pre:!0,attrs:{class:"token interpolation"}},[t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("${")]),s._v("tempGlobal"),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("}")])]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v(" = m;")]),t("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// load 回调")]),s._v("\n    script"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("onload")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("resolve")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("window"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("tempGlobal"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("delete")]),s._v(" window"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("tempGlobal"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      script"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("remove")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// error 回调")]),s._v("\n    script"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("onerror")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("reject")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Error")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Failed to load module script with URL "')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" url"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("delete")]),s._v(" window"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("tempGlobal"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      script"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("remove")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    document"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("documentElement"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("appendChild")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("script"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("p",{attrs:{"data-nodeid":"1881"}},[s._v("这里，我们通过动态插入一个 script 标签实现对目标 script url 的加载，并通过将模块导出内容赋值给 window 对象。我们使用"),t("code",{attrs:{"data-backticks":"1","data-nodeid":"2129"}},[s._v('__tempModuleLoadingVariable" + Math.random().toString(32).substring(2) key')]),s._v("保证模块导出对象的命名不会出现冲突。")]),s._v(" "),t("p",{attrs:{"data-nodeid":"1882"}},[s._v("至此，我们对 dynamic import 的分析告一段落。总之，代码拆分和按需加载并不完全是工程化的实施，同时也要求对语言深刻掌握。")]),s._v(" "),t("h3",{attrs:{"data-nodeid":"1883"}},[s._v("Webpack 赋能代码拆分和按需加载")]),s._v(" "),t("p",{attrs:{"data-nodeid":"1884"}},[s._v("通过前面的学习，我们了解了代码拆分和按需加载，学习了动态导入这一特性。接下来，我想请你思考，如何在代码中安全地使用动态导入而不用去过多关心浏览器的兼容情况，如何在工程环境中实现代码拆分和按需加载呢？")]),s._v(" "),t("p",{attrs:{"data-nodeid":"1885"}},[s._v("以最常见、最典型的前端构建工具——Webpack 为例，我们来分析如何在 Webpack 环境下支持代码拆分和按需加载。")]),s._v(" "),t("p",{attrs:{"data-nodeid":"1886"}},[s._v("总的来说，Webpack 提供了三种相关能力：")]),s._v(" "),t("ul",{attrs:{"data-nodeid":"1887"}},[t("li",{attrs:{"data-nodeid":"1888"}},[t("p",{attrs:{"data-nodeid":"1889"}},[t("strong",{attrs:{"data-nodeid":"2139"}},[s._v("通过入口配置手动分割代码；")])])]),s._v(" "),t("li",{attrs:{"data-nodeid":"1890"}},[t("p",{attrs:{"data-nodeid":"1891"}},[t("strong",{attrs:{"data-nodeid":"2143"}},[s._v("动态导入支持；")])])]),s._v(" "),t("li",{attrs:{"data-nodeid":"1892"}},[t("p",{attrs:{"data-nodeid":"1893"}},[t("strong",{attrs:{"data-nodeid":"2148"}},[s._v("通过 splitChunk 插件提取公共代码（公共代码分割）")]),s._v("。")])])]),s._v(" "),t("p",{attrs:{"data-nodeid":"1894"}},[s._v("其中第一种是通过配置 Entry 来由开发者手动进行代码项目打包，与我们这节内容主题并不相关，就不展开讲解了。下面我们从动态导入和 splitChunk 插件进行详细解析。")]),s._v(" "),t("h4",{attrs:{"data-nodeid":"1895"}},[s._v("Webpack 对 dynamic import 能力支持")]),s._v(" "),t("p",{attrs:{"data-nodeid":"1896"}},[s._v("事实上，在 Webpack 早期版本中，提供了 require.ensure() 能力。请注意这是 Webpack 特有的实现："),t("strong",{attrs:{"data-nodeid":"2156"}},[s._v("require.ensure() 能够将其参数对应的文件拆分到一个单独的 bundle 中，此 bundle 会被异步加载")]),s._v("。")]),s._v(" "),t("p",{attrs:{"data-nodeid":"1897"}},[s._v("目前 require.ensure() 已经被符合 ES 规范的 dynamic import 取代。调用 import()，被请求的模块和它引用的所有子模块，会分离到一个单独的 chunk 中。值得学习的是，Webpack 对于 import() 的支持和处理非常“巧妙”，我们知道 ES 中关于 dynamic import 的规范，只接受一个参数，表示模块的路径：")]),s._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token template-string"}},[t("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token interpolation"}},[t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("${")]),s._v("path"),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("}")])]),t("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" Promise\n")])])]),t("p",{attrs:{"data-nodeid":"1899"}},[s._v("但是 Webpack 是一个构建工具，Webpack 中对于 import() 的处理，可以通过注释接收一些特殊的参数，无须破坏 ES 对于 dynamic import 规定。比如：")]),s._v(" "),t("pre",{staticClass:"lang-java",attrs:{"data-nodeid":"1900"}},[t("code",{attrs:{"data-language":"java"}},[t("span",{staticClass:"hljs-keyword"},[s._v("import")]),s._v("(\n  "),t("span",{staticClass:"hljs-comment"},[s._v('/* webpackChunkName: "chunk-name" */')]),s._v("\n  "),t("span",{staticClass:"hljs-comment"},[s._v('/* webpackMode: "lazy" */')]),s._v("\n  "),t("span",{staticClass:"hljs-string"},[s._v("'module'")]),s._v("\n);\n")])]),s._v(" "),t("p",{attrs:{"data-nodeid":"3155"}},[s._v("Webpack 在构建时，可以读取到 import 参数，即便是参数内的注释部分，Webpack 也可以获取并处理。如上述代码，"),t("code",{attrs:{"data-backticks":"1","data-nodeid":"3157"}},[s._v('webpackChunkName: "chunk-name"')]),s._v("表示自定义新 chunk 名称；"),t("code",{attrs:{"data-backticks":"1","data-nodeid":"3159"}},[s._v('webpackMode: "lazy"')]),s._v("表示每个 import() 导入的模块，会生成一个可延迟加载（lazy-loadable） chunk。此外，webpackMode 的取值还可以是 lazy-once、eager、weak，具体含义可参考："),t("a",{attrs:{href:"https://www.webpackjs.com/api/module-methods/#import-","data-nodeid":"3163"}},[s._v("Webpack import()")]),s._v("。")]),s._v(" "),t("p",{attrs:{"data-nodeid":"1902"}},[s._v("你可能很好奇：Webpack 在编译构建时，会如何处理代码中的 dynamic import 呢？下面，我们一探究竟。")]),s._v(" "),t("p",{attrs:{"data-nodeid":"1903"}},[s._v("index.js 文件：")]),s._v(" "),t("pre",{staticClass:"lang-java",attrs:{"data-nodeid":"1904"}},[t("code",{attrs:{"data-language":"java"}},[t("span",{staticClass:"hljs-keyword"},[s._v("import")]),s._v("("),t("span",{staticClass:"hljs-string"},[s._v("'./module'")]),s._v(").then((data) => {\n  console.log(data)\n});\n")])]),s._v(" "),t("p",{attrs:{"data-nodeid":"1905"}},[s._v("module.js 文件：")]),s._v(" "),t("pre",{staticClass:"lang-java",attrs:{"data-nodeid":"1906"}},[t("code",{attrs:{"data-language":"java"}},[t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" "),t("span",{staticClass:"hljs-keyword"},[s._v("module")]),s._v(" = {\n value: "),t("span",{staticClass:"hljs-string"},[s._v("'moduleValue'")]),s._v("\n}\nexport "),t("span",{staticClass:"hljs-keyword"},[s._v("default")]),s._v(" "),t("span",{staticClass:"hljs-keyword"},[s._v("module")]),s._v("\n")])]),s._v(" "),t("p",{attrs:{"data-nodeid":"1907"}},[s._v("我们配置入口文件为 index.js，输出文件为 bundle.js，简单的 Webpack 配置信息（webpack@4.44.2）：")]),s._v(" "),t("pre",{staticClass:"lang-java",attrs:{"data-nodeid":"1908"}},[t("code",{attrs:{"data-language":"java"}},[t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" path = require("),t("span",{staticClass:"hljs-string"},[s._v("'path'")]),s._v(");\n"),t("span",{staticClass:"hljs-keyword"},[s._v("module")]),s._v("."),t("span",{staticClass:"hljs-keyword"},[s._v("exports")]),s._v(" = {\n  mode: "),t("span",{staticClass:"hljs-string"},[s._v("'development'")]),s._v(",\n  entry: "),t("span",{staticClass:"hljs-string"},[s._v("'./index.js'")]),s._v(",\n  output: {\n    filename: "),t("span",{staticClass:"hljs-string"},[s._v("'bundle.js'")]),s._v(",\n    path: path.resolve(__dirname, "),t("span",{staticClass:"hljs-string"},[s._v("'dist'")]),s._v("),\n  },\n};\n")])]),s._v(" "),t("p",{attrs:{"data-nodeid":"1909"}},[s._v("运行构建命令后，得到两个文件：")]),s._v(" "),t("ul",{attrs:{"data-nodeid":"1910"}},[t("li",{attrs:{"data-nodeid":"1911"}},[t("p",{attrs:{"data-nodeid":"1912"}},[s._v("0.bundle.js")])]),s._v(" "),t("li",{attrs:{"data-nodeid":"1913"}},[t("p",{attrs:{"data-nodeid":"1914"}},[s._v("bundle.js")])])]),s._v(" "),t("p",{attrs:{"data-nodeid":"1915"}},[s._v("bundle.js 中对 index.js dynamic import 编译结果为：")]),s._v(" "),t("pre",{staticClass:"lang-java",attrs:{"data-nodeid":"1916"}},[t("code",{attrs:{"data-language":"java"}},[t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v(" ({\n"),t("span",{staticClass:"hljs-comment"},[s._v("/***/")]),s._v(" "),t("span",{staticClass:"hljs-string"},[s._v('"./index.js"')]),s._v(":\n"),t("span",{staticClass:"hljs-comment"},[s._v("/*!******************!*\\\n  !*** ./index.js ***!\n  \\******************/")]),s._v("\n"),t("span",{staticClass:"hljs-comment"},[s._v("/*! no static exports found */")]),s._v("\n"),t("span",{staticClass:"hljs-comment"},[s._v("/***/")]),s._v(" (function("),t("span",{staticClass:"hljs-keyword"},[s._v("module")]),s._v(", "),t("span",{staticClass:"hljs-keyword"},[s._v("exports")]),s._v(", __webpack_require__) {\neval("),t("span",{staticClass:"hljs-string"},[s._v('"__webpack_require__.e(/*! import() */ 0).then(__webpack_require__.bind(null, /*! ./module */ \\"./module.js\\")).then((data) => {\\n  console.log(data)\\n});\\n\\n//# sourceURL=webpack:///./index.js?"')]),s._v(");\n"),t("span",{staticClass:"hljs-comment"},[s._v("/***/")]),s._v(" })\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v(" });\n")])]),s._v(" "),t("p",{attrs:{"data-nodeid":"1917"}},[s._v("由此可知，Webpack 对于业务中写到的 dynamic import 代码，会转换成了 Webpack 自己自定义的 webpack_require.e 函数，这个函数返回了一个 promise 数组，最终模拟出了动态导入的效果，webpack_require.e 源码如下：")]),s._v(" "),t("pre",{staticClass:"lang-java",attrs:{"data-nodeid":"1918"}},[t("code",{attrs:{"data-language":"java"}},[t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("  "),t("span",{staticClass:"hljs-comment"},[s._v("// This file contains only the entry chunk.")]),s._v("\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("  "),t("span",{staticClass:"hljs-comment"},[s._v("// The chunk loading function for additional chunks")]),s._v("\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("  __webpack_require__.e = "),t("span",{staticClass:"hljs-function"},[s._v("function "),t("span",{staticClass:"hljs-title"},[s._v("requireEnsure")]),t("span",{staticClass:"hljs-params"},[s._v("(chunkId)")]),s._v(" ")]),s._v("{\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("   "),t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" promises = [];\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("   "),t("span",{staticClass:"hljs-comment"},[s._v("// JSONP chunk loading for javascript")]),s._v("\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("   "),t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" installedChunkData = installedChunks[chunkId];\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("   "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v("(installedChunkData !== "),t("span",{staticClass:"hljs-number"},[s._v("0")]),s._v(") { "),t("span",{staticClass:"hljs-comment"},[s._v('// 0 means "already installed".')]),s._v("\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("    "),t("span",{staticClass:"hljs-comment"},[s._v('// a Promise means "currently loading".')]),s._v("\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("    "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v("(installedChunkData) {\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("     promises.push(installedChunkData["),t("span",{staticClass:"hljs-number"},[s._v("2")]),s._v("]);\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("    } "),t("span",{staticClass:"hljs-keyword"},[s._v("else")]),s._v(" {\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("     "),t("span",{staticClass:"hljs-comment"},[s._v("// setup Promise in chunk cache")]),s._v("\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("     "),t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" promise = "),t("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" Promise(function(resolve, reject) {\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("      installedChunkData = installedChunks[chunkId] = [resolve, reject];\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("     });\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("     promises.push(installedChunkData["),t("span",{staticClass:"hljs-number"},[s._v("2")]),s._v("] = promise);\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("     "),t("span",{staticClass:"hljs-comment"},[s._v("// start chunk loading")]),s._v("\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("     "),t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" script = document.createElement("),t("span",{staticClass:"hljs-string"},[s._v("'script'")]),s._v(");\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("     "),t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" onScriptComplete;\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("     script.charset = "),t("span",{staticClass:"hljs-string"},[s._v("'utf-8'")]),s._v(";\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("     script.timeout = "),t("span",{staticClass:"hljs-number"},[s._v("120")]),s._v(";\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("     "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (__webpack_require__.nc) {\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("      script.setAttribute("),t("span",{staticClass:"hljs-string"},[s._v('"nonce"')]),s._v(", __webpack_require__.nc);\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("     }\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("     script.src = jsonpScriptSrc(chunkId);\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("     "),t("span",{staticClass:"hljs-comment"},[s._v("// create error before stack unwound to get useful stacktrace later")]),s._v("\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("     "),t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" error = "),t("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" Error();\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("     onScriptComplete = function (event) {\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("      "),t("span",{staticClass:"hljs-comment"},[s._v("// avoid mem leaks in IE.")]),s._v("\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("      script.onerror = script.onload = "),t("span",{staticClass:"hljs-keyword"},[s._v("null")]),s._v(";\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("      clearTimeout(timeout);\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("      "),t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" chunk = installedChunks[chunkId];\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("      "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v("(chunk !== "),t("span",{staticClass:"hljs-number"},[s._v("0")]),s._v(") {\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("       "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v("(chunk) {\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("        "),t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" errorType = event && (event.type === "),t("span",{staticClass:"hljs-string"},[s._v("'load'")]),s._v(" ? "),t("span",{staticClass:"hljs-string"},[s._v("'missing'")]),s._v(" : event.type);\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("        "),t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" realSrc = event && event.target && event.target.src;\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("        error.message = "),t("span",{staticClass:"hljs-string"},[s._v("'Loading chunk '")]),s._v(" + chunkId + "),t("span",{staticClass:"hljs-string"},[s._v("' failed.\\n('")]),s._v(" + errorType + "),t("span",{staticClass:"hljs-string"},[s._v("': '")]),s._v(" + realSrc + "),t("span",{staticClass:"hljs-string"},[s._v("')'")]),s._v(";\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("        error.name = "),t("span",{staticClass:"hljs-string"},[s._v("'ChunkLoadError'")]),s._v(";\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("        error.type = errorType;\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("        error.request = realSrc;\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("        chunk["),t("span",{staticClass:"hljs-number"},[s._v("1")]),s._v("](error);\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("       }\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("       installedChunks[chunkId] = undefined;\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("      }\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("     };\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("     "),t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" timeout = setTimeout(function(){\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("      onScriptComplete({ type: "),t("span",{staticClass:"hljs-string"},[s._v("'timeout'")]),s._v(", target: script });\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("     }, "),t("span",{staticClass:"hljs-number"},[s._v("120000")]),s._v(");\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("     script.onerror = script.onload = onScriptComplete;\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("     document.head.appendChild(script);\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("    }\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("   }\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("   "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" Promise.all(promises);\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("  };\n")])]),s._v(" "),t("p",{attrs:{"data-nodeid":"1919"}},[s._v("代码已经非常直观，webpack_require.e 主要做了如下内容：")]),s._v(" "),t("ul",{attrs:{"data-nodeid":"1920"}},[t("li",{attrs:{"data-nodeid":"1921"}},[t("p",{attrs:{"data-nodeid":"1922"}},[s._v("定义一个 promise 数组 promises，最终以 Promise.all(promises) 形式返回；")])]),s._v(" "),t("li",{attrs:{"data-nodeid":"1923"}},[t("p",{attrs:{"data-nodeid":"1924"}},[s._v("通过 installedChunkData 变量判断当前模块是否已经被加载，如果已经加载过，将模块内容 push 到 promises 数组中；")])]),s._v(" "),t("li",{attrs:{"data-nodeid":"1925"}},[t("p",{attrs:{"data-nodeid":"1926"}},[s._v("如果当前模块没有被加载过，则先定义一个 promise，然后创建一个 script 标签，加载模块内容，并定义此 script 的 onload 和 onerror 回调；")])]),s._v(" "),t("li",{attrs:{"data-nodeid":"1927"}},[t("p",{attrs:{"data-nodeid":"1928"}},[s._v("最终对新增 script 标签对应的 promise （resolve/reject）处理定义在 webpackJsonpCallback 函数中。")])])]),s._v(" "),t("pre",{staticClass:"lang-java",attrs:{"data-nodeid":"1929"}},[t("code",{attrs:{"data-language":"java"}},[t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("  "),t("span",{staticClass:"hljs-function"},[s._v("function "),t("span",{staticClass:"hljs-title"},[s._v("webpackJsonpCallback")]),t("span",{staticClass:"hljs-params"},[s._v("(data)")]),s._v(" ")]),s._v("{\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("   "),t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" chunkIds = data["),t("span",{staticClass:"hljs-number"},[s._v("0")]),s._v("];\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("   "),t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" moreModules = data["),t("span",{staticClass:"hljs-number"},[s._v("1")]),s._v("];\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("   "),t("span",{staticClass:"hljs-comment"},[s._v('// add "moreModules" to the modules object,')]),s._v("\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("   "),t("span",{staticClass:"hljs-comment"},[s._v('// then flag all "chunkIds" as loaded and fire callback')]),s._v("\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("   "),t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" moduleId, chunkId, i = "),t("span",{staticClass:"hljs-number"},[s._v("0")]),s._v(", resolves = [];\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("   "),t("span",{staticClass:"hljs-keyword"},[s._v("for")]),s._v("(;i < chunkIds.length; i++) {\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("    chunkId = chunkIds[i];\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("    "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v("(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("     resolves.push(installedChunks[chunkId]["),t("span",{staticClass:"hljs-number"},[s._v("0")]),s._v("]);\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("    }\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("    installedChunks[chunkId] = "),t("span",{staticClass:"hljs-number"},[s._v("0")]),s._v(";\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("   }\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("   "),t("span",{staticClass:"hljs-keyword"},[s._v("for")]),s._v("(moduleId in moreModules) {\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("    "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v("(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("     modules[moduleId] = moreModules[moduleId];\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("    }\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("   }\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("   "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v("(parentJsonpFunction) parentJsonpFunction(data);\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("   "),t("span",{staticClass:"hljs-keyword"},[s._v("while")]),s._v("(resolves.length) {\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("    resolves.shift()();\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("   }\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("\n"),t("span",{staticClass:"hljs-comment"},[s._v("/******/")]),s._v("  };\n")])]),s._v(" "),t("p",{attrs:{"data-nodeid":"1930"}},[s._v("完整的源码内容我们不再一一粘贴，你可以参考下图的整个处理流程：")]),s._v(" "),t("p",{attrs:{"data-nodeid":"1931"}},[t("img",{attrs:{src:"https://s0.lgstatic.com/i/image2/M01/05/28/Cip5yF_9BziALsMpAAFUvdp7KoQ251.png",alt:"Drawing 1.png","data-nodeid":"2191"}})]),s._v(" "),t("div",{attrs:{"data-nodeid":"1932"}},[t("p",{staticStyle:{"text-align":"center"}},[s._v("webpack_require.e 处理流程图")])]),s._v(" "),t("h4",{attrs:{"data-nodeid":"1933"}},[s._v("Webpack 中 splitChunk 插件和代码分割")]),s._v(" "),t("p",{attrs:{"data-nodeid":"1934"}},[s._v("你可能对 Webpack 4.0 版本推出的 splitChunk 插件并不陌生。这里需要注意的是，"),t("strong",{attrs:{"data-nodeid":"2206"}},[s._v("代码分割区别于动态加载，它们本质上是两个概念")]),s._v("。前文介绍到的 dynamic import（动态导入）技术本质上一种是懒加载——"),t("strong",{attrs:{"data-nodeid":"2207"}},[s._v("按需加载")]),s._v("，即只有在需要的时候，才加载代码。而以 splitChunk 插件为代表的代码分割，是一种"),t("strong",{attrs:{"data-nodeid":"2208"}},[s._v("代码拆包")]),s._v("技术，与代码合并打包是一个相逆的过程。")]),s._v(" "),t("p",{attrs:{"data-nodeid":"1935"}},[s._v("代码分割的核心意义在于"),t("strong",{attrs:{"data-nodeid":"2214"}},[s._v("避免重复打包以及提升缓存利用率，进而提升访问速度")]),s._v("。比如，我们将不常变化的第三方依赖库进行代码拆分，方便对第三方依赖库缓存，同时抽离公共逻辑，减少单个文件的 size 大小。")]),s._v(" "),t("p",{attrs:{"data-nodeid":"1936"}},[s._v("了解了代码分割的概念，那么就很好理解 Webpack splitChunk 插件满足下述条件时，自动进行代码分割：")]),s._v(" "),t("ul",{attrs:{"data-nodeid":"4972"}},[t("li",{attrs:{"data-nodeid":"4973"}},[t("p",{attrs:{"data-nodeid":"4974"}},[s._v("可以被共享的（即重复被引用的）模块或者 node_modules 中的模块；")])]),s._v(" "),t("li",{attrs:{"data-nodeid":"4975"}},[t("p",{attrs:{"data-nodeid":"4976"}},[s._v("在压缩前体积大于 30KB 的模块；")])]),s._v(" "),t("li",{attrs:{"data-nodeid":"4977"}},[t("p",{attrs:{"data-nodeid":"4978"}},[s._v("在按需加载模块时，并行加载的模块不得超过 5 个；")])]),s._v(" "),t("li",{attrs:{"data-nodeid":"4979"}},[t("p",{attrs:{"data-nodeid":"4980"}},[s._v("在页面初始化加载时，并行加载的模块不得超过 3 个。")])])]),s._v(" "),t("p",{attrs:{"data-nodeid":"1946"}},[s._v("当然，上述配置数据是完全可以由开发者掌握主动权，并根据项目实际情况进行调整的。更多内容可以参考："),t("a",{attrs:{href:"https://www.webpackjs.com/plugins/split-chunks-plugin/","data-nodeid":"2225"}},[s._v("split-chunks-plugin")]),s._v("。不过需要注意的是，关于 splitChunk 插件的默认参数是 Webpack 团队所设定的通用性优化手段，是经过“千挑万选”确定的，因此适用于多数开发场景。"),t("strong",{attrs:{"data-nodeid":"2231"}},[s._v("如果在没有实践测量的情况下，不建议开发者手动优化这些参数")]),s._v("。")]),s._v(" "),t("p",{attrs:{"data-nodeid":"1947"}},[s._v("另外， Webpack splitChunk 插件也支持上文提到的“按需加载”，即可以和 dynamic import 搭配使用。比如，page1 和 page2 页面里动态引入 async.js，即 page1.js 和 page2.js 都有这样的逻辑：")]),s._v(" "),t("pre",{staticClass:"lang-java",attrs:{"data-nodeid":"1948"}},[t("code",{attrs:{"data-language":"java"}},[t("span",{staticClass:"hljs-keyword"},[s._v("import")]),s._v("("),t("span",{staticClass:"hljs-comment"},[s._v('/* webpackChunkName: "async.js" */')]),t("span",{staticClass:"hljs-string"},[s._v('"./async"')]),s._v(").then(common => {\n console.log(common);\n})\n")])]),s._v(" "),t("p",{attrs:{"data-nodeid":"1949"}},[s._v("在进行构建后，async.js 会被单独打包。如果进一步在 async.js 文件中引入 module.js 模块，即 async.js 中的代码如下所示：")]),s._v(" "),t("pre",{staticClass:"lang-java",attrs:{"data-nodeid":"1950"}},[t("code",{attrs:{"data-language":"java"}},[t("span",{staticClass:"hljs-keyword"},[s._v("import")]),s._v("("),t("span",{staticClass:"hljs-comment"},[s._v('/* webpackChunkName: "module.js" */')]),t("span",{staticClass:"hljs-string"},[s._v('"./module.js"')]),s._v(").then("),t("span",{staticClass:"hljs-keyword"},[s._v("module")]),s._v(" => {\n console.log("),t("span",{staticClass:"hljs-keyword"},[s._v("module")]),s._v(");\n})\n")])]),s._v(" "),t("p",{attrs:{"data-nodeid":"1951"}},[s._v("依赖关系图如下图所示：")]),s._v(" "),t("p",{attrs:{"data-nodeid":"1952"}},[t("img",{attrs:{src:"https://s0.lgstatic.com/i/image/M00/8D/58/CgqCHl_9YFqAKybyAAGp092kEyI435.png",alt:"Lark20210112-163942.png","data-nodeid":"2237"}})]),s._v(" "),t("div",{attrs:{"data-nodeid":"1953"}},[t("p",{staticStyle:{"text-align":"center"}},[s._v("三重依赖关系图")])]),s._v(" "),t("p",{attrs:{"data-nodeid":"1954"}},[s._v("最终打包结果会按需动态引入 async.js，同时 module.js 也被成功单独拆分出来。")]),s._v(" "),t("h3",{attrs:{"data-nodeid":"1955"}},[s._v("总结")]),s._v(" "),t("p",{attrs:{"data-nodeid":"1956"}},[s._v("这一讲我们就代码拆分和按需加载这一话题进行了分析：")]),s._v(" "),t("ul",{attrs:{"data-nodeid":"1957"}},[t("li",{attrs:{"data-nodeid":"1958"}},[t("p",{attrs:{"data-nodeid":"1959"}},[s._v("首先从代码拆分和按需加载的业务场景入手，分析了这一技术手段的必要性和业务价值；")])]),s._v(" "),t("li",{attrs:{"data-nodeid":"1960"}},[t("p",{attrs:{"data-nodeid":"1961"}},[s._v("接着，我们从 ES 规范入手，深入解读了 dynamic import 动态加载这一核心语言特性，同时从 Tree Shaking 和编写 Babel 插件的角度，在较深层的语法和工程理念上对比了按需打包这一话题；")])]),s._v(" "),t("li",{attrs:{"data-nodeid":"1962"}},[t("p",{attrs:{"data-nodeid":"1963"}},[s._v("最后，我们通过对 Webpack 能力的探究，剖析了如何在工程中实现代码拆分和按需加载。")])])]),s._v(" "),t("p",{attrs:{"data-nodeid":"1964"}},[t("img",{attrs:{src:"https://s0.lgstatic.com/i/image2/M01/05/34/CgpVE1_9YDyAVOWwAAel8VpUNt4885.png",alt:"Lark20210112-163852.png","data-nodeid":"2246"}})]),s._v(" "),t("p",{attrs:{"data-nodeid":"1965"}},[s._v("在实际工作中，我希望你能利用本节内容，并结合项目实际情况，排查代码拆分和按需加载是否合理；如果有不合理之处，可以动手实践、实验，进行论证。")]),s._v(" "),t("p",{attrs:{"data-nodeid":"1966"}},[s._v("本节内容既有理论内容，又有工程实践，只要你有“庖丁解牛”的决心，相信很快就有“入木三分”的理解。")]),s._v(" "),t("hr"),s._v(" "),t("h3",{attrs:{id:"精选评论"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#精选评论"}},[s._v("#")]),s._v(" 精选评论")]),s._v(" "),t("h5",{attrs:{id:"浩"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#浩"}},[s._v("#")]),s._v(" *浩")]),s._v(" "),t("blockquote",[t("p",[s._v("有庖丁解牛的决心很快就会有入木三分的理解，")])]),s._v(" "),t("h5",{attrs:{id:"cxl"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cxl"}},[s._v("#")]),s._v(" cxl")]),s._v(" "),t("blockquote",[t("p",[s._v("这篇很深入人心！")])]),s._v(" "),t("h5",{attrs:{id:"俊"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#俊"}},[s._v("#")]),s._v(" *俊")]),s._v(" "),t("blockquote",[t("p",[s._v("赞👍🏻")])])])}),[],!1,null,null,null);t.default=e.exports}}]);