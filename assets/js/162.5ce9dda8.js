(window.webpackJsonp=window.webpackJsonp||[]).push([[162],{498:function(a,s,t){"use strict";t.r(s);var n=t(4),e=Object(n.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("p",{attrs:{"data-nodeid":"1489"}},[a._v("上一讲我们从 Babel 编译预设的角度理清了前端生态中的公共库和应用的丝缕关联，这一讲我们就从实战出发，动手剖析一个公共库从设计到完成的过程。")]),a._v(" "),s("p",{attrs:{"data-nodeid":"1490"}},[a._v("（源码出处："),s("a",{attrs:{href:"https://github.com/intricatecloud/reusable-js-demo","data-nodeid":"1608"}},[a._v("Creating a simple npm library to use in and out of the browser）")])]),a._v(" "),s("h3",{attrs:{"data-nodeid":"1491"}},[a._v("实战打造一个公共库")]),a._v(" "),s("p",{attrs:{"data-nodeid":"1492"}},[a._v("下面我们从实战出发，从 0 到 1 构建一个符合标准的公共库。我们的目标是，借助 "),s("a",{attrs:{href:"https://github.com/public-apis/public-apis","data-nodeid":"1613"}},[a._v("Public APIs")]),a._v("，通过网络请求获取 dogs/cats/goats 三种动物的随机图像，并进行展示。更重要的是，将整个逻辑过程抽象成可以在浏览器端和 Node.js 端复用的 npm 包，编译构建使用 Webpack 和 Babel。")]),a._v(" "),s("p",{attrs:{"data-nodeid":"1493"}},[a._v("首先创建文件：")]),a._v(" "),s("pre",{staticClass:"lang-java",attrs:{"data-nodeid":"1494"}},[s("code",{attrs:{"data-language":"java"}},[a._v("$ mkdir animal-api\n$ cd animal-api\n$ npm init\n")])]),a._v(" "),s("p",{attrs:{"data-nodeid":"1495"}},[a._v("并通过 npm init 初始化一个 package.json 文件：")]),a._v(" "),s("pre",{staticClass:"lang-java",attrs:{"data-nodeid":"1496"}},[s("code",{attrs:{"data-language":"java"}},[a._v("{\n  "),s("span",{staticClass:"hljs-string"},[a._v('"name"')]),a._v(": "),s("span",{staticClass:"hljs-string"},[a._v('"animal-api"')]),a._v(",\n  "),s("span",{staticClass:"hljs-string"},[a._v('"version"')]),a._v(": "),s("span",{staticClass:"hljs-string"},[a._v('"1.0.0"')]),a._v(",\n  "),s("span",{staticClass:"hljs-string"},[a._v('"description"')]),a._v(": "),s("span",{staticClass:"hljs-string"},[a._v('""')]),a._v(",\n  "),s("span",{staticClass:"hljs-string"},[a._v('"main"')]),a._v(": "),s("span",{staticClass:"hljs-string"},[a._v('"index.js"')]),a._v(",\n  "),s("span",{staticClass:"hljs-string"},[a._v('"scripts"')]),a._v(": {\n    "),s("span",{staticClass:"hljs-string"},[a._v('"test"')]),a._v(": "),s("span",{staticClass:"hljs-string"},[a._v('"echo \\"Error: no test specified\\" && exit 1"')]),a._v("\n  },\n  "),s("span",{staticClass:"hljs-string"},[a._v('"author"')]),a._v(": "),s("span",{staticClass:"hljs-string"},[a._v('""')]),a._v(",\n  "),s("span",{staticClass:"hljs-string"},[a._v('"license"')]),a._v(": "),s("span",{staticClass:"hljs-string"},[a._v('"ISC"')]),a._v("\n}\n")])]),a._v(" "),s("p",{attrs:{"data-nodeid":"1497"}},[a._v("编写"),s("code",{attrs:{"data-backticks":"1","data-nodeid":"1618"}},[a._v("index.js")]),a._v("代码逻辑非常简单，如下：")]),a._v(" "),s("pre",{staticClass:"lang-java",attrs:{"data-nodeid":"1498"}},[s("code",{attrs:{"data-language":"java"}},[s("span",{staticClass:"hljs-keyword"},[a._v("import")]),a._v(" axios from "),s("span",{staticClass:"hljs-string"},[a._v("'axios'")]),a._v(";\n"),s("span",{staticClass:"hljs-keyword"},[a._v("const")]),a._v(" getCat = () => {\n    "),s("span",{staticClass:"hljs-comment"},[a._v("// 发送请求")]),a._v("\n    "),s("span",{staticClass:"hljs-keyword"},[a._v("return")]),a._v(" axios.get("),s("span",{staticClass:"hljs-string"},[a._v("'https://aws.random.cat/meow'")]),a._v(").then((response) => {\n        "),s("span",{staticClass:"hljs-keyword"},[a._v("const")]),a._v(" imageSrc = response.data.file\n        "),s("span",{staticClass:"hljs-keyword"},[a._v("const")]),a._v(" text = "),s("span",{staticClass:"hljs-string"},[a._v("'CAT'")]),a._v("\n        "),s("span",{staticClass:"hljs-keyword"},[a._v("return")]),a._v(" {imageSrc, text}\n    })\n}\n"),s("span",{staticClass:"hljs-keyword"},[a._v("const")]),a._v(" getDog = () => {\n    "),s("span",{staticClass:"hljs-keyword"},[a._v("return")]),a._v(" axios.get("),s("span",{staticClass:"hljs-string"},[a._v("'https://random.dog/woof.json'")]),a._v(").then((response) => {\n        "),s("span",{staticClass:"hljs-keyword"},[a._v("const")]),a._v(" imageSrc = response.data.url\n        "),s("span",{staticClass:"hljs-keyword"},[a._v("const")]),a._v(" text = "),s("span",{staticClass:"hljs-string"},[a._v("'DOG'")]),a._v("\n        "),s("span",{staticClass:"hljs-keyword"},[a._v("return")]),a._v(" {imageSrc, text}\n    })\n}\n"),s("span",{staticClass:"hljs-keyword"},[a._v("const")]),a._v(" getGoat = () => {\n    "),s("span",{staticClass:"hljs-keyword"},[a._v("const")]),a._v(" imageSrc = "),s("span",{staticClass:"hljs-string"},[a._v("'http://placegoat.com/200'")]),a._v("\n    "),s("span",{staticClass:"hljs-keyword"},[a._v("const")]),a._v(" text = "),s("span",{staticClass:"hljs-string"},[a._v("'GOAT'")]),a._v("\n    "),s("span",{staticClass:"hljs-keyword"},[a._v("return")]),a._v(" Promise.resolve({imageSrc, text})\n}\nexport "),s("span",{staticClass:"hljs-keyword"},[a._v("default")]),a._v(" {\n    getDog,\n    getCat,\n    getGoat\n}\n")])]),a._v(" "),s("p",{attrs:{"data-nodeid":"1499"}},[a._v("我们通过三个接口：")]),a._v(" "),s("ul",{attrs:{"data-nodeid":"1500"}},[s("li",{attrs:{"data-nodeid":"1501"}},[s("p",{attrs:{"data-nodeid":"1502"}},[a._v("https://aws.random.cat/meow")])]),a._v(" "),s("li",{attrs:{"data-nodeid":"1503"}},[s("p",{attrs:{"data-nodeid":"1504"}},[a._v("https://random.dog/woof.json")])]),a._v(" "),s("li",{attrs:{"data-nodeid":"1505"}},[s("p",{attrs:{"data-nodeid":"1506"}},[a._v("http://placegoat.com/200")])])]),a._v(" "),s("p",{attrs:{"data-nodeid":"1507"}},[a._v("封装了三个获取图片地址的函数：")]),a._v(" "),s("ul",{attrs:{"data-nodeid":"1508"}},[s("li",{attrs:{"data-nodeid":"1509"}},[s("p",{attrs:{"data-nodeid":"1510"}},[a._v("getDog()")])]),a._v(" "),s("li",{attrs:{"data-nodeid":"1511"}},[s("p",{attrs:{"data-nodeid":"1512"}},[a._v("getCat()")])]),a._v(" "),s("li",{attrs:{"data-nodeid":"1513"}},[s("p",{attrs:{"data-nodeid":"1514"}},[a._v("getGoat()")])])]),a._v(" "),s("p",{attrs:{"data-nodeid":"1515"}},[s("a",{attrs:{href:"https://github.com/intricatecloud/reusable-js-demo","data-nodeid":"1630"}},[a._v("源码")]),a._v("通过 ESM 的方式提供对外接口，请你注意这里的模块化方式，这是一个公共库设计的关键点之一，后文会更详细解析。")]),a._v(" "),s("p",{attrs:{"data-nodeid":"1516"}},[a._v("对公共库来说，质量保证至关重要。我们使用 Jest 来进行 animal-api 这个公共库的单元测试。Jest 作为 devDependecies 被安装，代码如下：")]),a._v(" "),s("pre",{staticClass:"lang-java",attrs:{"data-nodeid":"1517"}},[s("code",{attrs:{"data-language":"java"}},[a._v("npm install --save-dev jest\n")])]),a._v(" "),s("p",{attrs:{"data-nodeid":"1518"}},[a._v("编写测试脚本"),s("code",{attrs:{"data-backticks":"1","data-nodeid":"1634"}},[a._v("animal-api/spec/index.spec.js")]),a._v("：")]),a._v(" "),s("pre",{staticClass:"lang-java",attrs:{"data-nodeid":"1519"}},[s("code",{attrs:{"data-language":"java"}},[s("span",{staticClass:"hljs-keyword"},[a._v("import")]),a._v(" AnimalApi from "),s("span",{staticClass:"hljs-string"},[a._v("'../index'")]),a._v("\ndescribe("),s("span",{staticClass:"hljs-string"},[a._v("'animal-api'")]),a._v(", () => {\n    it("),s("span",{staticClass:"hljs-string"},[a._v("'gets dogs'")]),a._v(", () => {\n        "),s("span",{staticClass:"hljs-keyword"},[a._v("return")]),a._v(" AnimalApi.getDog()\n            .then((animal) => {\n                expect(animal.imageSrc).not.toBeUndefined()\n                expect(animal.text).toEqual("),s("span",{staticClass:"hljs-string"},[a._v("'DOG'")]),a._v(")\n            })\n   })\n})\n")])]),a._v(" "),s("p",{attrs:{"data-nodeid":"1520"}},[a._v('改写 package.json 中 test script 为 "test": "jest"，我们通过运行'),s("code",{attrs:{"data-backticks":"1","data-nodeid":"1645"}},[a._v("npm run test")]),a._v("来测试。")]),a._v(" "),s("p",{attrs:{"data-nodeid":"1521"}},[a._v("这时候会得到报错：SyntaxError: Unexpected identifier，如下图所示：")]),a._v(" "),s("p",{attrs:{"data-nodeid":"1522"}},[s("img",{attrs:{src:"https://s0.lgstatic.com/i/image/M00/8D/0B/Ciqc1F_4C52AbkzPAAJt3nzLhAo939.png",alt:"Drawing 0.png","data-nodeid":"1650"}})]),a._v(" "),s("p",{attrs:{"data-nodeid":"1523"}},[a._v("不要慌，这是因为 Jest 并不“认识”import 这样的关键字。Jest 运行在 Node.js 环境中，大部分 Node.js 版本（v10 以下）运行时并不支持 ESM，为了可以使用 ESM 方式编写测试脚本，我们需要"),s("strong",{attrs:{"data-nodeid":"1656"}},[a._v("安装 babel-jest 和 Babel 相关依赖到开发环境中")]),a._v("：")]),a._v(" "),s("pre",{staticClass:"lang-java",attrs:{"data-nodeid":"1524"}},[s("code",{attrs:{"data-language":"java"}},[a._v("npm install --save-dev babel-jest "),s("span",{staticClass:"hljs-meta"},[a._v("@babel")]),a._v("/core "),s("span",{staticClass:"hljs-meta"},[a._v("@babel")]),a._v("/preset-env\n")])]),a._v(" "),s("p",{attrs:{"data-nodeid":"1525"}},[a._v("同时创建"),s("code",{attrs:{"data-backticks":"1","data-nodeid":"1658"}},[a._v("babel.config.js")]),a._v("，内容如下：")]),a._v(" "),s("pre",{staticClass:"lang-java",attrs:{"data-nodeid":"1526"}},[s("code",{attrs:{"data-language":"java"}},[s("span",{staticClass:"hljs-keyword"},[a._v("module")]),a._v("."),s("span",{staticClass:"hljs-keyword"},[a._v("exports")]),a._v(" = {\n  presets: [\n    [\n      "),s("span",{staticClass:"hljs-string"},[a._v("'@babel/preset-env'")]),a._v(",\n      {\n        targets: {\n          node: "),s("span",{staticClass:"hljs-string"},[a._v("'current'")]),a._v(",\n        },\n      },\n    ],\n  ],\n};\n")])]),a._v(" "),s("p",{attrs:{"data-nodeid":"1527"}},[a._v("注意上述代码，我们将 @babel/preset-env 的 targets.node 属性设置为当前环境 current。再次执行"),s("code",{attrs:{"data-backticks":"1","data-nodeid":"1661"}},[a._v("npm run test")]),a._v("，得到报错如下：Cannot find module 'axios' from 'index.js'。")]),a._v(" "),s("p",{attrs:{"data-nodeid":"1528"}},[s("img",{attrs:{src:"https://s0.lgstatic.com/i/image/M00/8D/0B/Ciqc1F_4C6iABmVIAAGxme4pZVw996.png",alt:"Drawing 1.png","data-nodeid":"1673"}})]),a._v(" "),s("p",{attrs:{"data-nodeid":"1529"}},[a._v("原因看报错信息即可得到，我们需要安装 axios。注意：axios 应该作为生产依赖被安装：")]),a._v(" "),s("pre",{staticClass:"lang-java",attrs:{"data-nodeid":"1530"}},[s("code",{attrs:{"data-language":"java"}},[a._v("npm install --save axios\n")])]),a._v(" "),s("p",{attrs:{"data-nodeid":"1531"}},[a._v("现在，我们的测试脚本就可以正常运行了。如下图：")]),a._v(" "),s("p",{attrs:{"data-nodeid":"1532"}},[s("img",{attrs:{src:"https://s0.lgstatic.com/i/image/M00/8D/16/CgqCHl_4C7CAd4ITAAJD5qJ-Ziw380.png",alt:"Drawing 2.png","data-nodeid":"1678"}})]),a._v(" "),s("p",{attrs:{"data-nodeid":"1533"}},[a._v("当然，这只是给公共库接入测试，“万里长征”才开始第一步。接下来我们按照各种场景进行更多探索。")]),a._v(" "),s("h3",{attrs:{"data-nodeid":"1534"}},[a._v("打造公共库，支持 script 标签引入")]),a._v(" "),s("p",{attrs:{"data-nodeid":"1535"}},[a._v("在大部分不支持 import 语法特性的浏览器中，为了让我们的脚本直接在浏览器中使用 script 标签引入代码，首先我们"),s("strong",{attrs:{"data-nodeid":"1686"}},[a._v("需要将已有公共库脚本编译为 UMD 方式")]),a._v("。类似上面使用 babel-jest 将测试脚本编译降级为当前 Node.js 版本支持的代码，我们还是需要 Babel 进行降级。")]),a._v(" "),s("p",{attrs:{"data-nodeid":"1536"}},[a._v("注意这次不同之处在于："),s("strong",{attrs:{"data-nodeid":"1694"}},[a._v("这里的降级需要输出代码内容到一个 output 目录中，浏览器即可直接引入该 output 目录中的编译后资源")]),a._v("。我们使用"),s("code",{attrs:{"data-backticks":"1","data-nodeid":"1692"}},[a._v("@babel/plugin-transform-modules-umd")]),a._v("来完成对代码的降级编译：")]),a._v(" "),s("pre",{staticClass:"lang-java",attrs:{"data-nodeid":"1537"}},[s("code",{attrs:{"data-language":"java"}},[a._v("$ npm install --save-dev "),s("span",{staticClass:"hljs-meta"},[a._v("@babel")]),a._v("/plugin-transform-modules-umd "),s("span",{staticClass:"hljs-meta"},[a._v("@babel")]),a._v("/core "),s("span",{staticClass:"hljs-meta"},[a._v("@babel")]),a._v("/cli\n")])]),a._v(" "),s("p",{attrs:{"data-nodeid":"1538"}},[a._v("同时在 package.json 中加入相关 script 内容："),s("code",{attrs:{"data-backticks":"1","data-nodeid":"1696"}},[a._v('"build": "babel index.js -d lib"')]),a._v("，执行"),s("code",{attrs:{"data-backticks":"1","data-nodeid":"1698"}},[a._v("npm run build")]),a._v("，得到产出（如下图）：")]),a._v(" "),s("p",{attrs:{"data-nodeid":"1539"}},[s("img",{attrs:{src:"https://s0.lgstatic.com/i/image/M00/8D/0B/Ciqc1F_4C7iARwtEAAEQS1jliOM385.png",alt:"Drawing 3.png","data-nodeid":"1702"}})]),a._v(" "),s("p",{attrs:{"data-nodeid":"1540"}},[a._v("我们在浏览器中验证产出：")]),a._v(" "),s("pre",{staticClass:"lang-java",attrs:{"data-nodeid":"1541"}},[s("code",{attrs:{"data-language":"java"}},[a._v("<script src=\"./lib/index.js\"><\/script>\n<script>\n    AnimalApi.getDog().then(function(animal) {\n        document.querySelector('#imageSrc').textContent = animal.imageSrc\n        document.querySelector('#text').textContent = animal.text\n    })\n<\/script>\n")])]),a._v(" "),s("p",{attrs:{"data-nodeid":"1542"}},[a._v("结果出现了报错：")]),a._v(" "),s("pre",{staticClass:"lang-java",attrs:{"data-nodeid":"1543"}},[s("code",{attrs:{"data-language":"java"}},[a._v("index.html:"),s("span",{staticClass:"hljs-number"},[a._v("11")]),a._v(" Uncaught ReferenceError: AnimalApi is not defined\n    at index.html:"),s("span",{staticClass:"hljs-number"},[a._v("11")]),a._v("\n")])]),a._v(" "),s("p",{attrs:{"data-nodeid":"1544"}},[a._v("并没有找到 AnimalApi 这个对象，重新翻看编译产出源码：")]),a._v(" "),s("pre",{staticClass:"lang-java",attrs:{"data-nodeid":"1545"}},[s("code",{attrs:{"data-language":"java"}},[s("span",{staticClass:"hljs-string"},[a._v('"use strict"')]),a._v(";\nObject.defineProperty("),s("span",{staticClass:"hljs-keyword"},[a._v("exports")]),a._v(", "),s("span",{staticClass:"hljs-string"},[a._v('"__esModule"')]),a._v(", {\n  value: "),s("span",{staticClass:"hljs-keyword"},[a._v("true")]),a._v("\n});\n"),s("span",{staticClass:"hljs-keyword"},[a._v("exports")]),a._v("."),s("span",{staticClass:"hljs-keyword"},[a._v("default")]),a._v(" = "),s("span",{staticClass:"hljs-keyword"},[a._v("void")]),a._v(" "),s("span",{staticClass:"hljs-number"},[a._v("0")]),a._v(";\n"),s("span",{staticClass:"hljs-comment"},[a._v("// 引入 axios")]),a._v("\n"),s("span",{staticClass:"hljs-keyword"},[a._v("var")]),a._v(" _axios = _interopRequireDefault(require("),s("span",{staticClass:"hljs-string"},[a._v('"axios"')]),a._v("));\n"),s("span",{staticClass:"hljs-comment"},[a._v("//  兼容 default 导出")]),a._v("\n"),s("span",{staticClass:"hljs-function"},[a._v("function "),s("span",{staticClass:"hljs-title"},[a._v("_interopRequireDefault")]),s("span",{staticClass:"hljs-params"},[a._v("(obj)")]),a._v(" ")]),a._v("{ "),s("span",{staticClass:"hljs-keyword"},[a._v("return")]),a._v(" obj && obj.__esModule ? obj : { "),s("span",{staticClass:"hljs-keyword"},[a._v("default")]),a._v(": obj }; }\n"),s("span",{staticClass:"hljs-comment"},[a._v("// 原 getCat 方法")]),a._v("\n"),s("span",{staticClass:"hljs-keyword"},[a._v("const")]),a._v(" getCat = () => {\n  "),s("span",{staticClass:"hljs-keyword"},[a._v("return")]),a._v(" _axios."),s("span",{staticClass:"hljs-keyword"},[a._v("default")]),a._v(".get("),s("span",{staticClass:"hljs-string"},[a._v("'https://aws.random.cat/meow'")]),a._v(").then(response => {\n    "),s("span",{staticClass:"hljs-keyword"},[a._v("const")]),a._v(" imageSrc = response.data.file;\n    "),s("span",{staticClass:"hljs-keyword"},[a._v("const")]),a._v(" text = "),s("span",{staticClass:"hljs-string"},[a._v("'CAT'")]),a._v(";\n    "),s("span",{staticClass:"hljs-keyword"},[a._v("return")]),a._v(" {\n      imageSrc,\n      text\n    };\n  });\n};\n"),s("span",{staticClass:"hljs-comment"},[a._v("// 原 getDog 方法")]),a._v("\n"),s("span",{staticClass:"hljs-keyword"},[a._v("const")]),a._v(" getDog = () => {\n  "),s("span",{staticClass:"hljs-keyword"},[a._v("return")]),a._v(" _axios."),s("span",{staticClass:"hljs-keyword"},[a._v("default")]),a._v(".get("),s("span",{staticClass:"hljs-string"},[a._v("'https://random.dog/woof.json'")]),a._v(").then(response => {\n    "),s("span",{staticClass:"hljs-keyword"},[a._v("const")]),a._v(" imageSrc = response.data.url;\n    "),s("span",{staticClass:"hljs-keyword"},[a._v("const")]),a._v(" text = "),s("span",{staticClass:"hljs-string"},[a._v("'DOG'")]),a._v(";\n    "),s("span",{staticClass:"hljs-keyword"},[a._v("return")]),a._v(" {\n      imageSrc,\n      text\n    };\n  });\n};\n"),s("span",{staticClass:"hljs-comment"},[a._v("// 原 getGoat 方法")]),a._v("\n"),s("span",{staticClass:"hljs-keyword"},[a._v("const")]),a._v(" getGoat = () => {\n  "),s("span",{staticClass:"hljs-keyword"},[a._v("const")]),a._v(" imageSrc = "),s("span",{staticClass:"hljs-string"},[a._v("'http://placegoat.com/200'")]),a._v(";\n  "),s("span",{staticClass:"hljs-keyword"},[a._v("const")]),a._v(" text = "),s("span",{staticClass:"hljs-string"},[a._v("'GOAT'")]),a._v(";\n  "),s("span",{staticClass:"hljs-keyword"},[a._v("return")]),a._v(" Promise.resolve({\n    imageSrc,\n    text\n  });\n};\n"),s("span",{staticClass:"hljs-comment"},[a._v("// 默认导出对象")]),a._v("\n"),s("span",{staticClass:"hljs-keyword"},[a._v("var")]),a._v(" _default = {\n  getDog,\n  getCat,\n  getGoat\n};\n"),s("span",{staticClass:"hljs-keyword"},[a._v("exports")]),a._v("."),s("span",{staticClass:"hljs-keyword"},[a._v("default")]),a._v(" = _default;\n")])]),a._v(" "),s("p",{attrs:{"data-nodeid":"1546"}},[a._v("发现出现报错是因为 Babel 的编译产出如果要支持全局命名（AnimalApi）空间，需要添加以下配置：")]),a._v(" "),s("pre",{staticClass:"lang-java",attrs:{"data-nodeid":"1547"}},[s("code",{attrs:{"data-language":"java"}},[a._v("  plugins: [\n      ["),s("span",{staticClass:"hljs-string"},[a._v('"@babel/plugin-transform-modules-umd"')]),a._v(", {\n      exactGlobals: "),s("span",{staticClass:"hljs-keyword"},[a._v("true")]),a._v(",\n      globals: {\n        index: "),s("span",{staticClass:"hljs-string"},[a._v("'AnimalApi'")]),a._v("\n      }\n    }]\n  ],\n")])]),a._v(" "),s("p",{attrs:{"data-nodeid":"1548"}},[a._v("调整后再运行编译，得到源码：")]),a._v(" "),s("pre",{staticClass:"lang-java",attrs:{"data-nodeid":"1549"}},[s("code",{attrs:{"data-language":"java"}},[s("span",{staticClass:"hljs-comment"},[a._v("// umd 导出格式")]),a._v("\n(function (global, factory) {\n  "),s("span",{staticClass:"hljs-comment"},[a._v("// 兼容 amd 方式")]),a._v("\n  "),s("span",{staticClass:"hljs-keyword"},[a._v("if")]),a._v(" (typeof define === "),s("span",{staticClass:"hljs-string"},[a._v('"function"')]),a._v(" && define.amd) {\n    define(["),s("span",{staticClass:"hljs-string"},[a._v('"exports"')]),a._v(", "),s("span",{staticClass:"hljs-string"},[a._v('"axios"')]),a._v("], factory);\n  } "),s("span",{staticClass:"hljs-keyword"},[a._v("else")]),a._v(" "),s("span",{staticClass:"hljs-keyword"},[a._v("if")]),a._v(" (typeof "),s("span",{staticClass:"hljs-keyword"},[a._v("exports")]),a._v(" !== "),s("span",{staticClass:"hljs-string"},[a._v('"undefined"')]),a._v(") {\n    factory("),s("span",{staticClass:"hljs-keyword"},[a._v("exports")]),a._v(", require("),s("span",{staticClass:"hljs-string"},[a._v('"axios"')]),a._v("));\n  } "),s("span",{staticClass:"hljs-keyword"},[a._v("else")]),a._v(" {\n    "),s("span",{staticClass:"hljs-keyword"},[a._v("var")]),a._v(" mod = {\n      "),s("span",{staticClass:"hljs-keyword"},[a._v("exports")]),a._v(": {}\n    };\n    factory(mod."),s("span",{staticClass:"hljs-keyword"},[a._v("exports")]),a._v(", global.axios);\n    "),s("span",{staticClass:"hljs-comment"},[a._v("// 挂载 AnimalApi 对象")]),a._v("\n    global.AnimalApi = mod."),s("span",{staticClass:"hljs-keyword"},[a._v("exports")]),a._v(";\n  }\n})(typeof globalThis !== "),s("span",{staticClass:"hljs-string"},[a._v('"undefined"')]),a._v(" ? globalThis : typeof self !== "),s("span",{staticClass:"hljs-string"},[a._v('"undefined"')]),a._v(" ? self : "),s("span",{staticClass:"hljs-keyword"},[a._v("this")]),a._v(", function (_exports, _axios) {\n  "),s("span",{staticClass:"hljs-string"},[a._v('"use strict"')]),a._v(";\n  Object.defineProperty(_exports, "),s("span",{staticClass:"hljs-string"},[a._v('"__esModule"')]),a._v(", {\n    value: "),s("span",{staticClass:"hljs-keyword"},[a._v("true")]),a._v("\n  });\n  _exports."),s("span",{staticClass:"hljs-keyword"},[a._v("default")]),a._v(" = "),s("span",{staticClass:"hljs-keyword"},[a._v("void")]),a._v(" "),s("span",{staticClass:"hljs-number"},[a._v("0")]),a._v(";\n  _axios = _interopRequireDefault(_axios);\n  "),s("span",{staticClass:"hljs-comment"},[a._v("// 兼容 default 导出")]),a._v("\n  "),s("span",{staticClass:"hljs-function"},[a._v("function "),s("span",{staticClass:"hljs-title"},[a._v("_interopRequireDefault")]),s("span",{staticClass:"hljs-params"},[a._v("(obj)")]),a._v(" ")]),a._v("{ "),s("span",{staticClass:"hljs-keyword"},[a._v("return")]),a._v(" obj && obj.__esModule ? obj : { "),s("span",{staticClass:"hljs-keyword"},[a._v("default")]),a._v(": obj }; }\n  "),s("span",{staticClass:"hljs-keyword"},[a._v("const")]),a._v(" getCat = () => {\n    "),s("span",{staticClass:"hljs-keyword"},[a._v("return")]),a._v(" _axios."),s("span",{staticClass:"hljs-keyword"},[a._v("default")]),a._v(".get("),s("span",{staticClass:"hljs-string"},[a._v("'https://aws.random.cat/meow'")]),a._v(").then(response => {\n      "),s("span",{staticClass:"hljs-keyword"},[a._v("const")]),a._v(" imageSrc = response.data.file;\n      "),s("span",{staticClass:"hljs-keyword"},[a._v("const")]),a._v(" text = "),s("span",{staticClass:"hljs-string"},[a._v("'CAT'")]),a._v(";\n      "),s("span",{staticClass:"hljs-keyword"},[a._v("return")]),a._v(" {\n        imageSrc,\n        text\n      };\n    });\n  };\n  "),s("span",{staticClass:"hljs-keyword"},[a._v("const")]),a._v(" getDog = () => {\n    "),s("span",{staticClass:"hljs-comment"},[a._v("// ... 省略")]),a._v("\n  };\n  "),s("span",{staticClass:"hljs-keyword"},[a._v("const")]),a._v(" getGoat = () => {\n    "),s("span",{staticClass:"hljs-comment"},[a._v("// ... 省略")]),a._v("\n  };\n  "),s("span",{staticClass:"hljs-keyword"},[a._v("var")]),a._v(" _default = {\n    getDog,\n    getCat,\n    getGoat\n  };\n  _exports."),s("span",{staticClass:"hljs-keyword"},[a._v("default")]),a._v(" = _default;\n});\n")])]),a._v(" "),s("p",{attrs:{"data-nodeid":"1550"}},[a._v("这时，"),s("strong",{attrs:{"data-nodeid":"1713"}},[a._v("编译源码产出内容改为了由一个 IIFE 形式实现的命名空间")]),a._v("。同时观察源码：")]),a._v(" "),s("pre",{staticClass:"lang-java",attrs:{"data-nodeid":"1551"}},[s("code",{attrs:{"data-language":"java"}},[a._v("global.AnimalApi = mod."),s("span",{staticClass:"hljs-keyword"},[a._v("exports")]),a._v(";\n...\n"),s("span",{staticClass:"hljs-keyword"},[a._v("var")]),a._v(" _default = {\n    getDog,\n    getCat,\n    getGoat\n  };\n  _exports."),s("span",{staticClass:"hljs-keyword"},[a._v("default")]),a._v(" = _default;\n")])]),a._v(" "),s("p",{attrs:{"data-nodeid":"1552"}},[a._v("为了兼容 ESM 特性，导出内容全部挂在了 default 属性中（可以通过 libraryExport 属性来切换），我们的引用方式需要改为：")]),a._v(" "),s("pre",{staticClass:"lang-java",attrs:{"data-nodeid":"1553"}},[s("code",{attrs:{"data-language":"java"}},[a._v("AnimalApi."),s("span",{staticClass:"hljs-keyword"},[a._v("default")]),a._v(".getDog().then(function(animal) {\n    ...\n})\n")])]),a._v(" "),s("p",{attrs:{"data-nodeid":"1554"}},[a._v("解决了以上所有问题，看似大功告成了，但是工程的设计没有这么简单。事实上，"),s("strong",{attrs:{"data-nodeid":"1724"}},[a._v("在源码中，我们没有使用引入并编译 index.js 所需要的依赖")]),a._v("，比如 axios 并没有被引入处理。正确的方式应该是"),s("strong",{attrs:{"data-nodeid":"1725"}},[a._v("把公共库需要的依赖，一并按照依赖关系进行打包和引入")]),a._v("。")]),a._v(" "),s("p",{attrs:{"data-nodeid":"1555"}},[a._v("为了解决上面这个问题，此时需要引入 Webpack：")]),a._v(" "),s("pre",{staticClass:"lang-java",attrs:{"data-nodeid":"1556"}},[s("code",{attrs:{"data-language":"java"}},[a._v("npm install --save-dev webpack webpack-cli\n")])]),a._v(" "),s("p",{attrs:{"data-nodeid":"1557"}},[a._v("同时添加"),s("code",{attrs:{"data-backticks":"1","data-nodeid":"1728"}},[a._v("webpack.config.js")]),a._v("，内容为：")]),a._v(" "),s("pre",{staticClass:"lang-java",attrs:{"data-nodeid":"1558"}},[s("code",{attrs:{"data-language":"java"}},[s("span",{staticClass:"hljs-keyword"},[a._v("const")]),a._v(" path = require("),s("span",{staticClass:"hljs-string"},[a._v("'path'")]),a._v(");\n"),s("span",{staticClass:"hljs-keyword"},[a._v("module")]),a._v("."),s("span",{staticClass:"hljs-keyword"},[a._v("exports")]),a._v(" = {\n  entry: "),s("span",{staticClass:"hljs-string"},[a._v("'./index.js'")]),a._v(",\n  output: {\n    path: path.resolve(__dirname, "),s("span",{staticClass:"hljs-string"},[a._v("'lib'")]),a._v("),\n    filename: "),s("span",{staticClass:"hljs-string"},[a._v("'animal-api.js'")]),a._v(",\n    library: "),s("span",{staticClass:"hljs-string"},[a._v("'AnimalApi'")]),a._v(",\n    libraryTarget: "),s("span",{staticClass:"hljs-string"},[a._v("'var'")]),a._v("\n  },\n};\n")])]),a._v(" "),s("p",{attrs:{"data-nodeid":"1559"}},[a._v("我们设置入口为"),s("code",{attrs:{"data-backticks":"1","data-nodeid":"1731"}},[a._v("./index.js")]),a._v("，构建产出为"),s("code",{attrs:{"data-backticks":"1","data-nodeid":"1733"}},[a._v("./lib/animal-api.js")]),a._v("，同时通过设置 library 和 libraryTarget 将 AnimalApi 作为公共库对外暴露的命名空间。修改"),s("code",{attrs:{"data-backticks":"1","data-nodeid":"1735"}},[a._v("package.json")]),a._v("中的 build script 为"),s("code",{attrs:{"data-backticks":"1","data-nodeid":"1737"}},[a._v('"build": "webpack"')]),a._v("，执行"),s("code",{attrs:{"data-backticks":"1","data-nodeid":"1739"}},[a._v("npm run build")]),a._v("，得到产出，如下图：")]),a._v(" "),s("p",{attrs:{"data-nodeid":"1560"}},[s("img",{attrs:{src:"https://s0.lgstatic.com/i/image2/M01/04/EE/Cip5yF_4C9GAfFJAAAYFu4ci4cM274.png",alt:"Drawing 4.png","data-nodeid":"1743"}})]),a._v(" "),s("p",{attrs:{"data-nodeid":"1561"}},[a._v("至此，我们终于构造出了能够在浏览器中通过 script 标签引入的公共库。当然，一个现代化的公共库还需要支持更多场景，请继续阅读。")]),a._v(" "),s("h3",{attrs:{"data-nodeid":"1562"}},[a._v("打造公共库，支持 Node.js 环境")]),a._v(" "),s("p",{attrs:{"data-nodeid":"1563"}},[a._v("现在已经完成了公共库的浏览器端支持，下面我们要集中精力适配一下 Node.js 环境了。")]),a._v(" "),s("p",{attrs:{"data-nodeid":"1564"}},[a._v("首先编写一个"),s("code",{attrs:{"data-backticks":"1","data-nodeid":"1748"}},[a._v("node.test.js")]),a._v("文件，进行 Node.js 环境的验证：")]),a._v(" "),s("pre",{staticClass:"lang-java",attrs:{"data-nodeid":"1565"}},[s("code",{attrs:{"data-language":"java"}},[s("span",{staticClass:"hljs-keyword"},[a._v("const")]),a._v(" AnimalApi = require("),s("span",{staticClass:"hljs-string"},[a._v("'./index.js'")]),a._v(")\nAnimalApi.getCat().then(animal => {\n    console.log(animal)\n})\n")])]),a._v(" "),s("p",{attrs:{"data-nodeid":"1566"}},[a._v("这个文件的意义在于"),s("strong",{attrs:{"data-nodeid":"1757"}},[a._v("测试公共库是否能在 Node.js 环境下使用")]),a._v("。执行"),s("code",{attrs:{"data-backticks":"1","data-nodeid":"1755"}},[a._v("node node-test.js")]),a._v("，不出意料得到报错，如下图：")]),a._v(" "),s("p",{attrs:{"data-nodeid":"1567"}},[s("img",{attrs:{src:"https://s0.lgstatic.com/i/image2/M01/04/EE/Cip5yF_4C9iAVDQkAANk3PGzLdI933.png",alt:"Drawing 5.png","data-nodeid":"1760"}})]),a._v(" "),s("p",{attrs:{"data-nodeid":"1568"}},[a._v("这个错误我们并不陌生，在 Node.js 环境中，我们不能通过 require 来引入一个通过 ESM 编写的模块化文件。上面的操作中，我们通过 Webpack 编译出来了符合 UMD 规范的代码，尝试修改"),s("code",{attrs:{"data-backticks":"1","data-nodeid":"1762"}},[a._v("node.test.js")]),a._v("文件为：")]),a._v(" "),s("pre",{staticClass:"lang-java",attrs:{"data-nodeid":"1569"}},[s("code",{attrs:{"data-language":"java"}},[s("span",{staticClass:"hljs-keyword"},[a._v("const")]),a._v(" AnimalApi = require("),s("span",{staticClass:"hljs-string"},[a._v("'./lib/index'")]),a._v(")."),s("span",{staticClass:"hljs-keyword"},[a._v("default")]),a._v("\nAnimalApi.getCat().then((animal) => {\n    console.log(animal)\n})\n")])]),a._v(" "),s("p",{attrs:{"data-nodeid":"1570"}},[a._v("如上代码，我们按照"),s("code",{attrs:{"data-backticks":"1","data-nodeid":"1765"}},[a._v("require('./lib/index').default")]),a._v("的方式引用，就可以愉快地在 Node.js 环境中运行了。")]),a._v(" "),s("p",{attrs:{"data-nodeid":"1571"}},[a._v("事实上，依赖上一步的构建产出，我们只需要按照正确的引用路径，就可以轻松地支持 Node.js 环境了。是不是有些恍恍惚惚：“基本什么都没做，这就搞定了”，下面，我们从代码原理上阐述说明。")]),a._v(" "),s("p",{attrs:{"data-nodeid":"1572"}},[a._v("符合 UMD 规范的代码，形如：")]),a._v(" "),s("pre",{staticClass:"lang-java",attrs:{"data-nodeid":"1573"}},[s("code",{attrs:{"data-language":"java"}},[a._v("(function (root, factory) {\n    "),s("span",{staticClass:"hljs-keyword"},[a._v("if")]),a._v(" (typeof define === "),s("span",{staticClass:"hljs-string"},[a._v("'function'")]),a._v(" && define.amd) {\n        "),s("span",{staticClass:"hljs-comment"},[a._v("// AMD. Register as an anonymous module.")]),a._v("\n        define(["),s("span",{staticClass:"hljs-string"},[a._v("'b'")]),a._v("], factory);\n    } "),s("span",{staticClass:"hljs-keyword"},[a._v("else")]),a._v(" "),s("span",{staticClass:"hljs-keyword"},[a._v("if")]),a._v(" (typeof "),s("span",{staticClass:"hljs-keyword"},[a._v("module")]),a._v(" === "),s("span",{staticClass:"hljs-string"},[a._v("'object'")]),a._v(" && "),s("span",{staticClass:"hljs-keyword"},[a._v("module")]),a._v("."),s("span",{staticClass:"hljs-keyword"},[a._v("exports")]),a._v(") {\n        "),s("span",{staticClass:"hljs-comment"},[a._v("// Node.")]),a._v("\n        "),s("span",{staticClass:"hljs-keyword"},[a._v("module")]),a._v("."),s("span",{staticClass:"hljs-keyword"},[a._v("exports")]),a._v(" = factory(require("),s("span",{staticClass:"hljs-string"},[a._v("'b'")]),a._v("));\n    } "),s("span",{staticClass:"hljs-keyword"},[a._v("else")]),a._v(" {\n        "),s("span",{staticClass:"hljs-comment"},[a._v("// Browser globals (root is window)")]),a._v("\n        root.returnExports = factory(root.b);\n    }\n}(typeof self !== "),s("span",{staticClass:"hljs-string"},[a._v("'undefined'")]),a._v(" ? self : "),s("span",{staticClass:"hljs-keyword"},[a._v("this")]),a._v(", function (b) {\n    "),s("span",{staticClass:"hljs-comment"},[a._v("// Use b in some fashion.")]),a._v("\n    "),s("span",{staticClass:"hljs-comment"},[a._v("// Just return a value to define the module export.")]),a._v("\n    "),s("span",{staticClass:"hljs-comment"},[a._v("// This example returns an object, but the module")]),a._v("\n    "),s("span",{staticClass:"hljs-comment"},[a._v("// can return a function as the exported value.")]),a._v("\n    "),s("span",{staticClass:"hljs-keyword"},[a._v("return")]),a._v(" {};\n}));\n")])]),a._v(" "),s("p",{attrs:{"data-nodeid":"1574"}},[a._v("如上结构，通过 if...else 判断是否根据环境加载代码。我们的编译产出类似上面 UMD 格式，因此是天然支持浏览器和 Node.js 环境的。")]),a._v(" "),s("p",{attrs:{"data-nodeid":"1575"}},[a._v("但是这样的设计将 Node.js 和浏览器环境融合在了一个 bundle 当中，并不优雅，也不利于使用方优化。另外一个常见的做法是"),s("strong",{attrs:{"data-nodeid":"1775"}},[a._v("将公共库按环境区分，分别产出两个 bundle，分别支持 Node.js 和浏览器环境")]),a._v("。如下图架构：")]),a._v(" "),s("p",{attrs:{"data-nodeid":"1576"}},[s("img",{attrs:{src:"https://s0.lgstatic.com/i/image2/M01/04/F0/CgpVE1_4C-KADRY4AAFZJiKE29s142.png",alt:"Drawing 6.png","data-nodeid":"1778"}})]),a._v(" "),s("div",{attrs:{"data-nodeid":"1577"}},[s("p",{staticStyle:{"text-align":"center"}},[a._v("公共库支持浏览器/Node.js 环境方式示意图")])]),a._v(" "),s("p",{staticClass:"te-preview-highlight",attrs:{"data-nodeid":"7198"}},[a._v("当然，如果编译和产出为两种不同环境的资源，还得需要设置 package.json 中的相关字段。事实上，"),s("strong",{attrs:{"data-nodeid":"7217"}},[a._v("如果一个 npm 需要在不同环境下加载 npm 包不同的入口文件，就会牵扯到")]),s("code",{attrs:{"data-backticks":"1","data-nodeid":"7203"}},[a._v("main")]),s("strong",{attrs:{"data-nodeid":"7218"}},[a._v("字段")]),a._v("、"),s("code",{attrs:{"data-backticks":"1","data-nodeid":"7208"}},[a._v("module")]),s("strong",{attrs:{"data-nodeid":"7219"}},[a._v("以及")]),s("code",{attrs:{"data-backticks":"1","data-nodeid":"7212"}},[a._v("browser")]),s("strong",{attrs:{"data-nodeid":"7220"}},[a._v("字段")]),a._v("。简单来说：")]),a._v(" "),s("ul",{attrs:{"data-nodeid":"1579"}},[s("li",{attrs:{"data-nodeid":"1580"}},[s("p",{attrs:{"data-nodeid":"1581"}},[s("code",{attrs:{"data-backticks":"1","data-nodeid":"1798"}},[a._v("main")]),a._v("定义了"),s("code",{attrs:{"data-backticks":"1","data-nodeid":"1800"}},[a._v("npm")]),a._v("包的入口文件，Browser 环境和 Node 环境均可使用；")])]),a._v(" "),s("li",{attrs:{"data-nodeid":"1582"}},[s("p",{attrs:{"data-nodeid":"1583"}},[s("code",{attrs:{"data-backticks":"1","data-nodeid":"1802"}},[a._v("module")]),a._v("定义"),s("code",{attrs:{"data-backticks":"1","data-nodeid":"1804"}},[a._v("npm")]),a._v("包的 ESM 规范的入口文件，Browser 环境和 Node 环境均可使用；")])]),a._v(" "),s("li",{attrs:{"data-nodeid":"1584"}},[s("p",{attrs:{"data-nodeid":"1585"}},[s("code",{attrs:{"data-backticks":"1","data-nodeid":"1806"}},[a._v("browser")]),a._v("定义"),s("code",{attrs:{"data-backticks":"1","data-nodeid":"1808"}},[a._v("npm")]),a._v("包在 Browser 环境下的入口文件。")])])]),a._v(" "),s("p",{attrs:{"data-nodeid":"1586"}},[a._v("而这三个字段也需要区分优先级，打包工具对于不同环境适配不同入口的字段在选择上还是要以实际情况为准。经我测试后，在目前状态，"),s("strong",{attrs:{"data-nodeid":"1815"}},[a._v("Webpack 在 Web 浏览器环境配置下，优先选择：browser > module > main，在 Node.js 环境下 module > main")]),a._v("。")]),a._v(" "),s("h3",{attrs:{"data-nodeid":"1587"}},[a._v("从开源库总结生态设计")]),a._v(" "),s("p",{attrs:{"data-nodeid":"1588"}},[a._v("最后一部分，我们针对一个真正的公共库，来总结一下编译适配不同环境的“公共库最佳实践”。"),s("a",{attrs:{href:"https://www.npmjs.com/package/@riversun/simple-date-format","data-nodeid":"1820"}},[a._v("simple-date-format")]),a._v(" 可以将 Date 类型转换为标准定义格式的字符串类型，它支持了多种环境：")]),a._v(" "),s("pre",{staticClass:"lang-java",attrs:{"data-nodeid":"1589"}},[s("code",{attrs:{"data-language":"java"}},[a._v('import SimpleDateFormat from "@riversun/simple-date-format";\nconst SimpleDateFormat = require(\'@riversun/simple-date-format\');\n<script src="https://cdn.jsdelivr.net/npm/@riversun/simple-date-format@1.1.2/lib/simple-date-format.js"><\/script>\n')])]),a._v(" "),s("p",{attrs:{"data-nodeid":"1590"}},[a._v("使用方式也很简单：")]),a._v(" "),s("pre",{staticClass:"lang-java",attrs:{"data-nodeid":"1591"}},[s("code",{attrs:{"data-language":"java"}},[s("span",{staticClass:"hljs-keyword"},[a._v("const")]),a._v(" date = "),s("span",{staticClass:"hljs-keyword"},[a._v("new")]),a._v(" Date("),s("span",{staticClass:"hljs-string"},[a._v("'2018/07/17 12:08:56'")]),a._v(");\n"),s("span",{staticClass:"hljs-keyword"},[a._v("const")]),a._v(" sdf = "),s("span",{staticClass:"hljs-keyword"},[a._v("new")]),a._v(" SimpleDateFormat();\nconsole.log(sdf.formatWith("),s("span",{staticClass:"hljs-string"},[a._v("\"yyyy-MM-dd'T'HH:mm:ssXXX\"")]),a._v(", date));"),s("span",{staticClass:"hljs-comment"},[a._v('//to be "2018-07-17T12:08:56+09:00"')]),a._v("\n")])]),a._v(" "),s("p",{attrs:{"data-nodeid":"1592"}},[a._v("我们看这个公共库的相关设计，"),s("a",{attrs:{href:"https://github.com/riversun/simple-date-format/blob/master/webpack.config.js#L24","data-nodeid":"1826"}},[a._v("源码")]),a._v("如下：")]),a._v(" "),s("pre",{staticClass:"lang-java",attrs:{"data-nodeid":"1593"}},[s("code",{attrs:{"data-language":"java"}},[s("span",{staticClass:"hljs-comment"},[a._v("// 入口配置")]),a._v("\nentry: {\n  "),s("span",{staticClass:"hljs-string"},[a._v("'simple-date-format'")]),a._v(": ["),s("span",{staticClass:"hljs-string"},[a._v("'./src/simple-date-format.js'")]),a._v("],\n},\n"),s("span",{staticClass:"hljs-comment"},[a._v("// 产出配置")]),a._v("\noutput: {\n  path: path.join(__dirname, "),s("span",{staticClass:"hljs-string"},[a._v("'lib'")]),a._v("),\n  publicPath: "),s("span",{staticClass:"hljs-string"},[a._v("'/'")]),a._v(",\n  "),s("span",{staticClass:"hljs-comment"},[a._v("// 根据环境产出不同的文件名")]),a._v("\n  filename: argv.mode === "),s("span",{staticClass:"hljs-string"},[a._v("'production'")]),a._v(" ? `[name].js` : `[name].js`,  "),s("span",{staticClass:"hljs-comment"},[a._v("//`[name].min.js`")]),a._v("\n  library: "),s("span",{staticClass:"hljs-string"},[a._v("'SimpleDateFormat'")]),a._v(",\n  libraryExport: "),s("span",{staticClass:"hljs-string"},[a._v("'default'")]),a._v(",\n  "),s("span",{staticClass:"hljs-comment"},[a._v("// umd 模块化方式")]),a._v("\n  libraryTarget: "),s("span",{staticClass:"hljs-string"},[a._v("'umd'")]),a._v(",\n  globalObject: "),s("span",{staticClass:"hljs-string"},[a._v("'this'")]),a._v(","),s("span",{staticClass:"hljs-comment"},[a._v("//for both browser and node.js")]),a._v("\n  umdNamedDefine: "),s("span",{staticClass:"hljs-keyword"},[a._v("true")]),a._v(",\n  "),s("span",{staticClass:"hljs-comment"},[a._v("// 在和 output.library 和 output.libraryTarget 一起使用时，auxiliaryComment 选项允许用户向导出文件中插入注释")]),a._v("\n  auxiliaryComment: {\n    root: "),s("span",{staticClass:"hljs-string"},[a._v("'for Root'")]),a._v(",\n    commonjs: "),s("span",{staticClass:"hljs-string"},[a._v("'for CommonJS environment'")]),a._v(",\n    commonjs2: "),s("span",{staticClass:"hljs-string"},[a._v("'for CommonJS2 environment'")]),a._v(",\n    amd: "),s("span",{staticClass:"hljs-string"},[a._v("'for AMD environment'")]),a._v("\n  }\n},\n")])]),a._v(" "),s("p",{attrs:{"data-nodeid":"1594"}},[a._v("设计方式与前文类似，因为这个库的目标就是："),s("strong",{attrs:{"data-nodeid":"1833"}},[a._v("作为一个函数 helper 库，同时支持浏览器和 Node.js 环境")]),a._v("。它采取了比较“偷懒”的方式，使用了 UMD 规范来输出代码。")]),a._v(" "),s("p",{attrs:{"data-nodeid":"1595"}},[a._v("我们再看另一个例子，在 "),s("a",{attrs:{href:"https://github.com/lodash/lodash/blob/master/package.json#L12","data-nodeid":"1837"}},[a._v("Lodash")]),a._v(" 的构建脚本中，分为了：")]),a._v(" "),s("pre",{staticClass:"lang-java",attrs:{"data-nodeid":"1596"}},[s("code",{attrs:{"data-language":"java"}},[s("span",{staticClass:"hljs-string"},[a._v('"build"')]),a._v(": "),s("span",{staticClass:"hljs-string"},[a._v('"npm run build:main && npm run build:fp"')]),a._v(",\n"),s("span",{staticClass:"hljs-string"},[a._v('"build:fp"')]),a._v(": "),s("span",{staticClass:"hljs-string"},[a._v('"node lib/fp/build-dist.js"')]),a._v(",\n"),s("span",{staticClass:"hljs-string"},[a._v('"build:fp-modules"')]),a._v(": "),s("span",{staticClass:"hljs-string"},[a._v('"node lib/fp/build-modules.js"')]),a._v(",\n"),s("span",{staticClass:"hljs-string"},[a._v('"build:main"')]),a._v(": "),s("span",{staticClass:"hljs-string"},[a._v('"node lib/main/build-dist.js"')]),a._v(",\n"),s("span",{staticClass:"hljs-string"},[a._v('"build:main-modules"')]),a._v(": "),s("span",{staticClass:"hljs-string"},[a._v('"node lib/main/build-modules.js"')]),a._v(",\n")])]),a._v(" "),s("p",{attrs:{"data-nodeid":"1597"}},[a._v("其中主命令为 build，同时按照编译所需，提供：ES 版本、FP 版本等（build:fp/build:fp-modules/build:main/build:main-modules）。官方甚至提供了 "),s("a",{attrs:{href:"https://www.npmjs.com/package/lodash-cli","data-nodeid":"1842"}},[a._v("lodash-cli")]),a._v(" 支持开发者自定义构建，更多相关内容可以参考 "),s("a",{attrs:{href:"https://lodash.com/custom-builds","data-nodeid":"1846"}},[a._v("Custom Builds")]),a._v("。")]),a._v(" "),s("p",{attrs:{"data-nodeid":"1598"}},[a._v("我们在构建环节“颇费笔墨”，目的是让你理解前端生态天生“混乱”，不统一的运行环境使得公共库的架构，尤其是相关的构建设计更加复杂。更多构建相关内容，我们会在后续章节继续讨论，这里先到此为止。")]),a._v(" "),s("h3",{attrs:{"data-nodeid":"1599"}},[a._v("总结")]),a._v(" "),s("p",{attrs:{"data-nodeid":"1600"}},[a._v("这两节课我们从公共库的设计和使用方接入两个方面进行了梳理。当前前端生态多种规范并行、多类环境共存，因此使得“启用或设计一个公共库”并不简单，单纯的 'npm install' 后，才是一系列工程化问题的开始。")]),a._v(" "),s("p",{attrs:{"data-nodeid":"1601"}},[a._v("与此同时，开发者经常疲于业务开发，对于编译和构建，以及公共库设计和前端生态的理解往往得过且过，但这些内容正是前端基础设施道路上的重要一环，也是开发者通往前端架构师的必经之路。建议你将本节知识融入自己手上的真实项目中，刨根问底，相信你一定会有更多收获！")]),a._v(" "),s("p",{attrs:{"data-nodeid":"1602"}},[s("img",{attrs:{src:"https://s0.lgstatic.com/i/image/M00/8D/16/CgqCHl_4Ch-AQCAEAAVodGYCdmY431.png",alt:"Lark20210108-153014.png","data-nodeid":"1858"}})]),a._v(" "),s("p",{attrs:{"data-nodeid":"1603"}},[a._v("最后，如果本节内容你难以一步到位地理解消化，请不要灰心，我们会在后续章节中不断巩固梳理。我们下一讲再见！")]),a._v(" "),s("hr"),a._v(" "),s("h3",{attrs:{id:"精选评论"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#精选评论"}},[a._v("#")]),a._v(" 精选评论")]),a._v(" "),s("h5",{attrs:{id:"骏"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#骏"}},[a._v("#")]),a._v(" **骏：")]),a._v(" "),s("blockquote",[s("p",[a._v("作为一个库不应该把 axios 打包进去，因为业务方很可能也会使用 axios，这样会造成打包两次。正确的做法是将 axios 加入 peerDependencies，然后 webpack 中加入 external 排除掉")])]),a._v(" "),s("h5",{attrs:{id:"俊"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#俊"}},[a._v("#")]),a._v(" *俊：")]),a._v(" "),s("blockquote",[s("p",[a._v("赞👍🏻")])]),a._v(" "),s("h5",{attrs:{id:"野"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#野"}},[a._v("#")]),a._v(" *野：")]),a._v(" "),s("blockquote",[s("p",[a._v("照着做了一遍，引入webpack之后才能正确跑起来，明白了引入第三方js模块，比如axios的时候使用webpack工具的作用")])]),a._v(" "),s("h5",{attrs:{id:"棉"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#棉"}},[a._v("#")]),a._v(" **棉：")]),a._v(" "),s("blockquote",[s("p",[a._v("受益匪浅~求问老师一般在工作上也很难有机会去构建大型的基础建设项目，这一部分经验的缺失平时该如何弥补，确实自己本身写demo的时候也很难会遇到那么多问题~平时应该如何锻炼呢")])]),a._v(" "),s("h6",{attrs:{id:"讲师回复"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#讲师回复"}},[a._v("#")]),a._v("     讲师回复：")]),a._v(" "),s("blockquote",[s("p",[a._v("    可以再看看开篇词吧，我在开篇词里有说过这个问题~")])]),a._v(" "),s("h5",{attrs:{id:"_4550"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4550"}},[a._v("#")]),a._v(" **4550：")]),a._v(" "),s("blockquote",[s("p",[a._v("老师，这句话怎么理解：“为了兼容 ESM 特性，导出内容全部挂在了 default 属性”")])]),a._v(" "),s("h6",{attrs:{id:"讲师回复-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#讲师回复-2"}},[a._v("#")]),a._v("     讲师回复：")]),a._v(" "),s("blockquote",[s("p",[a._v("    这是因为 ESM 和 CommonJS 的规范，关于 default 设计的不同")])])])}),[],!1,null,null,null);s.default=e.exports}}]);