(window.webpackJsonp=window.webpackJsonp||[]).push([[181],{515:function(t,a,s){"use strict";s.r(a);var n=s(4),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",{attrs:{"data-nodeid":"27568"}},[t._v("从这一讲开始，我们正式进入 Node.js 主题学习。作为 Node.js 技术的重要应用场景，同构渲染 SSR 应用尤其重要。不管是服务端渲染还是服务端渲染衍生出的同构应用，现在来看已经并不新鲜了，实现起来也并不困难。可是有的开发者认为：同构应用不就是调用一个"),a("code",{attrs:{"data-backticks":"1","data-nodeid":"27570"}},[t._v("renderToString")]),t._v("（React 中）类似的 API 吗？")]),t._v(" "),a("p",{attrs:{"data-nodeid":"25341"}},[t._v("讲道理，确实如此，但同构应用也不只是这么简单。就拿面试来说，同构应用的考察点不是“纸上谈兵”的理论，而是实际实施时的细节。这一讲我们就来一步步实现一个 SSR 应用，并分析 SSR 应用的重点环节。相关内容你可以参考："),a("a",{attrs:{href:"https://github.com/HOUCe/ssr","data-nodeid":"25454"}},[t._v("实现一个简易 ssr")]),t._v("。")]),t._v(" "),a("h3",{attrs:{"data-nodeid":"25342"}},[t._v("实现一个简易 SSR 应用")]),t._v(" "),a("p",{attrs:{"data-nodeid":"25343"}},[t._v("SSR 渲染架构的优势已经非常明显了，不管是对SEO 友好还是性能提升，大部分开发者已经耳熟能详了。这一部分，我们以 React 技术栈为背景，实现一个 SSR 应用。")]),t._v(" "),a("p",{attrs:{"data-nodeid":"25344"}},[t._v("首先启动项目：")]),t._v(" "),a("pre",{staticClass:"lang-java",attrs:{"data-nodeid":"25345"}},[a("code",{attrs:{"data-language":"java"}},[t._v("npm init --yes\n")])]),t._v(" "),a("p",{attrs:{"data-nodeid":"25346"}},[t._v("配置 Babel 和Webpack，目的是将ESM 和React编译为 Node.js和浏览器能够理解的代码。相关"),a("code",{attrs:{"data-backticks":"1","data-nodeid":"25460"}},[t._v(".babelrc")]),t._v("内容如下代码：")]),t._v(" "),a("pre",{staticClass:"lang-java",attrs:{"data-nodeid":"25347"}},[a("code",{attrs:{"data-language":"java"}},[t._v("{\n  "),a("span",{staticClass:"hljs-string"},[t._v('"presets"')]),t._v(": ["),a("span",{staticClass:"hljs-string"},[t._v('"@babel/env"')]),t._v(", "),a("span",{staticClass:"hljs-string"},[t._v('"@babel/react"')]),t._v("]\n}\n")])]),t._v(" "),a("p",{attrs:{"data-nodeid":"25348"}},[t._v("如上代码，我们直接使用了"),a("code",{attrs:{"data-backticks":"1","data-nodeid":"25463"}},[t._v("@babel/env")]),t._v("和"),a("code",{attrs:{"data-backticks":"1","data-nodeid":"25465"}},[t._v("@babel/react")]),t._v("作为 presets。相关"),a("code",{attrs:{"data-backticks":"1","data-nodeid":"25467"}},[t._v("webpack.config.js")]),t._v("内容如下代码：")]),t._v(" "),a("pre",{staticClass:"lang-java",attrs:{"data-nodeid":"25349"}},[a("code",{attrs:{"data-language":"java"}},[a("span",{staticClass:"hljs-keyword"},[t._v("const")]),t._v(" path = require("),a("span",{staticClass:"hljs-string"},[t._v("'path'")]),t._v(");\n"),a("span",{staticClass:"hljs-keyword"},[t._v("module")]),t._v("."),a("span",{staticClass:"hljs-keyword"},[t._v("exports")]),t._v(" = {\n    entry: {\n        client: "),a("span",{staticClass:"hljs-string"},[t._v("'./src/client.js'")]),t._v(",\n        bundle: "),a("span",{staticClass:"hljs-string"},[t._v("'./src/bundle.js'")]),t._v("\n    },\n    output: {\n        path: path.resolve(__dirname, "),a("span",{staticClass:"hljs-string"},[t._v("'assets'")]),t._v("),\n        filename: "),a("span",{staticClass:"hljs-string"},[t._v('"[name].js"')]),t._v("\n    },\n    "),a("span",{staticClass:"hljs-keyword"},[t._v("module")]),t._v(": {\n        rules: [\n            { test: /\\.js$/, exclude: /node_modules/, loader: "),a("span",{staticClass:"hljs-string"},[t._v('"babel-loader"')]),t._v(" }\n        ]\n    }\n}\n")])]),t._v(" "),a("p",{attrs:{"data-nodeid":"25350"}},[t._v("配置入口文件为"),a("code",{attrs:{"data-backticks":"1","data-nodeid":"25470"}},[t._v("./src/client.js")]),t._v("和"),a("code",{attrs:{"data-backticks":"1","data-nodeid":"25472"}},[t._v("./src/bundle.js")]),t._v("，打包结果如下。")]),t._v(" "),a("ul",{attrs:{"data-nodeid":"25351"}},[a("li",{attrs:{"data-nodeid":"25352"}},[a("p",{attrs:{"data-nodeid":"25353"}},[a("code",{attrs:{"data-backticks":"1","data-nodeid":"25474"}},[t._v("assets/bundle.js")]),t._v("：CSR 架构下浏览器端脚本。")])]),t._v(" "),a("li",{attrs:{"data-nodeid":"25354"}},[a("p",{attrs:{"data-nodeid":"25355"}},[a("code",{attrs:{"data-backticks":"1","data-nodeid":"25476"}},[t._v("assets/client.js")]),t._v("：SSR 架构下浏览器端脚本，衔接 SSR 部分。")])])]),t._v(" "),a("p",{attrs:{"data-nodeid":"25356"}},[a("code",{attrs:{"data-backticks":"1","data-nodeid":"25478"}},[t._v("src/")]),t._v("文件夹包含所有源码，Babel 将会编译该文件内代码到"),a("code",{attrs:{"data-backticks":"1","data-nodeid":"25480"}},[t._v("views/")]),t._v("目录。这里需要你思考：为什么我们要编译源码呢？")]),t._v(" "),a("p",{attrs:{"data-nodeid":"25357"}},[t._v("业务源码中，我们使用 ESM 编写 React 和 Redux 代码，"),a("strong",{attrs:{"data-nodeid":"25491"}},[t._v("对于低版本 Node.js来说，并不能直接支持 ESM 规范")]),t._v("，因此需要使用 Babel 将"),a("code",{attrs:{"data-backticks":"1","data-nodeid":"25487"}},[t._v("src/")]),t._v("文件夹内代码编译到"),a("code",{attrs:{"data-backticks":"1","data-nodeid":"25489"}},[t._v("views/")]),t._v("目录中。相关命令如下：")]),t._v(" "),a("pre",{staticClass:"lang-java",attrs:{"data-nodeid":"25358"}},[a("code",{attrs:{"data-language":"java"}},[a("span",{staticClass:"hljs-string"},[t._v('"babel"')]),t._v(": "),a("span",{staticClass:"hljs-string"},[t._v('"babel src -d views"')]),t._v("\n")])]),t._v(" "),a("p",{attrs:{"data-nodeid":"25359"}},[t._v("我们对项目目录进行说明：")]),t._v(" "),a("ul",{attrs:{"data-nodeid":"25360"}},[a("li",{attrs:{"data-nodeid":"25361"}},[a("p",{attrs:{"data-nodeid":"25362"}},[a("code",{attrs:{"data-backticks":"1","data-nodeid":"25493"}},[t._v("src/components")]),t._v("中我们存放 React 组件；")])]),t._v(" "),a("li",{attrs:{"data-nodeid":"25363"}},[a("p",{attrs:{"data-nodeid":"25364"}},[a("code",{attrs:{"data-backticks":"1","data-nodeid":"25495"}},[t._v("src/redux/")]),t._v("中我们存放 Redux 相关代码；")])]),t._v(" "),a("li",{attrs:{"data-nodeid":"25365"}},[a("p",{attrs:{"data-nodeid":"25366"}},[a("code",{attrs:{"data-backticks":"1","data-nodeid":"25497"}},[t._v("assets/")]),t._v("和"),a("code",{attrs:{"data-backticks":"1","data-nodeid":"25499"}},[t._v("media/")]),t._v("中我们存放样式文件及图片；")])]),t._v(" "),a("li",{attrs:{"data-nodeid":"25367"}},[a("p",{attrs:{"data-nodeid":"25368"}},[a("code",{attrs:{"data-backticks":"1","data-nodeid":"25501"}},[t._v("src/server.js")]),t._v("和"),a("code",{attrs:{"data-backticks":"1","data-nodeid":"25503"}},[t._v("src/template.js")]),t._v("是 Node.js环境相关脚本。")])])]),t._v(" "),a("p",{attrs:{"data-nodeid":"25369"}},[t._v("接下来，我们进入 Node.js相关的"),a("code",{attrs:{"data-backticks":"1","data-nodeid":"25506"}},[t._v("src/server.js")]),t._v("和"),a("code",{attrs:{"data-backticks":"1","data-nodeid":"25508"}},[t._v("src/template.js")]),t._v("脚本的编写。")]),t._v(" "),a("p",{attrs:{"data-nodeid":"25370"}},[a("code",{attrs:{"data-backticks":"1","data-nodeid":"25510"}},[t._v("src/server.js")]),t._v("如下代码所示：")]),t._v(" "),a("pre",{staticClass:"lang-java",attrs:{"data-nodeid":"25371"}},[a("code",{attrs:{"data-language":"java"}},[t._v("import React from 'react';\nimport { renderToString } from 'react-dom/server';\nimport { Provider } from 'react-redux';\nimport configureStore from './redux/configureStore';\nimport App from './components/app';\nmodule.exports = function render(initialState) {\n // 初始化 redux store\n  const store = configureStore(initialState);\n  let content = renderToString(<Provider store={store} ><App /></Provider>);\n  const preloadedState = store.getState();\n  return {\n    content,\n    preloadedState\n  };\n};\n")])]),t._v(" "),a("p",{attrs:{"data-nodeid":"25372"}},[t._v("我们展开具体分析：")]),t._v(" "),a("ul",{attrs:{"data-nodeid":"25373"}},[a("li",{attrs:{"data-nodeid":"25374"}},[a("p",{attrs:{"data-nodeid":"25375"}},[a("code",{attrs:{"data-backticks":"1","data-nodeid":"25513"}},[t._v("initialState")]),t._v("作为参数传递给"),a("code",{attrs:{"data-backticks":"1","data-nodeid":"25515"}},[t._v("configureStore()")]),t._v("方法，并实例化一个新的Store；")])]),t._v(" "),a("li",{attrs:{"data-nodeid":"25376"}},[a("p",{attrs:{"data-nodeid":"25377"}},[t._v("调用"),a("code",{attrs:{"data-backticks":"1","data-nodeid":"25518"}},[t._v("renderToString()")]),t._v("方法，得到服务端渲染的 HTML 字符串"),a("code",{attrs:{"data-backticks":"1","data-nodeid":"25520"}},[t._v("content")]),t._v("；")])]),t._v(" "),a("li",{attrs:{"data-nodeid":"25378"}},[a("p",{attrs:{"data-nodeid":"25379"}},[t._v("调用 Redux"),a("code",{attrs:{"data-backticks":"1","data-nodeid":"25523"}},[t._v("getState()")]),t._v("方法，得到状态为"),a("code",{attrs:{"data-backticks":"1","data-nodeid":"25525"}},[t._v("preloadedState")]),t._v("；")])]),t._v(" "),a("li",{attrs:{"data-nodeid":"25380"}},[a("p",{attrs:{"data-nodeid":"25381"}},[t._v("返回 HTML 字符串"),a("code",{attrs:{"data-backticks":"1","data-nodeid":"25528"}},[t._v("content")]),t._v("和 preloadedState。")])])]),t._v(" "),a("p",{attrs:{"data-nodeid":"25382"}},[a("code",{attrs:{"data-backticks":"1","data-nodeid":"25530"}},[t._v("src/template.js")]),t._v("代码如下：")]),t._v(" "),a("pre",{staticClass:"lang-java",attrs:{"data-nodeid":"25383"}},[a("code",{attrs:{"data-language":"java"}},[t._v('export default function template(title, initialState = {}, content = "") {\n  let scripts = \'\';\n  // 是否有 content 内容\n  if (content) {\n    scripts = ` <script>\n                   window.__STATE__ = ${JSON.stringify(initialState)}\n                <\/script>\n                <script src="assets/client.js"><\/script>\n                `\n  } else {\n    scripts = ` <script src="assets/bundle.js"> <\/script> `\n  }\n  let page = `<!DOCTYPE html>\n              <html lang="en">\n              <head>\n                <meta charset="utf-8">\n                <title> ${title} </title>\n                <link rel="stylesheet" href="assets/style.css">\n              </head>\n              <body>\n                <div class="content">\n                   <div id="app" class="wrap-inner">\n                      ${content}\n                   </div>\n                </div>\n                  ${scripts}\n              </body>\n              `;\n  return page;\n}\n')])]),t._v(" "),a("p",{attrs:{"data-nodeid":"25384"}},[t._v("我们对上述代码进行解读："),a("code",{attrs:{"data-backticks":"1","data-nodeid":"25533"}},[t._v("template")]),t._v("函数接受"),a("code",{attrs:{"data-backticks":"1","data-nodeid":"25535"}},[t._v("title")]),t._v("、"),a("code",{attrs:{"data-backticks":"1","data-nodeid":"25537"}},[t._v("state")]),t._v("和"),a("code",{attrs:{"data-backticks":"1","data-nodeid":"25539"}},[t._v("content")]),t._v("作为参数，拼凑成最终的 HTML 文档，并将"),a("code",{attrs:{"data-backticks":"1","data-nodeid":"25541"}},[t._v("state")]),t._v("挂载到"),a("code",{attrs:{"data-backticks":"1","data-nodeid":"25543"}},[t._v("window.__STATE__")]),t._v("中，作为 script 标签内联到 HTML 文档，同时将 SSR 架构下"),a("code",{attrs:{"data-backticks":"1","data-nodeid":"25545"}},[t._v("assets/client.js")]),t._v("脚本或"),a("code",{attrs:{"data-backticks":"1","data-nodeid":"25547"}},[t._v("assets/bundle.js")]),t._v("嵌入。")]),t._v(" "),a("p",{attrs:{"data-nodeid":"25385"}},[t._v("下面，我们再聚焦同构部分的浏览器端脚本。")]),t._v(" "),a("p",{attrs:{"data-nodeid":"25386"}},[t._v("在CSR 架构下，"),a("code",{attrs:{"data-backticks":"1","data-nodeid":"25551"}},[t._v("src/bundle.js")]),t._v("代码如下：")]),t._v(" "),a("pre",{staticClass:"lang-java",attrs:{"data-nodeid":"25387"}},[a("code",{attrs:{"data-language":"java"}},[t._v("import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport configureStore from './redux/configureStore';\nimport App from './components/app';\n// 获取 store\nconst store = configureStore();\nrender(\n  <Provider store={store} > <App /> </Provider>,\n  document.querySelector('#app')\n);\n")])]),t._v(" "),a("p",{attrs:{"data-nodeid":"25388"}},[t._v("而 SSR 架构下，"),a("code",{attrs:{"data-backticks":"1","data-nodeid":"25554"}},[t._v("src/client.js")]),t._v("代码类似：")]),t._v(" "),a("pre",{staticClass:"lang-java",attrs:{"data-nodeid":"25389"}},[a("code",{attrs:{"data-language":"java"}},[t._v("import React from 'react';\nimport { hydrate } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport configureStore from './redux/configureStore';\nimport App from './components/app';\nconst state = window.__STATE__;\ndelete window.__STATE__;\nconst store = configureStore(state);\nhydrate(\n  <Provider store={store} > <App /> </Provider>,\n  document.querySelector('#app')\n);\n")])]),t._v(" "),a("p",{attrs:{"data-nodeid":"25390"}},[a("code",{attrs:{"data-backticks":"1","data-nodeid":"25556"}},[t._v("src/client.js")]),t._v("对比"),a("code",{attrs:{"data-backticks":"1","data-nodeid":"25558"}},[t._v("src/bundle.js")]),t._v("，比较关键的不同点在于"),a("strong",{attrs:{"data-nodeid":"25573"}},[t._v("使用了")]),a("code",{attrs:{"data-backticks":"1","data-nodeid":"25563"}},[t._v("window.__STATE__.")]),a("strong",{attrs:{"data-nodeid":"25574"}},[t._v("获取初始状态，同时使用了")]),a("code",{attrs:{"data-backticks":"1","data-nodeid":"25567"}},[t._v("hydrate()")]),a("strong",{attrs:{"data-nodeid":"25575"}},[t._v("方法代替了")]),a("code",{attrs:{"data-backticks":"1","data-nodeid":"25571"}},[t._v("render()")]),t._v("。")]),t._v(" "),a("p",{attrs:{"data-nodeid":"25391"}},[t._v("至此，我们就实现了一个简易的 SSR 应用。虽然简单，但完全体现了 SSR 架构的原理。然而生产情况复杂多变，我们继续往下看。")]),t._v(" "),a("h3",{attrs:{"data-nodeid":"25392"}},[t._v("同构应用中你容易忽略的细节")]),t._v(" "),a("p",{attrs:{"data-nodeid":"25393"}},[t._v("接下来，我们对几个更细节的问题加以分析。这些问题的处理，不再是代码层面的解决方案，更是工程化方向的设计。")]),t._v(" "),a("h4",{attrs:{"data-nodeid":"25394"}},[t._v("环境区分")]),t._v(" "),a("p",{attrs:{"data-nodeid":"25395"}},[t._v("我们知道，同构应用实现了客户端代码和服务端代码的基本统一，我们只需要编写一种组件，就能生成适用于服务端和客户端的组件案例。可是你是否知道，大多数情况下服务端代码和客户端代码需要单独处理？下面我简单举几个例子。")]),t._v(" "),a("ul",{attrs:{"data-nodeid":"25396"}},[a("li",{attrs:{"data-nodeid":"25397"}},[a("p",{attrs:{"data-nodeid":"25398"}},[a("strong",{attrs:{"data-nodeid":"25584"}},[t._v("路由代码差别")])])])]),t._v(" "),a("p",{attrs:{"data-nodeid":"25399"}},[t._v("服务端需要根据请求路径，匹配页面组件；客户端需要通过浏览器中的地址，匹配页面组件。")]),t._v(" "),a("p",{attrs:{"data-nodeid":"25400"}},[t._v("客户端代码：")]),t._v(" "),a("pre",{staticClass:"lang-java",attrs:{"data-nodeid":"25401"}},[a("code",{attrs:{"data-language":"java"}},[t._v("  const App = () => {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div>\n            <Route path='/' component={Home}>\n            <Route path='/product' component={Product}>\n          </div>\n        </BrowserRouter>\n      </Provider>\n    )\n  }\n  ReactDom.render(<App/>, document.querySelector('#root'))\n")])]),t._v(" "),a("p",{attrs:{"data-nodeid":"25402"}},[t._v("BrowserRouter 组件根据 window.location 以及 history API 实现页面切换，而服务端肯定是无法获取 window.location 的。")]),t._v(" "),a("p",{attrs:{"data-nodeid":"25403"}},[t._v("服务端代码如下：")]),t._v(" "),a("pre",{staticClass:"lang-java",attrs:{"data-nodeid":"25404"}},[a("code",{attrs:{"data-language":"java"}},[t._v("  const App = () => {\n    return\n      <Provider store={store}>\n        <StaticRouter location={req.path} context={context}>\n          <div>\n            <Route path='/' component={Home}>\n          </div>\n        </StaticRouter>\n      </Provider>\n  }\n  Return ReactDom.renderToString(<App/>)\n")])]),t._v(" "),a("p",{attrs:{"data-nodeid":"25405"}},[t._v("在服务端，需要"),a("strong",{attrs:{"data-nodeid":"25594"}},[t._v("使用 StaticRouter 组件")]),t._v("，并将请求地址和上下文信息作为 location 和 context 这两个props 传入 StaticRouter 中。")]),t._v(" "),a("ul",{attrs:{"data-nodeid":"25406"}},[a("li",{attrs:{"data-nodeid":"25407"}},[a("p",{attrs:{"data-nodeid":"25408"}},[a("strong",{attrs:{"data-nodeid":"25598"}},[t._v("打包差别")])])])]),t._v(" "),a("p",{attrs:{"data-nodeid":"28847"}},[t._v("服务端运行的代码如果需要依赖 Node 核心模块或者第三方模块，就不再需要把这些模块代码打包到最终代码中了。因为环境已经安装这些依赖，可以直接引用。这样一来，就需要我们"),a("strong",{attrs:{"data-nodeid":"28853"}},[t._v("在 Webpack 中配置 target：node")]),t._v("，并借助 webpack-node-externals 插件，解决第三方依赖打包的问题。")]),t._v(" "),a("h4",{attrs:{"data-nodeid":"25410"}},[t._v("注水和脱水")]),t._v(" "),a("p",{attrs:{"data-nodeid":"25411"}},[t._v("什么叫作注水和脱水呢？这个和同构应用中数据的获取有关：在服务器端渲染时，首先服务端请求接口拿到数据，并处理准备好数据状态（如果使用 Redux，就是进行Store 的更新），为了减少客户端的请求，我们需要保留住这个状态。")]),t._v(" "),a("p",{attrs:{"data-nodeid":"25412"}},[t._v("一般做法是在服务器端返回 HTML 字符串的时候，将数据 JSON.stringify 一并返回，这个过程，叫作脱水（dehydrate）；在客户端，就不再需要进行数据的请求了，可以直接使用服务端下发下来的数据，这个过程叫注水（hydrate）。")]),t._v(" "),a("p",{attrs:{"data-nodeid":"25413"}},[t._v("响应代码前面已经有所体现了，但是在服务端渲染时，服务端如何能够请求所有的 APIs，保障数据全部已经请求呢？")]),t._v(" "),a("p",{attrs:{"data-nodeid":"25414"}},[t._v("一般有两种方法进行服务端请求。")]),t._v(" "),a("ul",{attrs:{"data-nodeid":"25415"}},[a("li",{attrs:{"data-nodeid":"25416"}},[a("p",{attrs:{"data-nodeid":"25417"}},[t._v("react-router 的解决方案是配置路由route-config，结合 matchRoutes，找到页面上相关组件所需的请求接口的方法并执行请求。这就要求开发者通过路由配置信息，显式地告知服务端请求内容。如下代码：")])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" routes "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("path")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("component")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Root"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("loadData")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSomeData")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// etc.")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  \n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" routes "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./routes"')]),t._v("\n  \n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("App")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Switch"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("routes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("route")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Route "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("route"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("Switch"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",{attrs:{"data-nodeid":"25419"}},[t._v("在服务端代码中：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" matchPath "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"react-router-dom"')]),t._v("\n  \n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" promises "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  routes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("some")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("route")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" match "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("matchPath")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("req"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" route"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("match"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" promises"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("route"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("loadData")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("match"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" match\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  \n  Promise"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("all")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("promises"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("putTheDataSomewhereTheClientCanFindIt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("ul",{attrs:{"data-nodeid":"25421"}},[a("li",{attrs:{"data-nodeid":"25422"}},[a("p",{attrs:{"data-nodeid":"25423"}},[t._v("另外一种思路类似 Next.js，我们需要在 React 组件上"),a("strong",{attrs:{"data-nodeid":"25617"}},[t._v("定义静态方法")]),t._v("。比如定义静态 loadData 方法，在服务端渲染时，我们可以遍历所有组件的 loadData，获取需要请求的接口。")])])]),t._v(" "),a("h4",{attrs:{"data-nodeid":"25424"}},[t._v("安全问题")]),t._v(" "),a("p",{attrs:{"data-nodeid":"25425"}},[t._v("安全问题非常关键，尤其是涉及服务端渲染，开发者要格外小心。这里提出一个点：我们前面提到了注水和脱水过程，其中的代码：")]),t._v(" "),a("pre",{staticClass:"lang-java",attrs:{"data-nodeid":"25426"}},[a("code",{attrs:{"data-language":"java"}},[t._v('ctx.body = `\n  <!DOCTYPE html>\n  <html lang="en">\n    <head>\n      <meta charset="UTF-8">\n    </head>\n    <body>\n        <script>\n        window.context = {\n          initialState: ${JSON.stringify(store.getState())}\n        }\n      <\/script>\n      <div id="app">\n          // ...\n      </div>\n    </body>\n  </html>\n`\n')])]),t._v(" "),a("p",{attrs:{"data-nodeid":"25427"}},[t._v("非常容易遭受 XSS 攻击，JSON.stringify 可能会造成 script 注入。因此，我们需要"),a("strong",{attrs:{"data-nodeid":"25625"}},[t._v("严格清洗 JSON 字符串中的 HTML 标签和其他危险的字符")]),t._v("。我习惯使用 serialize-javascript 库进行处理，这也是同构应用中最容易被忽视的细节。")]),t._v(" "),a("p",{attrs:{"data-nodeid":"25428"}},[t._v("这里给大家留一个思考题，React"),a("code",{attrs:{"data-backticks":"1","data-nodeid":"25627"}},[t._v("dangerouslySetInnerHTML")]),t._v("API 也有类似风险，React 是怎么处理这个安全隐患的呢？")]),t._v(" "),a("h4",{attrs:{"data-nodeid":"25429"}},[t._v("请求认证处理")]),t._v(" "),a("p",{attrs:{"data-nodeid":"25430"}},[t._v("上面讲到服务端预先请求数据，那么请你思考这样一个场景：某个请求依赖 cookie 表明的用户信息，比如请求“我的学习计划列表”。这种情况下服务端请求是不同于客户端的，不会有浏览器添加 cookie 以及不含有其他相关的 header 信息。这个请求在服务端发送时，一定不会拿到预期的结果。")]),t._v(" "),a("p",{attrs:{"data-nodeid":"25431"}},[t._v("解决办法也很简单：服务端请求时需要保留客户端页面请求的信息（一般是 cookie），并在 API 请求时携带并透传这个信息（cookie）。")]),t._v(" "),a("h4",{attrs:{"data-nodeid":"25432"}},[t._v("样式问题处理")]),t._v(" "),a("p",{attrs:{"data-nodeid":"25433"}},[t._v("同构应用的样式处理容易被开发者忽视，而一旦忽略，就会掉到坑里。比如，我们不能再使用 style-loader 了，因为这个WebpackLoader 会在编译时将样式模块载入到 HTML header 中。但是在服务端渲染环境下，没有Window 对象，style-loader就会报错。一般我们使用 isomorphic-style-loader 来实现：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("\\.css$")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("use")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'isomorphic-style-loader'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'css-loader'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'postcss-loader'")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",{attrs:{"data-nodeid":"25435"}},[t._v("isomorphic-style-loader 的原理是什么呢？")]),t._v(" "),a("p",{attrs:{"data-nodeid":"25436"}},[t._v("我们知道，对于Webpack 来说，所有的资源都是模块。WebpackLoader 在编译过程中可以将导入的 CSS 文件转换成对象，拿到样式信息。因此"),a("strong",{attrs:{"data-nodeid":"25640"}},[t._v("isomorphic-style-loader 可以获取页面中所有组件样式")]),t._v("。为了实现得更加通用化，isomorphic-style-loader 利用 context API，在渲染页面组件时获取所有 React 组件的样式信息，最终插入 HTML 字符串中。")]),t._v(" "),a("p",{attrs:{"data-nodeid":"25437"}},[t._v("在服务端渲染时，我们需要加入这样的逻辑：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" express "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'express'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" React "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'react'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" ReactDOM "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'react-dom'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" StyleContext "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'isomorphic-style-loader/StyleContext'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" App "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./App.js'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" server "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("express")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" port "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" process"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PORT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),t._v("\nserver"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'*'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("req"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  css Set 类型来存储页面所有的样式")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" css "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("insertCss")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("styles")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" styles"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("style")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" css"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("_getCss")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" body "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ReactDOM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("renderToString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("StyleContext"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Provider value"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" insertCss "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("App "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("StyleContext"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Provider"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  \n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" html "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('<!doctype html>\n    <html>\n      <head>\n        <script src="client.js" defer><\/script>\n        // 将样式内连进 html 当中\n        <style>')]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("css"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('</style>\n      </head>\n      <body>\n        <div id="root">')]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("body"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("</div>\n      </body>\n    </html>")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n  res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("status")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nserver"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("listen")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("port"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("Node.js app is running at http://localhost:")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("port"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",{attrs:{"data-nodeid":"25439"}},[t._v("分析上面代码，我们定义了 css Set 类型来存储页面所有的样式，并定义了 insertCss 方法。该方法通过 context 传给每个 React 组件，这样每个组件就可以调用 insertCss 方法。该方法调用时，会将组件样式加入 css Set 当中。")]),t._v(" "),a("p",{attrs:{"data-nodeid":"25440"}},[t._v("最后我们用"),a("code",{attrs:{"data-backticks":"1","data-nodeid":"25644"}},[t._v("[...css].join('')")]),t._v("就可以获取页面的所有样式字符串。")]),t._v(" "),a("p",{attrs:{"data-nodeid":"25441"}},[t._v("强调一下，"),a("a",{attrs:{href:"https://github.com/kriasoft/isomorphic-style-loader","data-nodeid":"25649"}},[t._v("isomorphic-style-loader 的源码")]),t._v("目前已经更新，采用了最新的 ReactHooks API，我推荐给 React 开发者阅读，相信你一定收获很多！")]),t._v(" "),a("h3",{attrs:{"data-nodeid":"25442"}},[t._v("总结")]),t._v(" "),a("p",{attrs:{"data-nodeid":"25443"}},[t._v("本小节前半部分我们“手把手”教你实现服务端渲染的同构应用，因为这些知识并不困难，社区上资料也很多。后半部分我们从更高的角度出发，剖析同构应用中那些关键的细节点和疑难问题的解决方案，这些经验源于真刀真枪的线上案例，即使你没有开发过同构应用，也能从中全方位地了解关键信息，一旦掌握了这些细节，同构应用的实现就会更稳、更可靠。")]),t._v(" "),a("p",{attrs:{"data-nodeid":"25444"}},[t._v("本讲内容总结如下：")]),t._v(" "),a("p",{staticClass:"te-preview-highlight",attrs:{"data-nodeid":"29488"}},[a("img",{attrs:{src:"https://s0.lgstatic.com/i/image6/M00/16/ED/CioPOWBHGf-ANBuWAAJkpsrE7fA808.png",alt:"同构渲染架构： 实现一个 SSR 应用.png","data-nodeid":"29491"}})]),t._v(" "),a("p",{attrs:{"data-nodeid":"25446"}},[t._v("同构应用其实远比理论复杂，绝对不是几个 APIs 和几台服务器就能完成的，希望大家多思考、多动手，一定会更有体会。下一讲，我们进入 CI/CD 流程，设计一个性能守卫系统，以此帮助你了解：Node.js 除了同构直出、数据聚合以外，还能做一些重要的，且有趣的服务。")]),t._v(" "),a("hr"),t._v(" "),a("h3",{attrs:{id:"精选评论"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#精选评论"}},[t._v("#")]),t._v(" 精选评论")])])}),[],!1,null,null,null);a.default=e.exports}}]);