(window.webpackJsonp=window.webpackJsonp||[]).push([[84],{423:function(t,s,a){"use strict";a.r(s);var r=a(4),e=Object(r.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[s("code",[t._v("XSS")]),t._v("就是"),s("code",[t._v("Cross Site Scripting")]),t._v(",为了和 css 攻击区分开，所以叫 XSS")]),t._v(" "),s("p",[t._v("XSS 攻击是指浏览器中执行恶意脚本(无论是跨域还是同域)，从而拿到用户的信息并进行操作。")]),t._v(" "),s("ul",[s("li",[t._v("窃取 Cookie")]),t._v(" "),s("li",[t._v("监听用户行为，比如输入账号密码后直接发送到黑客服务器")]),t._v(" "),s("li",[t._v("修改 DOM 伪造登录表单")]),t._v(" "),s("li",[t._v("在页面中生成浮窗广告")])]),t._v(" "),s("p",[t._v("XSS 分为三种方式")]),t._v(" "),s("h2",{attrs:{id:"存储型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#存储型"}},[t._v("#")]),t._v(" 存储型")]),t._v(" "),s("p",[t._v("存储型，顾名思义就是将恶意脚本存储了起来，确实，存储型的 XSS 将脚本存储到了服务端的数据库，然后在客户端执行这些脚本，从而达到攻击的效果。")]),t._v(" "),s("p",[t._v("常见的场景是留言评论区提交一段脚本代码，如果前后端没有做好转义的工作，那评论内容存到了数据库，在页面渲染过程中直接执行, 相当于执行一段未知逻辑的 JS 代码，是非常恐怖的。这就是存储型的 XSS 攻击")]),t._v(" "),s("h2",{attrs:{id:"反射型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#反射型"}},[t._v("#")]),t._v(" 反射型")]),t._v(" "),s("p",[t._v("反射型 XSS 指的是恶意脚本作为网络请求的一部分")]),t._v(" "),s("blockquote",[s("p",[t._v("http://www.shenzjd.com?q="),s("script",[t._v("alert(&quot;你完蛋了&quot;)")])])]),t._v(" "),s("p",[t._v("这样，在服务器端会拿到 q 参数,然后将内容返回给浏览器端，浏览器将这些内容作为 HTML 的一部分解析，发现是一个脚本，直接执行，这样就被攻击了。")]),t._v(" "),s("p",[t._v("之所以叫它反射型, 是因为恶意脚本是通过作为网络请求的参数，经过服务器，然后再反射到 HTML 文档中，执行解析。和存储型不一样的是，服务器并不会存储这些恶意脚本")]),t._v(" "),s("h2",{attrs:{id:"文档型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文档型"}},[t._v("#")]),t._v(" 文档型")]),t._v(" "),s("p",[t._v("文档型的 XSS 攻击并不会经过服务端，而是作为中间人的角色，在数据传输过程劫持到网络数据包，然后修改里面的 html 文档！")]),t._v(" "),s("p",[t._v("这样的劫持方式包括 WIFI 路由器劫持或者本地恶意软件等(dns 篡改)")]),t._v(" "),s("h2",{attrs:{id:"防范措施"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#防范措施"}},[t._v("#")]),t._v(" 防范措施")]),t._v(" "),s("p",[t._v("一个共同点: 都是让恶意脚本直接能在浏览器中执行")]),t._v(" "),s("p",[t._v("那么要防范它，就是要避免这些脚本代码的执行")]),t._v(" "),s("p",[t._v("一个信念\n千万不要相信任何用户的输入！")]),t._v(" "),s("p",[t._v("无论是在前端和服务端，都要对用户的输入进行转码或者过滤。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'你完蛋了'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("h3",{attrs:{id:"转码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#转码"}},[t._v("#")]),t._v(" 转码")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("lt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("script"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("gt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("#"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("39")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("你完蛋了"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("#"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("39")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("lt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("gt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("这样的代码在 html 解析的过程中是无法执行的。")]),t._v(" "),s("p",[t._v("当然也可以利用关键词过滤的方式，将 script 标签给删除。")]),t._v(" "),s("h3",{attrs:{id:"利用-csp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#利用-csp"}},[t._v("#")]),t._v(" 利用 CSP")]),t._v(" "),s("p",[t._v("CSP，即浏览器中的内容安全策略，它的核心思想就是服务器决定浏览器加载哪些资源，具体来说可以完成以下功能")]),t._v(" "),s("ul",[s("li",[t._v("限制其他域下的资源加载")]),t._v(" "),s("li",[t._v("禁止向其它域提交数据")]),t._v(" "),s("li",[t._v("提供上报机制，能帮助我们及时发现 XSS 攻击")])]),t._v(" "),s("h3",{attrs:{id:"利用-httponly"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#利用-httponly"}},[t._v("#")]),t._v(" 利用 HttpOnly")]),t._v(" "),s("p",[t._v("很多 XSS 攻击脚本都是用来窃取 Cookie, 而设置 Cookie 的 HttpOnly 属性后，JavaScript 便无法读取 Cookie 的值。这样也能很好的防范 XSS 攻击。")]),t._v(" "),s("h2",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),s("p",[t._v("XSS 攻击是指浏览器中执行恶意脚本, 然后拿到用户的信息进行操作。主要分为存储型、反射型和文档型。防范的措施包括:")]),t._v(" "),s("p",[t._v("一个信念: 不要相信用户的输入，对输入内容转码或者过滤，让其不可执行。\n两个利用: 利用 CSP，利用 Cookie 的 HttpOnly 属性。")]),t._v(" "),s("h2",{attrs:{id:"参考链接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考链接"}},[t._v("#")]),t._v(" 参考链接")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://sanyuan0704.top/my_blog/blogs/browser/browser-security/001.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://sanyuan0704.top/my_blog/blogs/browser/browser-security/001.html"),s("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=e.exports}}]);