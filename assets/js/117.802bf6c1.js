(window.webpackJsonp=window.webpackJsonp||[]).push([[117],{455:function(t,s,e){"use strict";e.r(s);var a=e(4),r=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"前言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),s("p",[t._v("最近花了一些时间在项目的性能优化上，背后做了很多工作，但是最后依然没有达到自己想要的结果，有些失望，但是还是记录下自己的执着。")]),t._v(" "),s("p",[s("strong",[t._v("性能优化总结：减少请求次数、减小资源大小、提高响应和加载速度、优化资源加载时机、优化加载方式。")])]),t._v(" "),s("h2",{attrs:{id:"性能分类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#性能分类"}},[t._v("#")]),t._v(" 性能分类")]),t._v(" "),s("p",[t._v("对前端工程性能的优化，我觉得可以分为两类：")]),t._v(" "),s("ul",[s("li",[t._v("站在用户视角的主观的可感知的性能。")]),t._v(" "),s("li",[t._v("站在开发者视角的可客观度量的性能。")])]),t._v(" "),s("h3",{attrs:{id:"感知性能"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#感知性能"}},[t._v("#")]),t._v(" 感知性能")]),t._v(" "),s("p",[t._v("对于用户来说，用户的感知性能才是最重要的，简单讲，就是让用户感觉你的网站访问很快，并且感知性能没有衡量标准。")]),t._v(" "),s("p",[t._v("不过，凡事总有例外，如果一个页面的加载时间就会很长，我们也可以通过一些方式让用户觉得没有那么慢。")]),t._v(" "),s("p",[s("strong",[t._v("总之一句话，你的页面可以做的不快，但是你可以让你的用户觉得你很快。")])]),t._v(" "),s("h3",{attrs:{id:"客观性能"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#客观性能"}},[t._v("#")]),t._v(" 客观性能")]),t._v(" "),s("p",[t._v("对于开发者来说，性能指标是可以客观度量的，我们可以通过一些手段来优化 Web 性能，使这些度量指标达到开发者设定的标准。")]),t._v(" "),s("p",[t._v("客观性能是指，从用户输入 url 开始，到下载、解析和执行所有资源以及最终绘制的整个过程的时间度量。")]),t._v(" "),s("p",[s("strong",[t._v("性能指标是个很复杂的标准，后续我会单独整理出一篇文章介绍性能指标。")])]),t._v(" "),s("h2",{attrs:{id:"构建优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#构建优化"}},[t._v("#")]),t._v(" 构建优化")]),t._v(" "),s("p",[s("strong",[t._v("由于我司使用的是 "),s("em",[t._v("@vue/cli")]),t._v("，所以许多 webpack 配置脚手架已经帮你完成了，我就不叙述了，这里只讲基于 "),s("em",[t._v("@vue/cli")]),t._v(" 做的一些优化配置")])]),t._v(" "),s("h3",{attrs:{id:"gzip-压缩"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gzip-压缩"}},[t._v("#")]),t._v(" gzip 压缩")]),t._v(" "),s("p",[s("code",[t._v("gzip")]),t._v(" 压缩效率非常高，通常可以达到 70% 的压缩率，也就是说，如果你的网页有 30K，压缩之后就变成了 9K 左右。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("//npm i -D compression-webpack-plugin\nconfigureWebpack: config => {\n const CompressionPlugin = require('compression-webpack-plugin')\n config.plugins.push(new CompressionPlugin())\n}")]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"去除-console-log"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#去除-console-log"}},[t._v("#")]),t._v(" 去除 console.log")]),t._v(" "),s("p",[t._v("线上项目自然不应该被看到控制台的打印日志,所以我们需要将 "),s("code",[t._v("console.log")]),t._v(" 都去除掉。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("//npm i -D terser-webpack-plugin\n configureWebpack: config => {\n const TerserPlugin = require('terser-webpack-plugin')\n config.optimization.minimizer.push(\n new TerserPlugin({\n extractComments: false,\n terserOptions: { compress: { drop_console: true } },\n })\n )\n }")]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"去除-sourcemap"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#去除-sourcemap"}},[t._v("#")]),t._v(" 去除 SourceMap")]),t._v(" "),s("p",[t._v("由于打包后的文件经过了压缩、合并、混淆、babel 编译后的代码不利于定位分析 bug。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("module.exports = {\n productionSourceMap: false,\n}")]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"cdn-减少打包体积"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cdn-减少打包体积"}},[t._v("#")]),t._v(" CDN 减少打包体积")]),t._v(" "),s("p",[t._v("使用 "),s("code",[t._v("cdn")]),t._v(" 文件来减少工程到打包体积，也可以按需加载。")]),t._v(" "),s("p",[t._v("在 /public/index.html 中引入需要的 js 和 css 文件")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/6/20/172d09f7c0c4afeb?imageView2/0/w/1280/h/960/ignore-error/1",alt:""}})]),t._v(" "),s("p",[t._v("去掉 package.json 中对于 vue、element-ui 等相关资源的依赖")]),t._v(" "),s("p",[t._v("src/main.js ，去掉 vue、element-ui 等相关资源的 import 和 vue.use 这些语句")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/6/20/172d09f7c39e62c5?imageView2/0/w/1280/h/960/ignore-error/1",alt:""}})]),t._v(" "),s("p",[t._v("配置 externals。由于使用 Vue Cli 3 默认配置，新建出来的项目没有了 build 目录，首先得在项目根目录下，新建 vue.config.js 文件，里面添加以下代码：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("module.exports = {\n configureWebpack:{\n externals:{\n 'Vue': 'Vue',\n 'element-ui': 'element-ui',\n 'clipboard':'VueClipboard'\n }\n }\n}")]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"预渲染"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#预渲染"}},[t._v("#")]),t._v(" 预渲染")]),t._v(" "),s("blockquote",[s("p",[t._v("渲染方式分为三种，客户端渲染，服务端渲染，预渲染。")])]),t._v(" "),s("p",[t._v("我们默认的开发方式是通过客户端渲染，但是客户端渲染页面内容，关键链路较长，首屏渲染会有一定延迟，并且对 "),s("em",[t._v("SEO")]),t._v(" 非常不友好，对于 C 端的产品来说，是不可行的。")]),t._v(" "),s("p",[t._v("所以很多公司都会通过服务端渲染（SSR）或是 预渲染的方式来解决这两点问题，由于公司技术栈原因，我们采用预渲染的方式来做优化。")]),t._v(" "),s("blockquote",[s("p",[t._v("什么是预渲染？")])]),t._v(" "),s("p",[t._v("简单说，就是将浏览器解析 "),s("code",[t._v("javascript")]),t._v(" 动态渲染页面的这部分工作，在打包阶段就完成了，（只构建了静态数据）换个说法在构建过程中，"),s("code",[t._v("webpack")]),t._v(" 通过使用 "),s("code",[t._v("prerender-spa-plugin")]),t._v(" 插件生成静态结构的 "),s("code",[t._v("html")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("// npm i -D prerender-spa-plugin\n configureWebpack: config => {\n const path = require('path')\n const PrerenderSPAPlugin = require('prerender-spa-plugin')\n config.plugins.push(\n new PrerenderSPAPlugin({\n staticDir: path.join(__dirname, 'dist'),\n routes: ['/'],\n minify: {\n collapseBooleanAttributes: true,\n collapseWhitespace: true,\n keepClosingSlash: true,\n decodeEntities: true,\n sortAttributes: true,\n },\n renderer: new PrerenderSPAPlugin.PuppeteerRenderer({\n renderAfterDocumentEvent: 'render-event',\n renderAfterTime: 5000,\n // headless: false,\n }),\n })\n )\n }")]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[s("strong",[t._v("注意：路由模式必须为 "),s("code",[t._v("history")]),t._v(" ，如果不设置 "),s("code",[t._v("history")]),t._v(" 模式，也能运行和生成文件，每个 "),s("code",[t._v("index.html")]),t._v(" 文件的内容都会是一样的。")])]),t._v(" "),s("h2",{attrs:{id:"网络资源优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#网络资源优化"}},[t._v("#")]),t._v(" 网络资源优化")]),t._v(" "),s("h3",{attrs:{id:"service-worker"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#service-worker"}},[t._v("#")]),t._v(" Service Worker")]),t._v(" "),s("p",[s("code",[t._v("ServiceWorker")]),t._v(" 是运行在浏览器后台进程里的一段 JS，它可以做许多事情，比如拦截客户端的请求、向客户端发送消息、向服务器发起请求等等，其中最重要的作用之一就是离线资源缓存。")]),t._v(" "),s("p",[s("code",[t._v("ServiceWorker")]),t._v(" 拥有对缓存流程丰富灵活的控制能力，当页面请求到 "),s("code",[t._v("ServiceWorker")]),t._v(" 时，"),s("code",[t._v("ServiceWorker")]),t._v(" 同时请求缓存和网络，把缓存的内容直接给用户，而后覆盖缓存，我司已经使用了 "),s("code",[t._v("ServiceWorker")]),t._v(" 替换 "),s("code",[t._v("HTTP缓存策略")]),t._v("。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/6/17/172c164286ca09bd?imageView2/0/w/1280/h/960/ignore-error/1",alt:""}})]),t._v(" "),s("p",[s("strong",[t._v("注意：需要 HTTPS 才可以使用 ServiceWorker")])]),t._v(" "),s("h3",{attrs:{id:"http-缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http-缓存"}},[t._v("#")]),t._v(" http 缓存")]),t._v(" "),s("p",[t._v("HTTP 缓存一般分为两类："),s("strong",[t._v("强缓存（也称本地缓存）")]),t._v(" 和 "),s("strong",[t._v("协商缓存（也称 304 缓存）")]),t._v("。")]),t._v(" "),s("p",[t._v("普通刷新会启用 "),s("strong",[t._v("协商缓存")]),t._v("，忽略 "),s("strong",[t._v("强缓存")]),t._v("。只有在地址栏或收藏夹输入网址、通过链接引用资源等情况下，浏览器才会启用 "),s("strong",[t._v("强缓存")]),t._v("。")]),t._v(" "),s("h4",{attrs:{id:"强缓存-200"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#强缓存-200"}},[t._v("#")]),t._v(" 强缓存（200）")]),t._v(" "),s("p",[t._v("本地缓存是最快速的一种缓存方式，只要资源还在缓存有效期内，浏览器就会直接在本地读取，不会请求服务端。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/6/17/172c060f69f1c1f4?imageView2/0/w/1280/h/960/ignore-error/1",alt:""}})]),t._v(" "),s("h4",{attrs:{id:"协商缓存-304"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#协商缓存-304"}},[t._v("#")]),t._v(" 协商缓存（304）")]),t._v(" "),s("p",[t._v("协商缓存，顾名思义是经过浏览器与服务器之间协商过之后，在决定是否读取本地缓存，如果服务器通知浏览器可以读取本地缓存，会返回 304 状态码，并且协商过程很简单，只会发送头信息，不会发送响应体。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/6/17/172c061440cf617f?imageView2/0/w/1280/h/960/ignore-error/1",alt:""}})]),t._v(" "),s("h4",{attrs:{id:"缓存位置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#缓存位置"}},[t._v("#")]),t._v(" 缓存位置")]),t._v(" "),s("p",[t._v("缓存位置一般分为：Memory Cache（内存缓存）和 Disk Cache（硬盘缓存）")]),t._v(" "),s("p",[t._v("内存缓存：读取快、持续时间短、容量小")]),t._v(" "),s("p",[t._v("硬盘缓存：读取慢、持续时间长、容量大")]),t._v(" "),s("h4",{attrs:{id:"缓存优先级"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#缓存优先级"}},[t._v("#")]),t._v(" 缓存优先级")]),t._v(" "),s("p",[t._v("Service Worker -> Memory Cache -> Disk Cache -> Push Cache")]),t._v(" "),s("h3",{attrs:{id:"http2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http2"}},[t._v("#")]),t._v(" HTTP2")]),t._v(" "),s("p",[t._v("HTTP2 四个新特性：")]),t._v(" "),s("ul",[s("li",[t._v("多路复用，无需多个 TCP 连接，因为其允许在单一的 HTTP2 连接上发起多重请求，因此可以不用依赖建立多个 TCP 连接。")]),t._v(" "),s("li",[t._v("二进制分帧，将所有要传输的消息采用二进制编码，并且会将信息分割为更小的消息块。")]),t._v(" "),s("li",[t._v("头部压缩，用 HPACK 技术压缩头部，减小报文大小")]),t._v(" "),s("li",[t._v("服务端推送，服务端可以在客户端发起请求前发送数据，换句话说，服务端可以对客户端的一个请求发送多个相应，并且资源可以正常缓存。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("server {\n listen 443 ssl http2;\n}")]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[s("strong",[t._v("注意：使用 http2 的前提是必须是 https。")])]),t._v(" "),s("h3",{attrs:{id:"资源预加载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#资源预加载"}},[t._v("#")]),t._v(" 资源预加载")]),t._v(" "),s("p",[t._v("简单说，提前加载资源，当用户需要查看时可直接从本地缓存中渲染。")]),t._v(" "),s("p",[s("strong",[t._v("总结：对当前页面需要的资源，使用 preload 进行预加载，对其它页面需要的资源进行 prefetch 预加载。")])]),t._v(" "),s("h4",{attrs:{id:"preload"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#preload"}},[t._v("#")]),t._v(" preload")]),t._v(" "),s("p",[s("code",[t._v("preload")]),t._v(" 页面加载的过程中，在浏览器开始主体渲染之前加载。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('\x3c!-- 对sty1e.cs5和 index.js进行pre1oad预加载 --\x3e\n<link rel="preload" href="style.css" as="style">\n<link rel="preload" href="index.js" as="script">')]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h4",{attrs:{id:"prefetch"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#prefetch"}},[t._v("#")]),t._v(" prefetch")]),t._v(" "),s("p",[s("code",[t._v("prefetch")]),t._v(" 页面加载完成后，利用空闲时间提前加载。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('\x3c!--对资源进行 prefetch预加载--\x3e\n<link rel="prefetch" href="next.css">\n<link rel="prefetch" href="next.js">')]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("注意："),s("code",[t._v("vue-cli")]),t._v(" 默认开启 "),s("code",[t._v("prefetch")]),t._v(" ，可在 "),s("code",[t._v("vue.config.js")]),t._v(" 中全局禁用 "),s("code",[t._v("prefetch")]),t._v(" ，再针对指定模块开启。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("chainWebpack: config => {\n config.plugins.delete('prefetch')\n}")]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h4",{attrs:{id:"dns-prefetch"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dns-prefetch"}},[t._v("#")]),t._v(" dns-prefetch")]),t._v(" "),s("p",[t._v("页面加载完成后，利用空闲时间提前加载。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('<link rel="dns-prefetch" href="//example.com">')]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"异步无阻塞加载-js"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#异步无阻塞加载-js"}},[t._v("#")]),t._v(" 异步无阻塞加载 JS")]),t._v(" "),s("p",[t._v("异步加载 js 文件，并且不会阻塞页面的渲染。")]),t._v(" "),s("p",[t._v("先来看一个普通的 script 标签解析过程。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('<script src="a.js" ><\/script>')]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ol",[s("li",[t._v("停止解析 document.")]),t._v(" "),s("li",[t._v("请求 a.js")]),t._v(" "),s("li",[t._v("执行 a.js 中的脚本")]),t._v(" "),s("li",[t._v("继续解析 document")])]),t._v(" "),s("h4",{attrs:{id:"defer"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#defer"}},[t._v("#")]),t._v(" defer")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('<script src="d.js" defer><\/script>\n<script src="e.js" defer><\/script>')]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ol",[s("li",[t._v("不阻止解析 document， 并行下载 d.js, e.js")]),t._v(" "),s("li",[t._v("即使下载完 d.js, e.js 仍继续解析 document")]),t._v(" "),s("li",[t._v("按照页面中出现的顺序，在其他同步脚本执行后，DOMContentLoaded 事件前 依次执行 d.js, e.js。")])]),t._v(" "),s("h4",{attrs:{id:"async"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#async"}},[t._v("#")]),t._v(" async")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('<script src="b.js" async><\/script>\n<script src="c.js" async><\/script>')]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ol",[s("li",[t._v("不阻止解析 document, 并行下载 b.js, c.js")]),t._v(" "),s("li",[t._v("当脚本下载完后立即执行。（两者执行顺序不确定，执行阶段不确定，可能在 DOMContentLoaded 事件前或者后 ）")])]),t._v(" "),s("h3",{attrs:{id:"webp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#webp"}},[t._v("#")]),t._v(" webp")]),t._v(" "),s("p",[s("strong",[t._v("webp")]),t._v(" 是一种新的图片格式，它的体积只有只有 "),s("strong",[t._v("JPEG")]),t._v(" 的 2/3，将图片资源大量换成 "),s("strong",[t._v("webp")]),t._v(" 格式可以加快请求的速度。")]),t._v(" "),s("p",[t._v("我司的图片资源大部分都放在阿里的 "),s("strong",[t._v("OSS")]),t._v(" 上，并且阿里提供了接口，可以在线将 "),s("strong",[t._v("png/jpeg")]),t._v(" 转为 "),s("strong",[t._v("webp")]),t._v(" 格式。")]),t._v(" "),s("p",[s("strong",[t._v("注意：webp 格式在浏览器兼容上还有一定的问题，所以需要判断浏览器是否支持 webp 格式哦。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('function check_webp_feature(feature, callback) {\n var kTestImages = {\n lossy: "UklGRiIAAABXRUJQVlA4IBYAAAAwAQCdASoBAAEADsD+JaQAA3AAAAAA",\n lossless: "UklGRhoAAABXRUJQVlA4TA0AAAAvAAAAEAcQERGIiP4HAA==",\n alpha: "UklGRkoAAABXRUJQVlA4WAoAAAAQAAAAAAAAAAAAQUxQSAwAAAARBxAR/Q9ERP8DAABWUDggGAAAABQBAJ0BKgEAAQAAAP4AAA3AAP7mtQAAAA==",\n animation: "UklGRlIAAABXRUJQVlA4WAoAAAASAAAAAAAAAAAAQU5JTQYAAAD/////AABBTk1GJgAAAAAAAAAAAAAAAAAAAGQAAABWUDhMDQAAAC8AAAAQBxAREYiI/gcA"\n };\n var img = new Image();\n img.onload = function () {\n var result = (img.width > 0) && (img.height > 0);\n callback(feature, result);\n };\n img.onerror = function () {\n callback(feature, false);\n };\n img.src = "data:image/webp;base64," + kTestImages[feature];\n}')]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"感知性能优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#感知性能优化"}},[t._v("#")]),t._v(" 感知性能优化")]),t._v(" "),s("h3",{attrs:{id:"loading-加载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#loading-加载"}},[t._v("#")]),t._v(" loading 加载")]),t._v(" "),s("p",[t._v("江湖人称菊花图 ....")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/6/19/172cb8dda68617da?imageView2/0/w/1280/h/960/ignore-error/1",alt:""}})]),t._v(" "),s("p",[t._v("不过，现在对于加载的设计体验有了比菊花加载体验更棒的方法 。")]),t._v(" "),s("h3",{attrs:{id:"骨架屏"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#骨架屏"}},[t._v("#")]),t._v(" 骨架屏")]),t._v(" "),s("p",[t._v("骨架屏可以带来更好的用户体验，有很强的加载感。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/6/19/172cb8fa40b13ff3?imageslim",alt:""}})]),t._v(" "),s("p",[t._v("可惜的是，"),s("strong",[t._v("ElementUI")]),t._v(" 并没有提供骨架屏组件，反观 "),s("strong",[t._v("Antd")]),t._v(" ，真香...")]),t._v(" "),s("h3",{attrs:{id:"对比体验"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对比体验"}},[t._v("#")]),t._v(" 对比体验")]),t._v(" "),s("p",[t._v("第一个为骨架屏，第二个为菊花图，第三个为无优化，可以看到相比于传统的菊花图会在感官上觉得内容出现的流畅而不突兀，体验更加优良。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/6/20/172cf7463cd4cf71?imageslim",alt:""}})]),t._v(" "),s("h2",{attrs:{id:"结尾"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#结尾"}},[t._v("#")]),t._v(" 结尾")]),t._v(" "),s("p",[s("strong",[t._v("如果这篇文章帮助到了你，欢迎点赞和关注，搜索《海洋里的魔鬼鱼》加入我们的技术群一起学习讨论，共同探索前端的边界。")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/6/20/172d09f7c430c2f8?imageView2/0/w/1280/h/960/ignore-error/1",alt:""}})]),t._v(" "),s("p",[t._v("本文转自 "),s("a",{attrs:{href:"https://juejin.cn/post/6844904195707895816?share_token=766f422b-e349-4cb9-9986-4760987a9997",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://juejin.cn/post/6844904195707895816?share_token=766f422b-e349-4cb9-9986-4760987a9997"),s("OutboundLink")],1),t._v("，如有侵权，请联系删除。")])])}),[],!1,null,null,null);s.default=r.exports}}]);